// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Mumble.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MumbleProto {

  /// <summary>Holder for reflection information generated from Mumble.proto</summary>
  public static partial class MumbleReflection {

    #region Descriptor
    /// <summary>File descriptor for Mumble.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MumbleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxNdW1ibGUucHJvdG8SC011bWJsZVByb3RvImIKB1ZlcnNpb24SEgoKdmVy",
            "c2lvbl92MRgBIAEoDRISCgp2ZXJzaW9uX3YyGAUgASgEEg8KB3JlbGVhc2UY",
            "AiABKAkSCgoCb3MYAyABKAkSEgoKb3NfdmVyc2lvbhgEIAEoCSIbCglVRFBU",
            "dW5uZWwSDgoGcGFja2V0GAEgAigMIoYBCgxBdXRoZW50aWNhdGUSEAoIdXNl",
            "cm5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSDgoGdG9rZW5zGAMgAygJ",
            "EhUKDWNlbHRfdmVyc2lvbnMYBCADKAUSEwoEb3B1cxgFIAEoCDoFZmFsc2US",
            "FgoLY2xpZW50X3R5cGUYBiABKAU6ATAi1QEKBFBpbmcSEQoJdGltZXN0YW1w",
            "GAEgASgEEgwKBGdvb2QYAiABKA0SDAoEbGF0ZRgDIAEoDRIMCgRsb3N0GAQg",
            "ASgNEg4KBnJlc3luYxgFIAEoDRITCgt1ZHBfcGFja2V0cxgGIAEoDRITCgt0",
            "Y3BfcGFja2V0cxgHIAEoDRIUCgx1ZHBfcGluZ19hdmcYCCABKAISFAoMdWRw",
            "X3BpbmdfdmFyGAkgASgCEhQKDHRjcF9waW5nX2F2ZxgKIAEoAhIUCgx0Y3Bf",
            "cGluZ192YXIYCyABKAIi9wEKBlJlamVjdBIsCgR0eXBlGAEgASgOMh4uTXVt",
            "YmxlUHJvdG8uUmVqZWN0LlJlamVjdFR5cGUSDgoGcmVhc29uGAIgASgJIq4B",
            "CgpSZWplY3RUeXBlEggKBE5vbmUQABIQCgxXcm9uZ1ZlcnNpb24QARITCg9J",
            "bnZhbGlkVXNlcm5hbWUQAhIPCgtXcm9uZ1VzZXJQVxADEhEKDVdyb25nU2Vy",
            "dmVyUFcQBBIRCg1Vc2VybmFtZUluVXNlEAUSDgoKU2VydmVyRnVsbBAGEhEK",
            "DU5vQ2VydGlmaWNhdGUQBxIVChFBdXRoZW50aWNhdG9yRmFpbBAIIl8KClNl",
            "cnZlclN5bmMSDwoHc2Vzc2lvbhgBIAEoDRIVCg1tYXhfYmFuZHdpZHRoGAIg",
            "ASgNEhQKDHdlbGNvbWVfdGV4dBgDIAEoCRITCgtwZXJtaXNzaW9ucxgEIAEo",
            "BCIjCg1DaGFubmVsUmVtb3ZlEhIKCmNoYW5uZWxfaWQYASACKA0imQIKDENo",
            "YW5uZWxTdGF0ZRISCgpjaGFubmVsX2lkGAEgASgNEg4KBnBhcmVudBgCIAEo",
            "DRIMCgRuYW1lGAMgASgJEg0KBWxpbmtzGAQgAygNEhMKC2Rlc2NyaXB0aW9u",
            "GAUgASgJEhEKCWxpbmtzX2FkZBgGIAMoDRIUCgxsaW5rc19yZW1vdmUYByAD",
            "KA0SGAoJdGVtcG9yYXJ5GAggASgIOgVmYWxzZRITCghwb3NpdGlvbhgJIAEo",
            "BToBMBIYChBkZXNjcmlwdGlvbl9oYXNoGAogASgMEhEKCW1heF91c2VycxgL",
            "IAEoDRIbChNpc19lbnRlcl9yZXN0cmljdGVkGAwgASgIEhEKCWNhbl9lbnRl",
            "chgNIAEoCCJJCgpVc2VyUmVtb3ZlEg8KB3Nlc3Npb24YASACKA0SDQoFYWN0",
            "b3IYAiABKA0SDgoGcmVhc29uGAMgASgJEgsKA2JhbhgEIAEoCCLmBAoJVXNl",
            "clN0YXRlEg8KB3Nlc3Npb24YASABKA0SDQoFYWN0b3IYAiABKA0SDAoEbmFt",
            "ZRgDIAEoCRIPCgd1c2VyX2lkGAQgASgNEhIKCmNoYW5uZWxfaWQYBSABKA0S",
            "DAoEbXV0ZRgGIAEoCBIMCgRkZWFmGAcgASgIEhAKCHN1cHByZXNzGAggASgI",
            "EhEKCXNlbGZfbXV0ZRgJIAEoCBIRCglzZWxmX2RlYWYYCiABKAgSDwoHdGV4",
            "dHVyZRgLIAEoDBIWCg5wbHVnaW5fY29udGV4dBgMIAEoDBIXCg9wbHVnaW5f",
            "aWRlbnRpdHkYDSABKAkSDwoHY29tbWVudBgOIAEoCRIMCgRoYXNoGA8gASgJ",
            "EhQKDGNvbW1lbnRfaGFzaBgQIAEoDBIUCgx0ZXh0dXJlX2hhc2gYESABKAwS",
            "GAoQcHJpb3JpdHlfc3BlYWtlchgSIAEoCBIRCglyZWNvcmRpbmcYEyABKAgS",
            "HwoXdGVtcG9yYXJ5X2FjY2Vzc190b2tlbnMYFCADKAkSHQoVbGlzdGVuaW5n",
            "X2NoYW5uZWxfYWRkGBUgAygNEiAKGGxpc3RlbmluZ19jaGFubmVsX3JlbW92",
            "ZRgWIAMoDRJMChtsaXN0ZW5pbmdfdm9sdW1lX2FkanVzdG1lbnQYFyADKAsy",
            "Jy5NdW1ibGVQcm90by5Vc2VyU3RhdGUuVm9sdW1lQWRqdXN0bWVudBpIChBW",
            "b2x1bWVBZGp1c3RtZW50EhkKEWxpc3RlbmluZ19jaGFubmVsGAEgASgNEhkK",
            "EXZvbHVtZV9hZGp1c3RtZW50GAIgASgCIsQBCgdCYW5MaXN0EisKBGJhbnMY",
            "ASADKAsyHS5NdW1ibGVQcm90by5CYW5MaXN0LkJhbkVudHJ5EhQKBXF1ZXJ5",
            "GAIgASgIOgVmYWxzZRp2CghCYW5FbnRyeRIPCgdhZGRyZXNzGAEgAigMEgwK",
            "BG1hc2sYAiACKA0SDAoEbmFtZRgDIAEoCRIMCgRoYXNoGAQgASgJEg4KBnJl",
            "YXNvbhgFIAEoCRINCgVzdGFydBgGIAEoCRIQCghkdXJhdGlvbhgHIAEoDSJj",
            "CgtUZXh0TWVzc2FnZRINCgVhY3RvchgBIAEoDRIPCgdzZXNzaW9uGAIgAygN",
            "EhIKCmNoYW5uZWxfaWQYAyADKA0SDwoHdHJlZV9pZBgEIAMoDRIPCgdtZXNz",
            "YWdlGAUgAigJIqcDChBQZXJtaXNzaW9uRGVuaWVkEhIKCnBlcm1pc3Npb24Y",
            "ASABKA0SEgoKY2hhbm5lbF9pZBgCIAEoDRIPCgdzZXNzaW9uGAMgASgNEg4K",
            "BnJlYXNvbhgEIAEoCRI0CgR0eXBlGAUgASgOMiYuTXVtYmxlUHJvdG8uUGVy",
            "bWlzc2lvbkRlbmllZC5EZW55VHlwZRIMCgRuYW1lGAYgASgJIoUCCghEZW55",
            "VHlwZRIICgRUZXh0EAASDgoKUGVybWlzc2lvbhABEg0KCVN1cGVyVXNlchAC",
            "Eg8KC0NoYW5uZWxOYW1lEAMSDwoLVGV4dFRvb0xvbmcQBBIHCgNIOUsQBRIU",
            "ChBUZW1wb3JhcnlDaGFubmVsEAYSFgoSTWlzc2luZ0NlcnRpZmljYXRlEAcS",
            "DAoIVXNlck5hbWUQCBIPCgtDaGFubmVsRnVsbBAJEhAKDE5lc3RpbmdMaW1p",
            "dBAKEhUKEUNoYW5uZWxDb3VudExpbWl0EAsSGAoUQ2hhbm5lbExpc3RlbmVy",
            "TGltaXQQDBIVChFVc2VyTGlzdGVuZXJMaW1pdBANItQDCgNBQ0wSEgoKY2hh",
            "bm5lbF9pZBgBIAIoDRIaCgxpbmhlcml0X2FjbHMYAiABKAg6BHRydWUSKgoG",
            "Z3JvdXBzGAMgAygLMhouTXVtYmxlUHJvdG8uQUNMLkNoYW5Hcm91cBImCgRh",
            "Y2xzGAQgAygLMhguTXVtYmxlUHJvdG8uQUNMLkNoYW5BQ0wSFAoFcXVlcnkY",
            "BSABKAg6BWZhbHNlGpwBCglDaGFuR3JvdXASDAoEbmFtZRgBIAIoCRIXCglp",
            "bmhlcml0ZWQYAiABKAg6BHRydWUSFQoHaW5oZXJpdBgDIAEoCDoEdHJ1ZRIZ",
            "Cgtpbmhlcml0YWJsZRgEIAEoCDoEdHJ1ZRILCgNhZGQYBSADKA0SDgoGcmVt",
            "b3ZlGAYgAygNEhkKEWluaGVyaXRlZF9tZW1iZXJzGAcgAygNGpMBCgdDaGFu",
            "QUNMEhgKCmFwcGx5X2hlcmUYASABKAg6BHRydWUSGAoKYXBwbHlfc3VicxgC",
            "IAEoCDoEdHJ1ZRIXCglpbmhlcml0ZWQYAyABKAg6BHRydWUSDwoHdXNlcl9p",
            "ZBgEIAEoDRINCgVncm91cBgFIAEoCRINCgVncmFudBgGIAEoDRIMCgRkZW55",
            "GAcgASgNIigKClF1ZXJ5VXNlcnMSCwoDaWRzGAEgAygNEg0KBW5hbWVzGAIg",
            "AygJIkUKCkNyeXB0U2V0dXASCwoDa2V5GAEgASgMEhQKDGNsaWVudF9ub25j",
            "ZRgCIAEoDBIUCgxzZXJ2ZXJfbm9uY2UYAyABKAwi0wEKE0NvbnRleHRBY3Rp",
            "b25Nb2RpZnkSDgoGYWN0aW9uGAEgAigJEgwKBHRleHQYAiABKAkSDwoHY29u",
            "dGV4dBgDIAEoDRI9CglvcGVyYXRpb24YBCABKA4yKi5NdW1ibGVQcm90by5D",
            "b250ZXh0QWN0aW9uTW9kaWZ5Lk9wZXJhdGlvbiIsCgdDb250ZXh0EgoKBlNl",
            "cnZlchABEgsKB0NoYW5uZWwQAhIICgRVc2VyEAQiIAoJT3BlcmF0aW9uEgcK",
            "A0FkZBAAEgoKBlJlbW92ZRABIkQKDUNvbnRleHRBY3Rpb24SDwoHc2Vzc2lv",
            "bhgBIAEoDRISCgpjaGFubmVsX2lkGAIgASgNEg4KBmFjdGlvbhgDIAIoCSKF",
            "AQoIVXNlckxpc3QSKQoFdXNlcnMYASADKAsyGi5NdW1ibGVQcm90by5Vc2Vy",
            "TGlzdC5Vc2VyGk4KBFVzZXISDwoHdXNlcl9pZBgBIAIoDRIMCgRuYW1lGAIg",
            "ASgJEhEKCWxhc3Rfc2VlbhgDIAEoCRIUCgxsYXN0X2NoYW5uZWwYBCABKA0i",
            "uAEKC1ZvaWNlVGFyZ2V0EgoKAmlkGAEgASgNEjAKB3RhcmdldHMYAiADKAsy",
            "Hy5NdW1ibGVQcm90by5Wb2ljZVRhcmdldC5UYXJnZXQaawoGVGFyZ2V0Eg8K",
            "B3Nlc3Npb24YASADKA0SEgoKY2hhbm5lbF9pZBgCIAEoDRINCgVncm91cBgD",
            "IAEoCRIUCgVsaW5rcxgEIAEoCDoFZmFsc2USFwoIY2hpbGRyZW4YBSABKAg6",
            "BWZhbHNlIlAKD1Blcm1pc3Npb25RdWVyeRISCgpjaGFubmVsX2lkGAEgASgN",
            "EhMKC3Blcm1pc3Npb25zGAIgASgNEhQKBWZsdXNoGAMgASgIOgVmYWxzZSJc",
            "CgxDb2RlY1ZlcnNpb24SDQoFYWxwaGEYASACKAUSDAoEYmV0YRgCIAIoBRIa",
            "CgxwcmVmZXJfYWxwaGEYAyACKAg6BHRydWUSEwoEb3B1cxgEIAEoCDoFZmFs",
            "c2UiuAQKCVVzZXJTdGF0cxIPCgdzZXNzaW9uGAEgASgNEhkKCnN0YXRzX29u",
            "bHkYAiABKAg6BWZhbHNlEhQKDGNlcnRpZmljYXRlcxgDIAMoDBIxCgtmcm9t",
            "X2NsaWVudBgEIAEoCzIcLk11bWJsZVByb3RvLlVzZXJTdGF0cy5TdGF0cxIx",
            "Cgtmcm9tX3NlcnZlchgFIAEoCzIcLk11bWJsZVByb3RvLlVzZXJTdGF0cy5T",
            "dGF0cxITCgt1ZHBfcGFja2V0cxgGIAEoDRITCgt0Y3BfcGFja2V0cxgHIAEo",
            "DRIUCgx1ZHBfcGluZ19hdmcYCCABKAISFAoMdWRwX3BpbmdfdmFyGAkgASgC",
            "EhQKDHRjcF9waW5nX2F2ZxgKIAEoAhIUCgx0Y3BfcGluZ192YXIYCyABKAIS",
            "JQoHdmVyc2lvbhgMIAEoCzIULk11bWJsZVByb3RvLlZlcnNpb24SFQoNY2Vs",
            "dF92ZXJzaW9ucxgNIAMoBRIPCgdhZGRyZXNzGA4gASgMEhEKCWJhbmR3aWR0",
            "aBgPIAEoDRISCgpvbmxpbmVzZWNzGBAgASgNEhAKCGlkbGVzZWNzGBEgASgN",
            "EiEKEnN0cm9uZ19jZXJ0aWZpY2F0ZRgSIAEoCDoFZmFsc2USEwoEb3B1cxgT",
            "IAEoCDoFZmFsc2UaQQoFU3RhdHMSDAoEZ29vZBgBIAEoDRIMCgRsYXRlGAIg",
            "ASgNEgwKBGxvc3QYAyABKA0SDgoGcmVzeW5jGAQgASgNIlwKC1JlcXVlc3RC",
            "bG9iEhcKD3Nlc3Npb25fdGV4dHVyZRgBIAMoDRIXCg9zZXNzaW9uX2NvbW1l",
            "bnQYAiADKA0SGwoTY2hhbm5lbF9kZXNjcmlwdGlvbhgDIAMoDSKzAQoMU2Vy",
            "dmVyQ29uZmlnEhUKDW1heF9iYW5kd2lkdGgYASABKA0SFAoMd2VsY29tZV90",
            "ZXh0GAIgASgJEhIKCmFsbG93X2h0bWwYAyABKAgSFgoObWVzc2FnZV9sZW5n",
            "dGgYBCABKA0SHAoUaW1hZ2VfbWVzc2FnZV9sZW5ndGgYBSABKA0SEQoJbWF4",
            "X3VzZXJzGAYgASgNEhkKEXJlY29yZGluZ19hbGxvd2VkGAcgASgIImEKDVN1",
            "Z2dlc3RDb25maWcSEgoKdmVyc2lvbl92MRgBIAEoDRISCgp2ZXJzaW9uX3Yy",
            "GAQgASgEEhIKCnBvc2l0aW9uYWwYAiABKAgSFAoMcHVzaF90b190YWxrGAMg",
            "ASgIImsKFlBsdWdpbkRhdGFUcmFuc21pc3Npb24SFQoNc2VuZGVyU2Vzc2lv",
            "bhgBIAEoDRIcChByZWNlaXZlclNlc3Npb25zGAIgAygNQgIQARIMCgRkYXRh",
            "GAMgASgMEg4KBmRhdGFJRBgEIAEoCUICSAE="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.Version), global::MumbleProto.Version.Parser, new[]{ "VersionV1", "VersionV2", "Release", "Os", "OsVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UDPTunnel), global::MumbleProto.UDPTunnel.Parser, new[]{ "Packet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.Authenticate), global::MumbleProto.Authenticate.Parser, new[]{ "Username", "Password", "Tokens", "CeltVersions", "Opus", "ClientType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.Ping), global::MumbleProto.Ping.Parser, new[]{ "Timestamp", "Good", "Late", "Lost", "Resync", "UdpPackets", "TcpPackets", "UdpPingAvg", "UdpPingVar", "TcpPingAvg", "TcpPingVar" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.Reject), global::MumbleProto.Reject.Parser, new[]{ "Type", "Reason" }, null, new[]{ typeof(global::MumbleProto.Reject.Types.RejectType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ServerSync), global::MumbleProto.ServerSync.Parser, new[]{ "Session", "MaxBandwidth", "WelcomeText", "Permissions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ChannelRemove), global::MumbleProto.ChannelRemove.Parser, new[]{ "ChannelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ChannelState), global::MumbleProto.ChannelState.Parser, new[]{ "ChannelId", "Parent", "Name", "Links", "Description", "LinksAdd", "LinksRemove", "Temporary", "Position", "DescriptionHash", "MaxUsers", "IsEnterRestricted", "CanEnter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserRemove), global::MumbleProto.UserRemove.Parser, new[]{ "Session", "Actor", "Reason", "Ban" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserState), global::MumbleProto.UserState.Parser, new[]{ "Session", "Actor", "Name", "UserId", "ChannelId", "Mute", "Deaf", "Suppress", "SelfMute", "SelfDeaf", "Texture", "PluginContext", "PluginIdentity", "Comment", "Hash", "CommentHash", "TextureHash", "PrioritySpeaker", "Recording", "TemporaryAccessTokens", "ListeningChannelAdd", "ListeningChannelRemove", "ListeningVolumeAdjustment" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserState.Types.VolumeAdjustment), global::MumbleProto.UserState.Types.VolumeAdjustment.Parser, new[]{ "ListeningChannel", "VolumeAdjustment_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.BanList), global::MumbleProto.BanList.Parser, new[]{ "Bans", "Query" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.BanList.Types.BanEntry), global::MumbleProto.BanList.Types.BanEntry.Parser, new[]{ "Address", "Mask", "Name", "Hash", "Reason", "Start", "Duration" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.TextMessage), global::MumbleProto.TextMessage.Parser, new[]{ "Actor", "Session", "ChannelId", "TreeId", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.PermissionDenied), global::MumbleProto.PermissionDenied.Parser, new[]{ "Permission", "ChannelId", "Session", "Reason", "Type", "Name" }, null, new[]{ typeof(global::MumbleProto.PermissionDenied.Types.DenyType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ACL), global::MumbleProto.ACL.Parser, new[]{ "ChannelId", "InheritAcls", "Groups", "Acls", "Query" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ACL.Types.ChanGroup), global::MumbleProto.ACL.Types.ChanGroup.Parser, new[]{ "Name", "Inherited", "Inherit", "Inheritable", "Add", "Remove", "InheritedMembers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ACL.Types.ChanACL), global::MumbleProto.ACL.Types.ChanACL.Parser, new[]{ "ApplyHere", "ApplySubs", "Inherited", "UserId", "Group", "Grant", "Deny" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.QueryUsers), global::MumbleProto.QueryUsers.Parser, new[]{ "Ids", "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.CryptSetup), global::MumbleProto.CryptSetup.Parser, new[]{ "Key", "ClientNonce", "ServerNonce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ContextActionModify), global::MumbleProto.ContextActionModify.Parser, new[]{ "Action", "Text", "Context", "Operation" }, null, new[]{ typeof(global::MumbleProto.ContextActionModify.Types.Context), typeof(global::MumbleProto.ContextActionModify.Types.Operation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ContextAction), global::MumbleProto.ContextAction.Parser, new[]{ "Session", "ChannelId", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserList), global::MumbleProto.UserList.Parser, new[]{ "Users" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserList.Types.User), global::MumbleProto.UserList.Types.User.Parser, new[]{ "UserId", "Name", "LastSeen", "LastChannel" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.VoiceTarget), global::MumbleProto.VoiceTarget.Parser, new[]{ "Id", "Targets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.VoiceTarget.Types.Target), global::MumbleProto.VoiceTarget.Types.Target.Parser, new[]{ "Session", "ChannelId", "Group", "Links", "Children" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.PermissionQuery), global::MumbleProto.PermissionQuery.Parser, new[]{ "ChannelId", "Permissions", "Flush" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.CodecVersion), global::MumbleProto.CodecVersion.Parser, new[]{ "Alpha", "Beta", "PreferAlpha", "Opus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserStats), global::MumbleProto.UserStats.Parser, new[]{ "Session", "StatsOnly", "Certificates", "FromClient", "FromServer", "UdpPackets", "TcpPackets", "UdpPingAvg", "UdpPingVar", "TcpPingAvg", "TcpPingVar", "Version", "CeltVersions", "Address", "Bandwidth", "Onlinesecs", "Idlesecs", "StrongCertificate", "Opus" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.UserStats.Types.Stats), global::MumbleProto.UserStats.Types.Stats.Parser, new[]{ "Good", "Late", "Lost", "Resync" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.RequestBlob), global::MumbleProto.RequestBlob.Parser, new[]{ "SessionTexture", "SessionComment", "ChannelDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.ServerConfig), global::MumbleProto.ServerConfig.Parser, new[]{ "MaxBandwidth", "WelcomeText", "AllowHtml", "MessageLength", "ImageMessageLength", "MaxUsers", "RecordingAllowed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.SuggestConfig), global::MumbleProto.SuggestConfig.Parser, new[]{ "VersionV1", "VersionV2", "Positional", "PushToTalk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MumbleProto.PluginDataTransmission), global::MumbleProto.PluginDataTransmission.Parser, new[]{ "SenderSession", "ReceiverSessions", "Data", "DataID" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Version : pb::IMessage<Version>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Version> _parser = new pb::MessageParser<Version>(() => new Version());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Version> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version(Version other) : this() {
      _hasBits0 = other._hasBits0;
      versionV1_ = other.versionV1_;
      versionV2_ = other.versionV2_;
      release_ = other.release_;
      os_ = other.os_;
      osVersion_ = other.osVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Version Clone() {
      return new Version(this);
    }

    /// <summary>Field number for the "version_v1" field.</summary>
    public const int VersionV1FieldNumber = 1;
    private readonly static uint VersionV1DefaultValue = 0;

    private uint versionV1_;
    /// <summary>
    /// Legacy version number format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VersionV1 {
      get { if ((_hasBits0 & 1) != 0) { return versionV1_; } else { return VersionV1DefaultValue; } }
      set {
        _hasBits0 |= 1;
        versionV1_ = value;
      }
    }
    /// <summary>Gets whether the "version_v1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersionV1 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version_v1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersionV1() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "version_v2" field.</summary>
    public const int VersionV2FieldNumber = 5;
    private readonly static ulong VersionV2DefaultValue = 0UL;

    private ulong versionV2_;
    /// <summary>
    /// New version number format.
    /// Necessary since patch level may exceed 255. (See https://github.com/mumble-voip/mumble/issues/5827)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VersionV2 {
      get { if ((_hasBits0 & 2) != 0) { return versionV2_; } else { return VersionV2DefaultValue; } }
      set {
        _hasBits0 |= 2;
        versionV2_ = value;
      }
    }
    /// <summary>Gets whether the "version_v2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersionV2 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "version_v2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersionV2() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "release" field.</summary>
    public const int ReleaseFieldNumber = 2;
    private readonly static string ReleaseDefaultValue = "";

    private string release_;
    /// <summary>
    /// Client release name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Release {
      get { return release_ ?? ReleaseDefaultValue; }
      set {
        release_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "release" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRelease {
      get { return release_ != null; }
    }
    /// <summary>Clears the value of the "release" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRelease() {
      release_ = null;
    }

    /// <summary>Field number for the "os" field.</summary>
    public const int OsFieldNumber = 3;
    private readonly static string OsDefaultValue = "";

    private string os_;
    /// <summary>
    /// Client OS name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Os {
      get { return os_ ?? OsDefaultValue; }
      set {
        os_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "os" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOs {
      get { return os_ != null; }
    }
    /// <summary>Clears the value of the "os" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOs() {
      os_ = null;
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 4;
    private readonly static string OsVersionDefaultValue = "";

    private string osVersion_;
    /// <summary>
    /// Client OS version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OsVersion {
      get { return osVersion_ ?? OsVersionDefaultValue; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "os_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOsVersion {
      get { return osVersion_ != null; }
    }
    /// <summary>Clears the value of the "os_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOsVersion() {
      osVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Version);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Version other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionV1 != other.VersionV1) return false;
      if (VersionV2 != other.VersionV2) return false;
      if (Release != other.Release) return false;
      if (Os != other.Os) return false;
      if (OsVersion != other.OsVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionV1) hash ^= VersionV1.GetHashCode();
      if (HasVersionV2) hash ^= VersionV2.GetHashCode();
      if (HasRelease) hash ^= Release.GetHashCode();
      if (HasOs) hash ^= Os.GetHashCode();
      if (HasOsVersion) hash ^= OsVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionV1) {
        output.WriteRawTag(8);
        output.WriteUInt32(VersionV1);
      }
      if (HasRelease) {
        output.WriteRawTag(18);
        output.WriteString(Release);
      }
      if (HasOs) {
        output.WriteRawTag(26);
        output.WriteString(Os);
      }
      if (HasOsVersion) {
        output.WriteRawTag(34);
        output.WriteString(OsVersion);
      }
      if (HasVersionV2) {
        output.WriteRawTag(40);
        output.WriteUInt64(VersionV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionV1) {
        output.WriteRawTag(8);
        output.WriteUInt32(VersionV1);
      }
      if (HasRelease) {
        output.WriteRawTag(18);
        output.WriteString(Release);
      }
      if (HasOs) {
        output.WriteRawTag(26);
        output.WriteString(Os);
      }
      if (HasOsVersion) {
        output.WriteRawTag(34);
        output.WriteString(OsVersion);
      }
      if (HasVersionV2) {
        output.WriteRawTag(40);
        output.WriteUInt64(VersionV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionV1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VersionV1);
      }
      if (HasVersionV2) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VersionV2);
      }
      if (HasRelease) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Release);
      }
      if (HasOs) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Os);
      }
      if (HasOsVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Version other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionV1) {
        VersionV1 = other.VersionV1;
      }
      if (other.HasVersionV2) {
        VersionV2 = other.VersionV2;
      }
      if (other.HasRelease) {
        Release = other.Release;
      }
      if (other.HasOs) {
        Os = other.Os;
      }
      if (other.HasOsVersion) {
        OsVersion = other.OsVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VersionV1 = input.ReadUInt32();
            break;
          }
          case 18: {
            Release = input.ReadString();
            break;
          }
          case 26: {
            Os = input.ReadString();
            break;
          }
          case 34: {
            OsVersion = input.ReadString();
            break;
          }
          case 40: {
            VersionV2 = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VersionV1 = input.ReadUInt32();
            break;
          }
          case 18: {
            Release = input.ReadString();
            break;
          }
          case 26: {
            Os = input.ReadString();
            break;
          }
          case 34: {
            OsVersion = input.ReadString();
            break;
          }
          case 40: {
            VersionV2 = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Not used. Not even for tunneling UDP through TCP.
  /// </summary>
  public sealed partial class UDPTunnel : pb::IMessage<UDPTunnel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UDPTunnel> _parser = new pb::MessageParser<UDPTunnel>(() => new UDPTunnel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UDPTunnel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UDPTunnel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UDPTunnel(UDPTunnel other) : this() {
      packet_ = other.packet_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UDPTunnel Clone() {
      return new UDPTunnel(this);
    }

    /// <summary>Field number for the "packet" field.</summary>
    public const int PacketFieldNumber = 1;
    private readonly static pb::ByteString PacketDefaultValue = pb::ByteString.Empty;

    private pb::ByteString packet_;
    /// <summary>
    /// Not used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Packet {
      get { return packet_ ?? PacketDefaultValue; }
      set {
        packet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "packet" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPacket {
      get { return packet_ != null; }
    }
    /// <summary>Clears the value of the "packet" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPacket() {
      packet_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UDPTunnel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UDPTunnel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Packet != other.Packet) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPacket) hash ^= Packet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPacket) {
        output.WriteRawTag(10);
        output.WriteBytes(Packet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPacket) {
        output.WriteRawTag(10);
        output.WriteBytes(Packet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPacket) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Packet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UDPTunnel other) {
      if (other == null) {
        return;
      }
      if (other.HasPacket) {
        Packet = other.Packet;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Packet = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Packet = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used by the client to send the authentication credentials to the server.
  /// </summary>
  public sealed partial class Authenticate : pb::IMessage<Authenticate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Authenticate> _parser = new pb::MessageParser<Authenticate>(() => new Authenticate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Authenticate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Authenticate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Authenticate(Authenticate other) : this() {
      _hasBits0 = other._hasBits0;
      username_ = other.username_;
      password_ = other.password_;
      tokens_ = other.tokens_.Clone();
      celtVersions_ = other.celtVersions_.Clone();
      opus_ = other.opus_;
      clientType_ = other.clientType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Authenticate Clone() {
      return new Authenticate(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    /// <summary>
    /// UTF-8 encoded username.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    /// <summary>
    /// Server or user password.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    /// <summary>Field number for the "tokens" field.</summary>
    public const int TokensFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_tokens_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> tokens_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Additional access tokens for server ACL groups.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Tokens {
      get { return tokens_; }
    }

    /// <summary>Field number for the "celt_versions" field.</summary>
    public const int CeltVersionsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_celtVersions_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> celtVersions_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// A list of CELT bitstream version constants supported by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CeltVersions {
      get { return celtVersions_; }
    }

    /// <summary>Field number for the "opus" field.</summary>
    public const int OpusFieldNumber = 5;
    private readonly static bool OpusDefaultValue = false;

    private bool opus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Opus {
      get { if ((_hasBits0 & 1) != 0) { return opus_; } else { return OpusDefaultValue; } }
      set {
        _hasBits0 |= 1;
        opus_ = value;
      }
    }
    /// <summary>Gets whether the "opus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpus {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "opus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpus() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_type" field.</summary>
    public const int ClientTypeFieldNumber = 6;
    private readonly static int ClientTypeDefaultValue = 0;

    private int clientType_;
    /// <summary>
    /// 0 = REGULAR, 1 = BOT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ClientType {
      get { if ((_hasBits0 & 2) != 0) { return clientType_; } else { return ClientTypeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clientType_ = value;
      }
    }
    /// <summary>Gets whether the "client_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientType {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "client_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientType() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Authenticate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Authenticate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if(!tokens_.Equals(other.tokens_)) return false;
      if(!celtVersions_.Equals(other.celtVersions_)) return false;
      if (Opus != other.Opus) return false;
      if (ClientType != other.ClientType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      hash ^= tokens_.GetHashCode();
      hash ^= celtVersions_.GetHashCode();
      if (HasOpus) hash ^= Opus.GetHashCode();
      if (HasClientType) hash ^= ClientType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      tokens_.WriteTo(output, _repeated_tokens_codec);
      celtVersions_.WriteTo(output, _repeated_celtVersions_codec);
      if (HasOpus) {
        output.WriteRawTag(40);
        output.WriteBool(Opus);
      }
      if (HasClientType) {
        output.WriteRawTag(48);
        output.WriteInt32(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      tokens_.WriteTo(ref output, _repeated_tokens_codec);
      celtVersions_.WriteTo(ref output, _repeated_celtVersions_codec);
      if (HasOpus) {
        output.WriteRawTag(40);
        output.WriteBool(Opus);
      }
      if (HasClientType) {
        output.WriteRawTag(48);
        output.WriteInt32(ClientType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      size += tokens_.CalculateSize(_repeated_tokens_codec);
      size += celtVersions_.CalculateSize(_repeated_celtVersions_codec);
      if (HasOpus) {
        size += 1 + 1;
      }
      if (HasClientType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Authenticate other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      tokens_.Add(other.tokens_);
      celtVersions_.Add(other.celtVersions_);
      if (other.HasOpus) {
        Opus = other.Opus;
      }
      if (other.HasClientType) {
        ClientType = other.ClientType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            tokens_.AddEntriesFrom(input, _repeated_tokens_codec);
            break;
          }
          case 34:
          case 32: {
            celtVersions_.AddEntriesFrom(input, _repeated_celtVersions_codec);
            break;
          }
          case 40: {
            Opus = input.ReadBool();
            break;
          }
          case 48: {
            ClientType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            tokens_.AddEntriesFrom(ref input, _repeated_tokens_codec);
            break;
          }
          case 34:
          case 32: {
            celtVersions_.AddEntriesFrom(ref input, _repeated_celtVersions_codec);
            break;
          }
          case 40: {
            Opus = input.ReadBool();
            break;
          }
          case 48: {
            ClientType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the client to notify the server that the client is still alive.
  /// Server must reply to the packet with the same timestamp and its own
  /// good/late/lost/resync numbers. None of the fields is strictly required.
  /// </summary>
  public sealed partial class Ping : pb::IMessage<Ping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping(Ping other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      good_ = other.good_;
      late_ = other.late_;
      lost_ = other.lost_;
      resync_ = other.resync_;
      udpPackets_ = other.udpPackets_;
      tcpPackets_ = other.tcpPackets_;
      udpPingAvg_ = other.udpPingAvg_;
      udpPingVar_ = other.udpPingVar_;
      tcpPingAvg_ = other.tcpPingAvg_;
      tcpPingVar_ = other.tcpPingVar_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Ping Clone() {
      return new Ping(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    /// <summary>
    /// Client timestamp. Server should not attempt to decode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "good" field.</summary>
    public const int GoodFieldNumber = 2;
    private readonly static uint GoodDefaultValue = 0;

    private uint good_;
    /// <summary>
    /// The amount of good packets received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Good {
      get { if ((_hasBits0 & 2) != 0) { return good_; } else { return GoodDefaultValue; } }
      set {
        _hasBits0 |= 2;
        good_ = value;
      }
    }
    /// <summary>Gets whether the "good" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGood {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "good" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGood() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "late" field.</summary>
    public const int LateFieldNumber = 3;
    private readonly static uint LateDefaultValue = 0;

    private uint late_;
    /// <summary>
    /// The amount of late packets received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Late {
      get { if ((_hasBits0 & 4) != 0) { return late_; } else { return LateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        late_ = value;
      }
    }
    /// <summary>Gets whether the "late" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLate {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "late" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLate() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "lost" field.</summary>
    public const int LostFieldNumber = 4;
    private readonly static uint LostDefaultValue = 0;

    private uint lost_;
    /// <summary>
    /// The amount of packets never received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Lost {
      get { if ((_hasBits0 & 8) != 0) { return lost_; } else { return LostDefaultValue; } }
      set {
        _hasBits0 |= 8;
        lost_ = value;
      }
    }
    /// <summary>Gets whether the "lost" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLost {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "lost" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLost() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "resync" field.</summary>
    public const int ResyncFieldNumber = 5;
    private readonly static uint ResyncDefaultValue = 0;

    private uint resync_;
    /// <summary>
    /// The amount of nonce resyncs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Resync {
      get { if ((_hasBits0 & 16) != 0) { return resync_; } else { return ResyncDefaultValue; } }
      set {
        _hasBits0 |= 16;
        resync_ = value;
      }
    }
    /// <summary>Gets whether the "resync" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasResync {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "resync" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearResync() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "udp_packets" field.</summary>
    public const int UdpPacketsFieldNumber = 6;
    private readonly static uint UdpPacketsDefaultValue = 0;

    private uint udpPackets_;
    /// <summary>
    /// The total amount of UDP packets received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UdpPackets {
      get { if ((_hasBits0 & 32) != 0) { return udpPackets_; } else { return UdpPacketsDefaultValue; } }
      set {
        _hasBits0 |= 32;
        udpPackets_ = value;
      }
    }
    /// <summary>Gets whether the "udp_packets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPackets {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "udp_packets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPackets() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "tcp_packets" field.</summary>
    public const int TcpPacketsFieldNumber = 7;
    private readonly static uint TcpPacketsDefaultValue = 0;

    private uint tcpPackets_;
    /// <summary>
    /// The total amount of TCP packets received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TcpPackets {
      get { if ((_hasBits0 & 64) != 0) { return tcpPackets_; } else { return TcpPacketsDefaultValue; } }
      set {
        _hasBits0 |= 64;
        tcpPackets_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_packets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPackets {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "tcp_packets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPackets() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "udp_ping_avg" field.</summary>
    public const int UdpPingAvgFieldNumber = 8;
    private readonly static float UdpPingAvgDefaultValue = 0F;

    private float udpPingAvg_;
    /// <summary>
    /// UDP ping average.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UdpPingAvg {
      get { if ((_hasBits0 & 128) != 0) { return udpPingAvg_; } else { return UdpPingAvgDefaultValue; } }
      set {
        _hasBits0 |= 128;
        udpPingAvg_ = value;
      }
    }
    /// <summary>Gets whether the "udp_ping_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPingAvg {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "udp_ping_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPingAvg() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "udp_ping_var" field.</summary>
    public const int UdpPingVarFieldNumber = 9;
    private readonly static float UdpPingVarDefaultValue = 0F;

    private float udpPingVar_;
    /// <summary>
    /// UDP ping variance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UdpPingVar {
      get { if ((_hasBits0 & 256) != 0) { return udpPingVar_; } else { return UdpPingVarDefaultValue; } }
      set {
        _hasBits0 |= 256;
        udpPingVar_ = value;
      }
    }
    /// <summary>Gets whether the "udp_ping_var" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPingVar {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "udp_ping_var" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPingVar() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "tcp_ping_avg" field.</summary>
    public const int TcpPingAvgFieldNumber = 10;
    private readonly static float TcpPingAvgDefaultValue = 0F;

    private float tcpPingAvg_;
    /// <summary>
    /// TCP ping average.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TcpPingAvg {
      get { if ((_hasBits0 & 512) != 0) { return tcpPingAvg_; } else { return TcpPingAvgDefaultValue; } }
      set {
        _hasBits0 |= 512;
        tcpPingAvg_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_ping_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPingAvg {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "tcp_ping_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPingAvg() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "tcp_ping_var" field.</summary>
    public const int TcpPingVarFieldNumber = 11;
    private readonly static float TcpPingVarDefaultValue = 0F;

    private float tcpPingVar_;
    /// <summary>
    /// TCP ping variance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TcpPingVar {
      get { if ((_hasBits0 & 1024) != 0) { return tcpPingVar_; } else { return TcpPingVarDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        tcpPingVar_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_ping_var" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPingVar {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "tcp_ping_var" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPingVar() {
      _hasBits0 &= ~1024;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (Good != other.Good) return false;
      if (Late != other.Late) return false;
      if (Lost != other.Lost) return false;
      if (Resync != other.Resync) return false;
      if (UdpPackets != other.UdpPackets) return false;
      if (TcpPackets != other.TcpPackets) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UdpPingAvg, other.UdpPingAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UdpPingVar, other.UdpPingVar)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TcpPingAvg, other.TcpPingAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TcpPingVar, other.TcpPingVar)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasGood) hash ^= Good.GetHashCode();
      if (HasLate) hash ^= Late.GetHashCode();
      if (HasLost) hash ^= Lost.GetHashCode();
      if (HasResync) hash ^= Resync.GetHashCode();
      if (HasUdpPackets) hash ^= UdpPackets.GetHashCode();
      if (HasTcpPackets) hash ^= TcpPackets.GetHashCode();
      if (HasUdpPingAvg) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UdpPingAvg);
      if (HasUdpPingVar) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UdpPingVar);
      if (HasTcpPingAvg) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TcpPingAvg);
      if (HasTcpPingVar) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TcpPingVar);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (HasGood) {
        output.WriteRawTag(16);
        output.WriteUInt32(Good);
      }
      if (HasLate) {
        output.WriteRawTag(24);
        output.WriteUInt32(Late);
      }
      if (HasLost) {
        output.WriteRawTag(32);
        output.WriteUInt32(Lost);
      }
      if (HasResync) {
        output.WriteRawTag(40);
        output.WriteUInt32(Resync);
      }
      if (HasUdpPackets) {
        output.WriteRawTag(48);
        output.WriteUInt32(UdpPackets);
      }
      if (HasTcpPackets) {
        output.WriteRawTag(56);
        output.WriteUInt32(TcpPackets);
      }
      if (HasUdpPingAvg) {
        output.WriteRawTag(69);
        output.WriteFloat(UdpPingAvg);
      }
      if (HasUdpPingVar) {
        output.WriteRawTag(77);
        output.WriteFloat(UdpPingVar);
      }
      if (HasTcpPingAvg) {
        output.WriteRawTag(85);
        output.WriteFloat(TcpPingAvg);
      }
      if (HasTcpPingVar) {
        output.WriteRawTag(93);
        output.WriteFloat(TcpPingVar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (HasGood) {
        output.WriteRawTag(16);
        output.WriteUInt32(Good);
      }
      if (HasLate) {
        output.WriteRawTag(24);
        output.WriteUInt32(Late);
      }
      if (HasLost) {
        output.WriteRawTag(32);
        output.WriteUInt32(Lost);
      }
      if (HasResync) {
        output.WriteRawTag(40);
        output.WriteUInt32(Resync);
      }
      if (HasUdpPackets) {
        output.WriteRawTag(48);
        output.WriteUInt32(UdpPackets);
      }
      if (HasTcpPackets) {
        output.WriteRawTag(56);
        output.WriteUInt32(TcpPackets);
      }
      if (HasUdpPingAvg) {
        output.WriteRawTag(69);
        output.WriteFloat(UdpPingAvg);
      }
      if (HasUdpPingVar) {
        output.WriteRawTag(77);
        output.WriteFloat(UdpPingVar);
      }
      if (HasTcpPingAvg) {
        output.WriteRawTag(85);
        output.WriteFloat(TcpPingAvg);
      }
      if (HasTcpPingVar) {
        output.WriteRawTag(93);
        output.WriteFloat(TcpPingVar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (HasGood) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Good);
      }
      if (HasLate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Late);
      }
      if (HasLost) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lost);
      }
      if (HasResync) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Resync);
      }
      if (HasUdpPackets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UdpPackets);
      }
      if (HasTcpPackets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TcpPackets);
      }
      if (HasUdpPingAvg) {
        size += 1 + 4;
      }
      if (HasUdpPingVar) {
        size += 1 + 4;
      }
      if (HasTcpPingAvg) {
        size += 1 + 4;
      }
      if (HasTcpPingVar) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasGood) {
        Good = other.Good;
      }
      if (other.HasLate) {
        Late = other.Late;
      }
      if (other.HasLost) {
        Lost = other.Lost;
      }
      if (other.HasResync) {
        Resync = other.Resync;
      }
      if (other.HasUdpPackets) {
        UdpPackets = other.UdpPackets;
      }
      if (other.HasTcpPackets) {
        TcpPackets = other.TcpPackets;
      }
      if (other.HasUdpPingAvg) {
        UdpPingAvg = other.UdpPingAvg;
      }
      if (other.HasUdpPingVar) {
        UdpPingVar = other.UdpPingVar;
      }
      if (other.HasTcpPingAvg) {
        TcpPingAvg = other.TcpPingAvg;
      }
      if (other.HasTcpPingVar) {
        TcpPingVar = other.TcpPingVar;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 16: {
            Good = input.ReadUInt32();
            break;
          }
          case 24: {
            Late = input.ReadUInt32();
            break;
          }
          case 32: {
            Lost = input.ReadUInt32();
            break;
          }
          case 40: {
            Resync = input.ReadUInt32();
            break;
          }
          case 48: {
            UdpPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            TcpPackets = input.ReadUInt32();
            break;
          }
          case 69: {
            UdpPingAvg = input.ReadFloat();
            break;
          }
          case 77: {
            UdpPingVar = input.ReadFloat();
            break;
          }
          case 85: {
            TcpPingAvg = input.ReadFloat();
            break;
          }
          case 93: {
            TcpPingVar = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 16: {
            Good = input.ReadUInt32();
            break;
          }
          case 24: {
            Late = input.ReadUInt32();
            break;
          }
          case 32: {
            Lost = input.ReadUInt32();
            break;
          }
          case 40: {
            Resync = input.ReadUInt32();
            break;
          }
          case 48: {
            UdpPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            TcpPackets = input.ReadUInt32();
            break;
          }
          case 69: {
            UdpPingAvg = input.ReadFloat();
            break;
          }
          case 77: {
            UdpPingVar = input.ReadFloat();
            break;
          }
          case 85: {
            TcpPingAvg = input.ReadFloat();
            break;
          }
          case 93: {
            TcpPingVar = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the server when it rejects the user connection.
  /// </summary>
  public sealed partial class Reject : pb::IMessage<Reject>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Reject> _parser = new pb::MessageParser<Reject>(() => new Reject());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Reject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reject(Reject other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Reject Clone() {
      return new Reject(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::MumbleProto.Reject.Types.RejectType TypeDefaultValue = global::MumbleProto.Reject.Types.RejectType.None;

    private global::MumbleProto.Reject.Types.RejectType type_;
    /// <summary>
    /// Rejection type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.Reject.Types.RejectType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// Human readable rejection reason.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Reject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Reject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasReason) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Reject other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::MumbleProto.Reject.Types.RejectType) input.ReadEnum();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::MumbleProto.Reject.Types.RejectType) input.ReadEnum();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Reject message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum RejectType {
        /// <summary>
        /// The rejection reason is unknown (details should be available
        /// in Reject.reason).
        /// </summary>
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        /// The client attempted to connect with an incompatible version.
        /// </summary>
        [pbr::OriginalName("WrongVersion")] WrongVersion = 1,
        /// <summary>
        /// The user name supplied by the client was invalid.
        /// </summary>
        [pbr::OriginalName("InvalidUsername")] InvalidUsername = 2,
        /// <summary>
        /// The client attempted to authenticate as a user with a password but it
        /// was wrong.
        /// </summary>
        [pbr::OriginalName("WrongUserPW")] WrongUserPw = 3,
        /// <summary>
        /// The client attempted to connect to a passworded server but the password
        /// was wrong.
        /// </summary>
        [pbr::OriginalName("WrongServerPW")] WrongServerPw = 4,
        /// <summary>
        /// Supplied username is already in use.
        /// </summary>
        [pbr::OriginalName("UsernameInUse")] UsernameInUse = 5,
        /// <summary>
        /// Server is currently full and cannot accept more users.
        /// </summary>
        [pbr::OriginalName("ServerFull")] ServerFull = 6,
        /// <summary>
        /// The user did not provide a certificate but one is required.
        /// </summary>
        [pbr::OriginalName("NoCertificate")] NoCertificate = 7,
        [pbr::OriginalName("AuthenticatorFail")] AuthenticatorFail = 8,
      }

    }
    #endregion

  }

  /// <summary>
  /// ServerSync message is sent by the server when it has authenticated the user
  /// and finished synchronizing the server state.
  /// </summary>
  public sealed partial class ServerSync : pb::IMessage<ServerSync>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerSync> _parser = new pb::MessageParser<ServerSync>(() => new ServerSync());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerSync> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSync() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSync(ServerSync other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      maxBandwidth_ = other.maxBandwidth_;
      welcomeText_ = other.welcomeText_;
      permissions_ = other.permissions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSync Clone() {
      return new ServerSync(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// The session of the current user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_bandwidth" field.</summary>
    public const int MaxBandwidthFieldNumber = 2;
    private readonly static uint MaxBandwidthDefaultValue = 0;

    private uint maxBandwidth_;
    /// <summary>
    /// Maximum bandwidth that the user should use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBandwidth {
      get { if ((_hasBits0 & 2) != 0) { return maxBandwidth_; } else { return MaxBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "max_bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBandwidth {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBandwidth() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "welcome_text" field.</summary>
    public const int WelcomeTextFieldNumber = 3;
    private readonly static string WelcomeTextDefaultValue = "";

    private string welcomeText_;
    /// <summary>
    /// Server welcome text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WelcomeText {
      get { return welcomeText_ ?? WelcomeTextDefaultValue; }
      set {
        welcomeText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "welcome_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWelcomeText {
      get { return welcomeText_ != null; }
    }
    /// <summary>Clears the value of the "welcome_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWelcomeText() {
      welcomeText_ = null;
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 4;
    private readonly static ulong PermissionsDefaultValue = 0UL;

    private ulong permissions_;
    /// <summary>
    /// Current user permissions in the root channel.
    /// Note: The permissions data type usually is uin32 (e.g. in PermissionQuery and PermissionDenied messages). Here
    /// it is uint64 because of an oversight in the past. Nonetheless it should never exceed the uin32 range.
    /// See also: https://github.com/mumble-voip/mumble/issues/5139
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Permissions {
      get { if ((_hasBits0 & 4) != 0) { return permissions_; } else { return PermissionsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        permissions_ = value;
      }
    }
    /// <summary>Gets whether the "permissions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermissions {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "permissions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermissions() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerSync);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerSync other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (MaxBandwidth != other.MaxBandwidth) return false;
      if (WelcomeText != other.WelcomeText) return false;
      if (Permissions != other.Permissions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasMaxBandwidth) hash ^= MaxBandwidth.GetHashCode();
      if (HasWelcomeText) hash ^= WelcomeText.GetHashCode();
      if (HasPermissions) hash ^= Permissions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasMaxBandwidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxBandwidth);
      }
      if (HasWelcomeText) {
        output.WriteRawTag(26);
        output.WriteString(WelcomeText);
      }
      if (HasPermissions) {
        output.WriteRawTag(32);
        output.WriteUInt64(Permissions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasMaxBandwidth) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxBandwidth);
      }
      if (HasWelcomeText) {
        output.WriteRawTag(26);
        output.WriteString(WelcomeText);
      }
      if (HasPermissions) {
        output.WriteRawTag(32);
        output.WriteUInt64(Permissions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasMaxBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBandwidth);
      }
      if (HasWelcomeText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WelcomeText);
      }
      if (HasPermissions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Permissions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerSync other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasMaxBandwidth) {
        MaxBandwidth = other.MaxBandwidth;
      }
      if (other.HasWelcomeText) {
        WelcomeText = other.WelcomeText;
      }
      if (other.HasPermissions) {
        Permissions = other.Permissions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxBandwidth = input.ReadUInt32();
            break;
          }
          case 26: {
            WelcomeText = input.ReadString();
            break;
          }
          case 32: {
            Permissions = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxBandwidth = input.ReadUInt32();
            break;
          }
          case 26: {
            WelcomeText = input.ReadString();
            break;
          }
          case 32: {
            Permissions = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the client when it wants a channel removed. Sent by the server when
  /// a channel has been removed and clients should be notified.
  /// </summary>
  public sealed partial class ChannelRemove : pb::IMessage<ChannelRemove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelRemove> _parser = new pb::MessageParser<ChannelRemove>(() => new ChannelRemove());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChannelRemove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelRemove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelRemove(ChannelRemove other) : this() {
      _hasBits0 = other._hasBits0;
      channelId_ = other.channelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelRemove Clone() {
      return new ChannelRemove(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 1) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChannelRemove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChannelRemove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChannelRemove other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to communicate channel properties between the client and the server.
  /// Sent by the server during the login process or when channel properties are
  /// updated. Client may use this message to update said channel properties.
  /// </summary>
  public sealed partial class ChannelState : pb::IMessage<ChannelState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChannelState> _parser = new pb::MessageParser<ChannelState>(() => new ChannelState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ChannelState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelState(ChannelState other) : this() {
      _hasBits0 = other._hasBits0;
      channelId_ = other.channelId_;
      parent_ = other.parent_;
      name_ = other.name_;
      links_ = other.links_.Clone();
      description_ = other.description_;
      linksAdd_ = other.linksAdd_.Clone();
      linksRemove_ = other.linksRemove_.Clone();
      temporary_ = other.temporary_;
      position_ = other.position_;
      descriptionHash_ = other.descriptionHash_;
      maxUsers_ = other.maxUsers_;
      isEnterRestricted_ = other.isEnterRestricted_;
      canEnter_ = other.canEnter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ChannelState Clone() {
      return new ChannelState(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// Unique ID for the channel within the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 1) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 2;
    private readonly static uint ParentDefaultValue = 0;

    private uint parent_;
    /// <summary>
    /// channel_id of the parent channel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Parent {
      get { if ((_hasBits0 & 2) != 0) { return parent_; } else { return ParentDefaultValue; } }
      set {
        _hasBits0 |= 2;
        parent_ = value;
      }
    }
    /// <summary>Gets whether the "parent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasParent {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "parent" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearParent() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// UTF-8 encoded channel name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "links" field.</summary>
    public const int LinksFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_links_codec
        = pb::FieldCodec.ForUInt32(32);
    private readonly pbc::RepeatedField<uint> links_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// A collection of channel id values of the linked channels. Absent during
    /// the first channel listing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Links {
      get { return links_; }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    /// <summary>
    /// UTF-8 encoded channel description. Only if the description is less than
    /// 128 bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "links_add" field.</summary>
    public const int LinksAddFieldNumber = 6;
    private static readonly pb::FieldCodec<uint> _repeated_linksAdd_codec
        = pb::FieldCodec.ForUInt32(48);
    private readonly pbc::RepeatedField<uint> linksAdd_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// A collection of channel_id values that should be added to links.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LinksAdd {
      get { return linksAdd_; }
    }

    /// <summary>Field number for the "links_remove" field.</summary>
    public const int LinksRemoveFieldNumber = 7;
    private static readonly pb::FieldCodec<uint> _repeated_linksRemove_codec
        = pb::FieldCodec.ForUInt32(56);
    private readonly pbc::RepeatedField<uint> linksRemove_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// A collection of channel_id values that should be removed from links.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LinksRemove {
      get { return linksRemove_; }
    }

    /// <summary>Field number for the "temporary" field.</summary>
    public const int TemporaryFieldNumber = 8;
    private readonly static bool TemporaryDefaultValue = false;

    private bool temporary_;
    /// <summary>
    /// True if the channel is temporary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Temporary {
      get { if ((_hasBits0 & 4) != 0) { return temporary_; } else { return TemporaryDefaultValue; } }
      set {
        _hasBits0 |= 4;
        temporary_ = value;
      }
    }
    /// <summary>Gets whether the "temporary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTemporary {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "temporary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTemporary() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 9;
    private readonly static int PositionDefaultValue = 0;

    private int position_;
    /// <summary>
    /// Position weight to tweak the channel position in the channel list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Position {
      get { if ((_hasBits0 & 8) != 0) { return position_; } else { return PositionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        position_ = value;
      }
    }
    /// <summary>Gets whether the "position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPosition {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPosition() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "description_hash" field.</summary>
    public const int DescriptionHashFieldNumber = 10;
    private readonly static pb::ByteString DescriptionHashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString descriptionHash_;
    /// <summary>
    /// SHA1 hash of the description if the description is 128 bytes or more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DescriptionHash {
      get { return descriptionHash_ ?? DescriptionHashDefaultValue; }
      set {
        descriptionHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDescriptionHash {
      get { return descriptionHash_ != null; }
    }
    /// <summary>Clears the value of the "description_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDescriptionHash() {
      descriptionHash_ = null;
    }

    /// <summary>Field number for the "max_users" field.</summary>
    public const int MaxUsersFieldNumber = 11;
    private readonly static uint MaxUsersDefaultValue = 0;

    private uint maxUsers_;
    /// <summary>
    /// Maximum number of users allowed in the channel. If this value is zero,
    /// the maximum number of users allowed in the channel is given by the
    /// server's "usersperchannel" setting.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxUsers {
      get { if ((_hasBits0 & 16) != 0) { return maxUsers_; } else { return MaxUsersDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxUsers_ = value;
      }
    }
    /// <summary>Gets whether the "max_users" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxUsers {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_users" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxUsers() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "is_enter_restricted" field.</summary>
    public const int IsEnterRestrictedFieldNumber = 12;
    private readonly static bool IsEnterRestrictedDefaultValue = false;

    private bool isEnterRestricted_;
    /// <summary>
    /// Whether this channel has enter restrictions (ACL denying ENTER) set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEnterRestricted {
      get { if ((_hasBits0 & 32) != 0) { return isEnterRestricted_; } else { return IsEnterRestrictedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        isEnterRestricted_ = value;
      }
    }
    /// <summary>Gets whether the "is_enter_restricted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIsEnterRestricted {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "is_enter_restricted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIsEnterRestricted() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "can_enter" field.</summary>
    public const int CanEnterFieldNumber = 13;
    private readonly static bool CanEnterDefaultValue = false;

    private bool canEnter_;
    /// <summary>
    /// Whether the receiver of this msg is considered to be able to enter this channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanEnter {
      get { if ((_hasBits0 & 64) != 0) { return canEnter_; } else { return CanEnterDefaultValue; } }
      set {
        _hasBits0 |= 64;
        canEnter_ = value;
      }
    }
    /// <summary>Gets whether the "can_enter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanEnter {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "can_enter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanEnter() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ChannelState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ChannelState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (Parent != other.Parent) return false;
      if (Name != other.Name) return false;
      if(!links_.Equals(other.links_)) return false;
      if (Description != other.Description) return false;
      if(!linksAdd_.Equals(other.linksAdd_)) return false;
      if(!linksRemove_.Equals(other.linksRemove_)) return false;
      if (Temporary != other.Temporary) return false;
      if (Position != other.Position) return false;
      if (DescriptionHash != other.DescriptionHash) return false;
      if (MaxUsers != other.MaxUsers) return false;
      if (IsEnterRestricted != other.IsEnterRestricted) return false;
      if (CanEnter != other.CanEnter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasParent) hash ^= Parent.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      hash ^= links_.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      hash ^= linksAdd_.GetHashCode();
      hash ^= linksRemove_.GetHashCode();
      if (HasTemporary) hash ^= Temporary.GetHashCode();
      if (HasPosition) hash ^= Position.GetHashCode();
      if (HasDescriptionHash) hash ^= DescriptionHash.GetHashCode();
      if (HasMaxUsers) hash ^= MaxUsers.GetHashCode();
      if (HasIsEnterRestricted) hash ^= IsEnterRestricted.GetHashCode();
      if (HasCanEnter) hash ^= CanEnter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasParent) {
        output.WriteRawTag(16);
        output.WriteUInt32(Parent);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      links_.WriteTo(output, _repeated_links_codec);
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      linksAdd_.WriteTo(output, _repeated_linksAdd_codec);
      linksRemove_.WriteTo(output, _repeated_linksRemove_codec);
      if (HasTemporary) {
        output.WriteRawTag(64);
        output.WriteBool(Temporary);
      }
      if (HasPosition) {
        output.WriteRawTag(72);
        output.WriteInt32(Position);
      }
      if (HasDescriptionHash) {
        output.WriteRawTag(82);
        output.WriteBytes(DescriptionHash);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaxUsers);
      }
      if (HasIsEnterRestricted) {
        output.WriteRawTag(96);
        output.WriteBool(IsEnterRestricted);
      }
      if (HasCanEnter) {
        output.WriteRawTag(104);
        output.WriteBool(CanEnter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasParent) {
        output.WriteRawTag(16);
        output.WriteUInt32(Parent);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      links_.WriteTo(ref output, _repeated_links_codec);
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      linksAdd_.WriteTo(ref output, _repeated_linksAdd_codec);
      linksRemove_.WriteTo(ref output, _repeated_linksRemove_codec);
      if (HasTemporary) {
        output.WriteRawTag(64);
        output.WriteBool(Temporary);
      }
      if (HasPosition) {
        output.WriteRawTag(72);
        output.WriteInt32(Position);
      }
      if (HasDescriptionHash) {
        output.WriteRawTag(82);
        output.WriteBytes(DescriptionHash);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaxUsers);
      }
      if (HasIsEnterRestricted) {
        output.WriteRawTag(96);
        output.WriteBool(IsEnterRestricted);
      }
      if (HasCanEnter) {
        output.WriteRawTag(104);
        output.WriteBool(CanEnter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasParent) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Parent);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += links_.CalculateSize(_repeated_links_codec);
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += linksAdd_.CalculateSize(_repeated_linksAdd_codec);
      size += linksRemove_.CalculateSize(_repeated_linksRemove_codec);
      if (HasTemporary) {
        size += 1 + 1;
      }
      if (HasPosition) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Position);
      }
      if (HasDescriptionHash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DescriptionHash);
      }
      if (HasMaxUsers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxUsers);
      }
      if (HasIsEnterRestricted) {
        size += 1 + 1;
      }
      if (HasCanEnter) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ChannelState other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasParent) {
        Parent = other.Parent;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      links_.Add(other.links_);
      if (other.HasDescription) {
        Description = other.Description;
      }
      linksAdd_.Add(other.linksAdd_);
      linksRemove_.Add(other.linksRemove_);
      if (other.HasTemporary) {
        Temporary = other.Temporary;
      }
      if (other.HasPosition) {
        Position = other.Position;
      }
      if (other.HasDescriptionHash) {
        DescriptionHash = other.DescriptionHash;
      }
      if (other.HasMaxUsers) {
        MaxUsers = other.MaxUsers;
      }
      if (other.HasIsEnterRestricted) {
        IsEnterRestricted = other.IsEnterRestricted;
      }
      if (other.HasCanEnter) {
        CanEnter = other.CanEnter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Parent = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            links_.AddEntriesFrom(input, _repeated_links_codec);
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            linksAdd_.AddEntriesFrom(input, _repeated_linksAdd_codec);
            break;
          }
          case 58:
          case 56: {
            linksRemove_.AddEntriesFrom(input, _repeated_linksRemove_codec);
            break;
          }
          case 64: {
            Temporary = input.ReadBool();
            break;
          }
          case 72: {
            Position = input.ReadInt32();
            break;
          }
          case 82: {
            DescriptionHash = input.ReadBytes();
            break;
          }
          case 88: {
            MaxUsers = input.ReadUInt32();
            break;
          }
          case 96: {
            IsEnterRestricted = input.ReadBool();
            break;
          }
          case 104: {
            CanEnter = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Parent = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            links_.AddEntriesFrom(ref input, _repeated_links_codec);
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            linksAdd_.AddEntriesFrom(ref input, _repeated_linksAdd_codec);
            break;
          }
          case 58:
          case 56: {
            linksRemove_.AddEntriesFrom(ref input, _repeated_linksRemove_codec);
            break;
          }
          case 64: {
            Temporary = input.ReadBool();
            break;
          }
          case 72: {
            Position = input.ReadInt32();
            break;
          }
          case 82: {
            DescriptionHash = input.ReadBytes();
            break;
          }
          case 88: {
            MaxUsers = input.ReadUInt32();
            break;
          }
          case 96: {
            IsEnterRestricted = input.ReadBool();
            break;
          }
          case 104: {
            CanEnter = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to communicate user leaving or being kicked. May be sent by the client
  /// when it attempts to kick a user. Sent by the server when it informs the
  /// clients that a user is not present anymore.
  /// </summary>
  public sealed partial class UserRemove : pb::IMessage<UserRemove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRemove> _parser = new pb::MessageParser<UserRemove>(() => new UserRemove());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserRemove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRemove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRemove(UserRemove other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      actor_ = other.actor_;
      reason_ = other.reason_;
      ban_ = other.ban_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserRemove Clone() {
      return new UserRemove(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// The user who is being kicked, identified by their session, not present
    /// when no one is being kicked.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actor" field.</summary>
    public const int ActorFieldNumber = 2;
    private readonly static uint ActorDefaultValue = 0;

    private uint actor_;
    /// <summary>
    /// The user who initiated the removal. Either the user who performs the kick
    /// or the user who is currently leaving.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Actor {
      get { if ((_hasBits0 & 2) != 0) { return actor_; } else { return ActorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actor_ = value;
      }
    }
    /// <summary>Gets whether the "actor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 3;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// Reason for the kick, stored as the ban reason if the user is banned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "ban" field.</summary>
    public const int BanFieldNumber = 4;
    private readonly static bool BanDefaultValue = false;

    private bool ban_;
    /// <summary>
    /// True if the kick should result in a ban.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Ban {
      get { if ((_hasBits0 & 4) != 0) { return ban_; } else { return BanDefaultValue; } }
      set {
        _hasBits0 |= 4;
        ban_ = value;
      }
    }
    /// <summary>Gets whether the "ban" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBan {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ban" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBan() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserRemove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserRemove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Actor != other.Actor) return false;
      if (Reason != other.Reason) return false;
      if (Ban != other.Ban) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasActor) hash ^= Actor.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasBan) hash ^= Ban.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasActor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Actor);
      }
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (HasBan) {
        output.WriteRawTag(32);
        output.WriteBool(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasActor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Actor);
      }
      if (HasReason) {
        output.WriteRawTag(26);
        output.WriteString(Reason);
      }
      if (HasBan) {
        output.WriteRawTag(32);
        output.WriteBool(Ban);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasActor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Actor);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasBan) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserRemove other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasActor) {
        Actor = other.Actor;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasBan) {
        Ban = other.Ban;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            Actor = input.ReadUInt32();
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
          case 32: {
            Ban = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            Actor = input.ReadUInt32();
            break;
          }
          case 26: {
            Reason = input.ReadString();
            break;
          }
          case 32: {
            Ban = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the server when it communicates new and changed users to client.
  /// First seen during login procedure. May be sent by the client when it wishes
  /// to alter its state.
  /// </summary>
  public sealed partial class UserState : pb::IMessage<UserState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserState> _parser = new pb::MessageParser<UserState>(() => new UserState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserState(UserState other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      actor_ = other.actor_;
      name_ = other.name_;
      userId_ = other.userId_;
      channelId_ = other.channelId_;
      mute_ = other.mute_;
      deaf_ = other.deaf_;
      suppress_ = other.suppress_;
      selfMute_ = other.selfMute_;
      selfDeaf_ = other.selfDeaf_;
      texture_ = other.texture_;
      pluginContext_ = other.pluginContext_;
      pluginIdentity_ = other.pluginIdentity_;
      comment_ = other.comment_;
      hash_ = other.hash_;
      commentHash_ = other.commentHash_;
      textureHash_ = other.textureHash_;
      prioritySpeaker_ = other.prioritySpeaker_;
      recording_ = other.recording_;
      temporaryAccessTokens_ = other.temporaryAccessTokens_.Clone();
      listeningChannelAdd_ = other.listeningChannelAdd_.Clone();
      listeningChannelRemove_ = other.listeningChannelRemove_.Clone();
      listeningVolumeAdjustment_ = other.listeningVolumeAdjustment_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserState Clone() {
      return new UserState(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// Unique user session ID of the user whose state this is, may change on
    /// reconnect.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "actor" field.</summary>
    public const int ActorFieldNumber = 2;
    private readonly static uint ActorDefaultValue = 0;

    private uint actor_;
    /// <summary>
    /// The session of the user who is updating this user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Actor {
      get { if ((_hasBits0 & 2) != 0) { return actor_; } else { return ActorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        actor_ = value;
      }
    }
    /// <summary>Gets whether the "actor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "actor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// User name, UTF-8 encoded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private readonly static uint UserIdDefaultValue = 0;

    private uint userId_;
    /// <summary>
    /// Registered user ID if the user is registered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UserId {
      get { if ((_hasBits0 & 4) != 0) { return userId_; } else { return UserIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        userId_ = value;
      }
    }
    /// <summary>Gets whether the "user_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUserId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "user_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUserId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 5;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// Channel on which the user is.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 8) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "mute" field.</summary>
    public const int MuteFieldNumber = 6;
    private readonly static bool MuteDefaultValue = false;

    private bool mute_;
    /// <summary>
    /// True if the user is muted by admin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Mute {
      get { if ((_hasBits0 & 16) != 0) { return mute_; } else { return MuteDefaultValue; } }
      set {
        _hasBits0 |= 16;
        mute_ = value;
      }
    }
    /// <summary>Gets whether the "mute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMute {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "mute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMute() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "deaf" field.</summary>
    public const int DeafFieldNumber = 7;
    private readonly static bool DeafDefaultValue = false;

    private bool deaf_;
    /// <summary>
    /// True if the user is deafened by admin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Deaf {
      get { if ((_hasBits0 & 32) != 0) { return deaf_; } else { return DeafDefaultValue; } }
      set {
        _hasBits0 |= 32;
        deaf_ = value;
      }
    }
    /// <summary>Gets whether the "deaf" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDeaf {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "deaf" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDeaf() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "suppress" field.</summary>
    public const int SuppressFieldNumber = 8;
    private readonly static bool SuppressDefaultValue = false;

    private bool suppress_;
    /// <summary>
    /// True if the user has been suppressed from talking by a reason other than
    /// being muted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Suppress {
      get { if ((_hasBits0 & 64) != 0) { return suppress_; } else { return SuppressDefaultValue; } }
      set {
        _hasBits0 |= 64;
        suppress_ = value;
      }
    }
    /// <summary>Gets whether the "suppress" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSuppress {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "suppress" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSuppress() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "self_mute" field.</summary>
    public const int SelfMuteFieldNumber = 9;
    private readonly static bool SelfMuteDefaultValue = false;

    private bool selfMute_;
    /// <summary>
    /// True if the user has muted self.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelfMute {
      get { if ((_hasBits0 & 128) != 0) { return selfMute_; } else { return SelfMuteDefaultValue; } }
      set {
        _hasBits0 |= 128;
        selfMute_ = value;
      }
    }
    /// <summary>Gets whether the "self_mute" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelfMute {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "self_mute" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelfMute() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "self_deaf" field.</summary>
    public const int SelfDeafFieldNumber = 10;
    private readonly static bool SelfDeafDefaultValue = false;

    private bool selfDeaf_;
    /// <summary>
    /// True if the user has deafened self.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SelfDeaf {
      get { if ((_hasBits0 & 256) != 0) { return selfDeaf_; } else { return SelfDeafDefaultValue; } }
      set {
        _hasBits0 |= 256;
        selfDeaf_ = value;
      }
    }
    /// <summary>Gets whether the "self_deaf" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSelfDeaf {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "self_deaf" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSelfDeaf() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "texture" field.</summary>
    public const int TextureFieldNumber = 11;
    private readonly static pb::ByteString TextureDefaultValue = pb::ByteString.Empty;

    private pb::ByteString texture_;
    /// <summary>
    /// User image if it is less than 128 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Texture {
      get { return texture_ ?? TextureDefaultValue; }
      set {
        texture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "texture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTexture {
      get { return texture_ != null; }
    }
    /// <summary>Clears the value of the "texture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTexture() {
      texture_ = null;
    }

    /// <summary>Field number for the "plugin_context" field.</summary>
    public const int PluginContextFieldNumber = 12;
    private readonly static pb::ByteString PluginContextDefaultValue = pb::ByteString.Empty;

    private pb::ByteString pluginContext_;
    /// <summary>
    /// The positional audio plugin identifier.
    /// Positional audio information is only sent to users who share
    /// identical plugin contexts.
    ///
    /// This value is not transmitted to clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString PluginContext {
      get { return pluginContext_ ?? PluginContextDefaultValue; }
      set {
        pluginContext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plugin_context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPluginContext {
      get { return pluginContext_ != null; }
    }
    /// <summary>Clears the value of the "plugin_context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPluginContext() {
      pluginContext_ = null;
    }

    /// <summary>Field number for the "plugin_identity" field.</summary>
    public const int PluginIdentityFieldNumber = 13;
    private readonly static string PluginIdentityDefaultValue = "";

    private string pluginIdentity_;
    /// <summary>
    /// The user's plugin-specific identity.
    /// This value is not transmitted to clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PluginIdentity {
      get { return pluginIdentity_ ?? PluginIdentityDefaultValue; }
      set {
        pluginIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "plugin_identity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPluginIdentity {
      get { return pluginIdentity_ != null; }
    }
    /// <summary>Clears the value of the "plugin_identity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPluginIdentity() {
      pluginIdentity_ = null;
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 14;
    private readonly static string CommentDefaultValue = "";

    private string comment_;
    /// <summary>
    /// User comment if it is less than 128 bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Comment {
      get { return comment_ ?? CommentDefaultValue; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasComment {
      get { return comment_ != null; }
    }
    /// <summary>Clears the value of the "comment" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearComment() {
      comment_ = null;
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 15;
    private readonly static string HashDefaultValue = "";

    private string hash_;
    /// <summary>
    /// The hash of the user certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Hash {
      get { return hash_ ?? HashDefaultValue; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHash {
      get { return hash_ != null; }
    }
    /// <summary>Clears the value of the "hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHash() {
      hash_ = null;
    }

    /// <summary>Field number for the "comment_hash" field.</summary>
    public const int CommentHashFieldNumber = 16;
    private readonly static pb::ByteString CommentHashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString commentHash_;
    /// <summary>
    /// SHA1 hash of the user comment if it 128 bytes or more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString CommentHash {
      get { return commentHash_ ?? CommentHashDefaultValue; }
      set {
        commentHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "comment_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCommentHash {
      get { return commentHash_ != null; }
    }
    /// <summary>Clears the value of the "comment_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommentHash() {
      commentHash_ = null;
    }

    /// <summary>Field number for the "texture_hash" field.</summary>
    public const int TextureHashFieldNumber = 17;
    private readonly static pb::ByteString TextureHashDefaultValue = pb::ByteString.Empty;

    private pb::ByteString textureHash_;
    /// <summary>
    /// SHA1 hash of the user picture if it 128 bytes or more.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TextureHash {
      get { return textureHash_ ?? TextureHashDefaultValue; }
      set {
        textureHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "texture_hash" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTextureHash {
      get { return textureHash_ != null; }
    }
    /// <summary>Clears the value of the "texture_hash" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTextureHash() {
      textureHash_ = null;
    }

    /// <summary>Field number for the "priority_speaker" field.</summary>
    public const int PrioritySpeakerFieldNumber = 18;
    private readonly static bool PrioritySpeakerDefaultValue = false;

    private bool prioritySpeaker_;
    /// <summary>
    /// True if the user is a priority speaker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PrioritySpeaker {
      get { if ((_hasBits0 & 512) != 0) { return prioritySpeaker_; } else { return PrioritySpeakerDefaultValue; } }
      set {
        _hasBits0 |= 512;
        prioritySpeaker_ = value;
      }
    }
    /// <summary>Gets whether the "priority_speaker" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPrioritySpeaker {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "priority_speaker" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPrioritySpeaker() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "recording" field.</summary>
    public const int RecordingFieldNumber = 19;
    private readonly static bool RecordingDefaultValue = false;

    private bool recording_;
    /// <summary>
    /// True if the user is currently recording.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Recording {
      get { if ((_hasBits0 & 1024) != 0) { return recording_; } else { return RecordingDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        recording_ = value;
      }
    }
    /// <summary>Gets whether the "recording" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecording {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "recording" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecording() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "temporary_access_tokens" field.</summary>
    public const int TemporaryAccessTokensFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_temporaryAccessTokens_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> temporaryAccessTokens_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of temporary access tokens to be respected when processing this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> TemporaryAccessTokens {
      get { return temporaryAccessTokens_; }
    }

    /// <summary>Field number for the "listening_channel_add" field.</summary>
    public const int ListeningChannelAddFieldNumber = 21;
    private static readonly pb::FieldCodec<uint> _repeated_listeningChannelAdd_codec
        = pb::FieldCodec.ForUInt32(168);
    private readonly pbc::RepeatedField<uint> listeningChannelAdd_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// A list of channels the user wants to start listening to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ListeningChannelAdd {
      get { return listeningChannelAdd_; }
    }

    /// <summary>Field number for the "listening_channel_remove" field.</summary>
    public const int ListeningChannelRemoveFieldNumber = 22;
    private static readonly pb::FieldCodec<uint> _repeated_listeningChannelRemove_codec
        = pb::FieldCodec.ForUInt32(176);
    private readonly pbc::RepeatedField<uint> listeningChannelRemove_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// a list of channels the user does no longer want to listen to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ListeningChannelRemove {
      get { return listeningChannelRemove_; }
    }

    /// <summary>Field number for the "listening_volume_adjustment" field.</summary>
    public const int ListeningVolumeAdjustmentFieldNumber = 23;
    private static readonly pb::FieldCodec<global::MumbleProto.UserState.Types.VolumeAdjustment> _repeated_listeningVolumeAdjustment_codec
        = pb::FieldCodec.ForMessage(186, global::MumbleProto.UserState.Types.VolumeAdjustment.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.UserState.Types.VolumeAdjustment> listeningVolumeAdjustment_ = new pbc::RepeatedField<global::MumbleProto.UserState.Types.VolumeAdjustment>();
    /// <summary>
    /// A list of volume adjustments the user has applied to listeners
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.UserState.Types.VolumeAdjustment> ListeningVolumeAdjustment {
      get { return listeningVolumeAdjustment_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (Actor != other.Actor) return false;
      if (Name != other.Name) return false;
      if (UserId != other.UserId) return false;
      if (ChannelId != other.ChannelId) return false;
      if (Mute != other.Mute) return false;
      if (Deaf != other.Deaf) return false;
      if (Suppress != other.Suppress) return false;
      if (SelfMute != other.SelfMute) return false;
      if (SelfDeaf != other.SelfDeaf) return false;
      if (Texture != other.Texture) return false;
      if (PluginContext != other.PluginContext) return false;
      if (PluginIdentity != other.PluginIdentity) return false;
      if (Comment != other.Comment) return false;
      if (Hash != other.Hash) return false;
      if (CommentHash != other.CommentHash) return false;
      if (TextureHash != other.TextureHash) return false;
      if (PrioritySpeaker != other.PrioritySpeaker) return false;
      if (Recording != other.Recording) return false;
      if(!temporaryAccessTokens_.Equals(other.temporaryAccessTokens_)) return false;
      if(!listeningChannelAdd_.Equals(other.listeningChannelAdd_)) return false;
      if(!listeningChannelRemove_.Equals(other.listeningChannelRemove_)) return false;
      if(!listeningVolumeAdjustment_.Equals(other.listeningVolumeAdjustment_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasActor) hash ^= Actor.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasUserId) hash ^= UserId.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasMute) hash ^= Mute.GetHashCode();
      if (HasDeaf) hash ^= Deaf.GetHashCode();
      if (HasSuppress) hash ^= Suppress.GetHashCode();
      if (HasSelfMute) hash ^= SelfMute.GetHashCode();
      if (HasSelfDeaf) hash ^= SelfDeaf.GetHashCode();
      if (HasTexture) hash ^= Texture.GetHashCode();
      if (HasPluginContext) hash ^= PluginContext.GetHashCode();
      if (HasPluginIdentity) hash ^= PluginIdentity.GetHashCode();
      if (HasComment) hash ^= Comment.GetHashCode();
      if (HasHash) hash ^= Hash.GetHashCode();
      if (HasCommentHash) hash ^= CommentHash.GetHashCode();
      if (HasTextureHash) hash ^= TextureHash.GetHashCode();
      if (HasPrioritySpeaker) hash ^= PrioritySpeaker.GetHashCode();
      if (HasRecording) hash ^= Recording.GetHashCode();
      hash ^= temporaryAccessTokens_.GetHashCode();
      hash ^= listeningChannelAdd_.GetHashCode();
      hash ^= listeningChannelRemove_.GetHashCode();
      hash ^= listeningVolumeAdjustment_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasActor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Actor);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasUserId) {
        output.WriteRawTag(32);
        output.WriteUInt32(UserId);
      }
      if (HasChannelId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ChannelId);
      }
      if (HasMute) {
        output.WriteRawTag(48);
        output.WriteBool(Mute);
      }
      if (HasDeaf) {
        output.WriteRawTag(56);
        output.WriteBool(Deaf);
      }
      if (HasSuppress) {
        output.WriteRawTag(64);
        output.WriteBool(Suppress);
      }
      if (HasSelfMute) {
        output.WriteRawTag(72);
        output.WriteBool(SelfMute);
      }
      if (HasSelfDeaf) {
        output.WriteRawTag(80);
        output.WriteBool(SelfDeaf);
      }
      if (HasTexture) {
        output.WriteRawTag(90);
        output.WriteBytes(Texture);
      }
      if (HasPluginContext) {
        output.WriteRawTag(98);
        output.WriteBytes(PluginContext);
      }
      if (HasPluginIdentity) {
        output.WriteRawTag(106);
        output.WriteString(PluginIdentity);
      }
      if (HasComment) {
        output.WriteRawTag(114);
        output.WriteString(Comment);
      }
      if (HasHash) {
        output.WriteRawTag(122);
        output.WriteString(Hash);
      }
      if (HasCommentHash) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(CommentHash);
      }
      if (HasTextureHash) {
        output.WriteRawTag(138, 1);
        output.WriteBytes(TextureHash);
      }
      if (HasPrioritySpeaker) {
        output.WriteRawTag(144, 1);
        output.WriteBool(PrioritySpeaker);
      }
      if (HasRecording) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Recording);
      }
      temporaryAccessTokens_.WriteTo(output, _repeated_temporaryAccessTokens_codec);
      listeningChannelAdd_.WriteTo(output, _repeated_listeningChannelAdd_codec);
      listeningChannelRemove_.WriteTo(output, _repeated_listeningChannelRemove_codec);
      listeningVolumeAdjustment_.WriteTo(output, _repeated_listeningVolumeAdjustment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasActor) {
        output.WriteRawTag(16);
        output.WriteUInt32(Actor);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasUserId) {
        output.WriteRawTag(32);
        output.WriteUInt32(UserId);
      }
      if (HasChannelId) {
        output.WriteRawTag(40);
        output.WriteUInt32(ChannelId);
      }
      if (HasMute) {
        output.WriteRawTag(48);
        output.WriteBool(Mute);
      }
      if (HasDeaf) {
        output.WriteRawTag(56);
        output.WriteBool(Deaf);
      }
      if (HasSuppress) {
        output.WriteRawTag(64);
        output.WriteBool(Suppress);
      }
      if (HasSelfMute) {
        output.WriteRawTag(72);
        output.WriteBool(SelfMute);
      }
      if (HasSelfDeaf) {
        output.WriteRawTag(80);
        output.WriteBool(SelfDeaf);
      }
      if (HasTexture) {
        output.WriteRawTag(90);
        output.WriteBytes(Texture);
      }
      if (HasPluginContext) {
        output.WriteRawTag(98);
        output.WriteBytes(PluginContext);
      }
      if (HasPluginIdentity) {
        output.WriteRawTag(106);
        output.WriteString(PluginIdentity);
      }
      if (HasComment) {
        output.WriteRawTag(114);
        output.WriteString(Comment);
      }
      if (HasHash) {
        output.WriteRawTag(122);
        output.WriteString(Hash);
      }
      if (HasCommentHash) {
        output.WriteRawTag(130, 1);
        output.WriteBytes(CommentHash);
      }
      if (HasTextureHash) {
        output.WriteRawTag(138, 1);
        output.WriteBytes(TextureHash);
      }
      if (HasPrioritySpeaker) {
        output.WriteRawTag(144, 1);
        output.WriteBool(PrioritySpeaker);
      }
      if (HasRecording) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Recording);
      }
      temporaryAccessTokens_.WriteTo(ref output, _repeated_temporaryAccessTokens_codec);
      listeningChannelAdd_.WriteTo(ref output, _repeated_listeningChannelAdd_codec);
      listeningChannelRemove_.WriteTo(ref output, _repeated_listeningChannelRemove_codec);
      listeningVolumeAdjustment_.WriteTo(ref output, _repeated_listeningVolumeAdjustment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasActor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Actor);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasUserId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasMute) {
        size += 1 + 1;
      }
      if (HasDeaf) {
        size += 1 + 1;
      }
      if (HasSuppress) {
        size += 1 + 1;
      }
      if (HasSelfMute) {
        size += 1 + 1;
      }
      if (HasSelfDeaf) {
        size += 1 + 1;
      }
      if (HasTexture) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Texture);
      }
      if (HasPluginContext) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PluginContext);
      }
      if (HasPluginIdentity) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PluginIdentity);
      }
      if (HasComment) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (HasHash) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (HasCommentHash) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(CommentHash);
      }
      if (HasTextureHash) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(TextureHash);
      }
      if (HasPrioritySpeaker) {
        size += 2 + 1;
      }
      if (HasRecording) {
        size += 2 + 1;
      }
      size += temporaryAccessTokens_.CalculateSize(_repeated_temporaryAccessTokens_codec);
      size += listeningChannelAdd_.CalculateSize(_repeated_listeningChannelAdd_codec);
      size += listeningChannelRemove_.CalculateSize(_repeated_listeningChannelRemove_codec);
      size += listeningVolumeAdjustment_.CalculateSize(_repeated_listeningVolumeAdjustment_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserState other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasActor) {
        Actor = other.Actor;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasMute) {
        Mute = other.Mute;
      }
      if (other.HasDeaf) {
        Deaf = other.Deaf;
      }
      if (other.HasSuppress) {
        Suppress = other.Suppress;
      }
      if (other.HasSelfMute) {
        SelfMute = other.SelfMute;
      }
      if (other.HasSelfDeaf) {
        SelfDeaf = other.SelfDeaf;
      }
      if (other.HasTexture) {
        Texture = other.Texture;
      }
      if (other.HasPluginContext) {
        PluginContext = other.PluginContext;
      }
      if (other.HasPluginIdentity) {
        PluginIdentity = other.PluginIdentity;
      }
      if (other.HasComment) {
        Comment = other.Comment;
      }
      if (other.HasHash) {
        Hash = other.Hash;
      }
      if (other.HasCommentHash) {
        CommentHash = other.CommentHash;
      }
      if (other.HasTextureHash) {
        TextureHash = other.TextureHash;
      }
      if (other.HasPrioritySpeaker) {
        PrioritySpeaker = other.PrioritySpeaker;
      }
      if (other.HasRecording) {
        Recording = other.Recording;
      }
      temporaryAccessTokens_.Add(other.temporaryAccessTokens_);
      listeningChannelAdd_.Add(other.listeningChannelAdd_);
      listeningChannelRemove_.Add(other.listeningChannelRemove_);
      listeningVolumeAdjustment_.Add(other.listeningVolumeAdjustment_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            Actor = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            UserId = input.ReadUInt32();
            break;
          }
          case 40: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 48: {
            Mute = input.ReadBool();
            break;
          }
          case 56: {
            Deaf = input.ReadBool();
            break;
          }
          case 64: {
            Suppress = input.ReadBool();
            break;
          }
          case 72: {
            SelfMute = input.ReadBool();
            break;
          }
          case 80: {
            SelfDeaf = input.ReadBool();
            break;
          }
          case 90: {
            Texture = input.ReadBytes();
            break;
          }
          case 98: {
            PluginContext = input.ReadBytes();
            break;
          }
          case 106: {
            PluginIdentity = input.ReadString();
            break;
          }
          case 114: {
            Comment = input.ReadString();
            break;
          }
          case 122: {
            Hash = input.ReadString();
            break;
          }
          case 130: {
            CommentHash = input.ReadBytes();
            break;
          }
          case 138: {
            TextureHash = input.ReadBytes();
            break;
          }
          case 144: {
            PrioritySpeaker = input.ReadBool();
            break;
          }
          case 152: {
            Recording = input.ReadBool();
            break;
          }
          case 162: {
            temporaryAccessTokens_.AddEntriesFrom(input, _repeated_temporaryAccessTokens_codec);
            break;
          }
          case 170:
          case 168: {
            listeningChannelAdd_.AddEntriesFrom(input, _repeated_listeningChannelAdd_codec);
            break;
          }
          case 178:
          case 176: {
            listeningChannelRemove_.AddEntriesFrom(input, _repeated_listeningChannelRemove_codec);
            break;
          }
          case 186: {
            listeningVolumeAdjustment_.AddEntriesFrom(input, _repeated_listeningVolumeAdjustment_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            Actor = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            UserId = input.ReadUInt32();
            break;
          }
          case 40: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 48: {
            Mute = input.ReadBool();
            break;
          }
          case 56: {
            Deaf = input.ReadBool();
            break;
          }
          case 64: {
            Suppress = input.ReadBool();
            break;
          }
          case 72: {
            SelfMute = input.ReadBool();
            break;
          }
          case 80: {
            SelfDeaf = input.ReadBool();
            break;
          }
          case 90: {
            Texture = input.ReadBytes();
            break;
          }
          case 98: {
            PluginContext = input.ReadBytes();
            break;
          }
          case 106: {
            PluginIdentity = input.ReadString();
            break;
          }
          case 114: {
            Comment = input.ReadString();
            break;
          }
          case 122: {
            Hash = input.ReadString();
            break;
          }
          case 130: {
            CommentHash = input.ReadBytes();
            break;
          }
          case 138: {
            TextureHash = input.ReadBytes();
            break;
          }
          case 144: {
            PrioritySpeaker = input.ReadBool();
            break;
          }
          case 152: {
            Recording = input.ReadBool();
            break;
          }
          case 162: {
            temporaryAccessTokens_.AddEntriesFrom(ref input, _repeated_temporaryAccessTokens_codec);
            break;
          }
          case 170:
          case 168: {
            listeningChannelAdd_.AddEntriesFrom(ref input, _repeated_listeningChannelAdd_codec);
            break;
          }
          case 178:
          case 176: {
            listeningChannelRemove_.AddEntriesFrom(ref input, _repeated_listeningChannelRemove_codec);
            break;
          }
          case 186: {
            listeningVolumeAdjustment_.AddEntriesFrom(ref input, _repeated_listeningVolumeAdjustment_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class VolumeAdjustment : pb::IMessage<VolumeAdjustment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VolumeAdjustment> _parser = new pb::MessageParser<VolumeAdjustment>(() => new VolumeAdjustment());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<VolumeAdjustment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.UserState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VolumeAdjustment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VolumeAdjustment(VolumeAdjustment other) : this() {
          _hasBits0 = other._hasBits0;
          listeningChannel_ = other.listeningChannel_;
          volumeAdjustment_ = other.volumeAdjustment_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public VolumeAdjustment Clone() {
          return new VolumeAdjustment(this);
        }

        /// <summary>Field number for the "listening_channel" field.</summary>
        public const int ListeningChannelFieldNumber = 1;
        private readonly static uint ListeningChannelDefaultValue = 0;

        private uint listeningChannel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ListeningChannel {
          get { if ((_hasBits0 & 1) != 0) { return listeningChannel_; } else { return ListeningChannelDefaultValue; } }
          set {
            _hasBits0 |= 1;
            listeningChannel_ = value;
          }
        }
        /// <summary>Gets whether the "listening_channel" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasListeningChannel {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "listening_channel" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearListeningChannel() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "volume_adjustment" field.</summary>
        public const int VolumeAdjustment_FieldNumber = 2;
        private readonly static float VolumeAdjustment_DefaultValue = 0F;

        private float volumeAdjustment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float VolumeAdjustment_ {
          get { if ((_hasBits0 & 2) != 0) { return volumeAdjustment_; } else { return VolumeAdjustment_DefaultValue; } }
          set {
            _hasBits0 |= 2;
            volumeAdjustment_ = value;
          }
        }
        /// <summary>Gets whether the "volume_adjustment" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasVolumeAdjustment_ {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "volume_adjustment" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearVolumeAdjustment_() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as VolumeAdjustment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(VolumeAdjustment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ListeningChannel != other.ListeningChannel) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VolumeAdjustment_, other.VolumeAdjustment_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasListeningChannel) hash ^= ListeningChannel.GetHashCode();
          if (HasVolumeAdjustment_) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VolumeAdjustment_);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasListeningChannel) {
            output.WriteRawTag(8);
            output.WriteUInt32(ListeningChannel);
          }
          if (HasVolumeAdjustment_) {
            output.WriteRawTag(21);
            output.WriteFloat(VolumeAdjustment_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasListeningChannel) {
            output.WriteRawTag(8);
            output.WriteUInt32(ListeningChannel);
          }
          if (HasVolumeAdjustment_) {
            output.WriteRawTag(21);
            output.WriteFloat(VolumeAdjustment_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasListeningChannel) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ListeningChannel);
          }
          if (HasVolumeAdjustment_) {
            size += 1 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(VolumeAdjustment other) {
          if (other == null) {
            return;
          }
          if (other.HasListeningChannel) {
            ListeningChannel = other.ListeningChannel;
          }
          if (other.HasVolumeAdjustment_) {
            VolumeAdjustment_ = other.VolumeAdjustment_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ListeningChannel = input.ReadUInt32();
                break;
              }
              case 21: {
                VolumeAdjustment_ = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ListeningChannel = input.ReadUInt32();
                break;
              }
              case 21: {
                VolumeAdjustment_ = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Relays information on the bans. The client may send the BanList message to
  /// either modify the list of bans or query them from the server. The server
  /// sends this list only after a client queries for it.
  /// </summary>
  public sealed partial class BanList : pb::IMessage<BanList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BanList> _parser = new pb::MessageParser<BanList>(() => new BanList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BanList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BanList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BanList(BanList other) : this() {
      _hasBits0 = other._hasBits0;
      bans_ = other.bans_.Clone();
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BanList Clone() {
      return new BanList(this);
    }

    /// <summary>Field number for the "bans" field.</summary>
    public const int BansFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MumbleProto.BanList.Types.BanEntry> _repeated_bans_codec
        = pb::FieldCodec.ForMessage(10, global::MumbleProto.BanList.Types.BanEntry.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.BanList.Types.BanEntry> bans_ = new pbc::RepeatedField<global::MumbleProto.BanList.Types.BanEntry>();
    /// <summary>
    /// List of ban entries currently in place.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.BanList.Types.BanEntry> Bans {
      get { return bans_; }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private readonly static bool QueryDefaultValue = false;

    private bool query_;
    /// <summary>
    /// True if the server should return the list, false if it should replace old
    /// ban list with the one provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Query {
      get { if ((_hasBits0 & 1) != 0) { return query_; } else { return QueryDefaultValue; } }
      set {
        _hasBits0 |= 1;
        query_ = value;
      }
    }
    /// <summary>Gets whether the "query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuery {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuery() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BanList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BanList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bans_.Equals(other.bans_)) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bans_.GetHashCode();
      if (HasQuery) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bans_.WriteTo(output, _repeated_bans_codec);
      if (HasQuery) {
        output.WriteRawTag(16);
        output.WriteBool(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bans_.WriteTo(ref output, _repeated_bans_codec);
      if (HasQuery) {
        output.WriteRawTag(16);
        output.WriteBool(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += bans_.CalculateSize(_repeated_bans_codec);
      if (HasQuery) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BanList other) {
      if (other == null) {
        return;
      }
      bans_.Add(other.bans_);
      if (other.HasQuery) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bans_.AddEntriesFrom(input, _repeated_bans_codec);
            break;
          }
          case 16: {
            Query = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bans_.AddEntriesFrom(ref input, _repeated_bans_codec);
            break;
          }
          case 16: {
            Query = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BanList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class BanEntry : pb::IMessage<BanEntry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BanEntry> _parser = new pb::MessageParser<BanEntry>(() => new BanEntry());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<BanEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.BanList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BanEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BanEntry(BanEntry other) : this() {
          _hasBits0 = other._hasBits0;
          address_ = other.address_;
          mask_ = other.mask_;
          name_ = other.name_;
          hash_ = other.hash_;
          reason_ = other.reason_;
          start_ = other.start_;
          duration_ = other.duration_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public BanEntry Clone() {
          return new BanEntry(this);
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 1;
        private readonly static pb::ByteString AddressDefaultValue = pb::ByteString.Empty;

        private pb::ByteString address_;
        /// <summary>
        /// Banned IP address.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Address {
          get { return address_ ?? AddressDefaultValue; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "address" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAddress {
          get { return address_ != null; }
        }
        /// <summary>Clears the value of the "address" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAddress() {
          address_ = null;
        }

        /// <summary>Field number for the "mask" field.</summary>
        public const int MaskFieldNumber = 2;
        private readonly static uint MaskDefaultValue = 0;

        private uint mask_;
        /// <summary>
        /// The length of the subnet mask for the ban.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Mask {
          get { if ((_hasBits0 & 1) != 0) { return mask_; } else { return MaskDefaultValue; } }
          set {
            _hasBits0 |= 1;
            mask_ = value;
          }
        }
        /// <summary>Gets whether the "mask" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMask {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "mask" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMask() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 3;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// User name for identification purposes (does not affect the ban).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "hash" field.</summary>
        public const int HashFieldNumber = 4;
        private readonly static string HashDefaultValue = "";

        private string hash_;
        /// <summary>
        /// The certificate hash of the banned user.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Hash {
          get { return hash_ ?? HashDefaultValue; }
          set {
            hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "hash" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHash {
          get { return hash_ != null; }
        }
        /// <summary>Clears the value of the "hash" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHash() {
          hash_ = null;
        }

        /// <summary>Field number for the "reason" field.</summary>
        public const int ReasonFieldNumber = 5;
        private readonly static string ReasonDefaultValue = "";

        private string reason_;
        /// <summary>
        /// Reason for the ban (does not affect the ban).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Reason {
          get { return reason_ ?? ReasonDefaultValue; }
          set {
            reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "reason" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasReason {
          get { return reason_ != null; }
        }
        /// <summary>Clears the value of the "reason" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearReason() {
          reason_ = null;
        }

        /// <summary>Field number for the "start" field.</summary>
        public const int StartFieldNumber = 6;
        private readonly static string StartDefaultValue = "";

        private string start_;
        /// <summary>
        /// Ban start time.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Start {
          get { return start_ ?? StartDefaultValue; }
          set {
            start_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "start" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasStart {
          get { return start_ != null; }
        }
        /// <summary>Clears the value of the "start" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStart() {
          start_ = null;
        }

        /// <summary>Field number for the "duration" field.</summary>
        public const int DurationFieldNumber = 7;
        private readonly static uint DurationDefaultValue = 0;

        private uint duration_;
        /// <summary>
        /// Ban duration in seconds.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Duration {
          get { if ((_hasBits0 & 2) != 0) { return duration_; } else { return DurationDefaultValue; } }
          set {
            _hasBits0 |= 2;
            duration_ = value;
          }
        }
        /// <summary>Gets whether the "duration" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDuration {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "duration" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDuration() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as BanEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(BanEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Address != other.Address) return false;
          if (Mask != other.Mask) return false;
          if (Name != other.Name) return false;
          if (Hash != other.Hash) return false;
          if (Reason != other.Reason) return false;
          if (Start != other.Start) return false;
          if (Duration != other.Duration) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAddress) hash ^= Address.GetHashCode();
          if (HasMask) hash ^= Mask.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasHash) hash ^= Hash.GetHashCode();
          if (HasReason) hash ^= Reason.GetHashCode();
          if (HasStart) hash ^= Start.GetHashCode();
          if (HasDuration) hash ^= Duration.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAddress) {
            output.WriteRawTag(10);
            output.WriteBytes(Address);
          }
          if (HasMask) {
            output.WriteRawTag(16);
            output.WriteUInt32(Mask);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasHash) {
            output.WriteRawTag(34);
            output.WriteString(Hash);
          }
          if (HasReason) {
            output.WriteRawTag(42);
            output.WriteString(Reason);
          }
          if (HasStart) {
            output.WriteRawTag(50);
            output.WriteString(Start);
          }
          if (HasDuration) {
            output.WriteRawTag(56);
            output.WriteUInt32(Duration);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAddress) {
            output.WriteRawTag(10);
            output.WriteBytes(Address);
          }
          if (HasMask) {
            output.WriteRawTag(16);
            output.WriteUInt32(Mask);
          }
          if (HasName) {
            output.WriteRawTag(26);
            output.WriteString(Name);
          }
          if (HasHash) {
            output.WriteRawTag(34);
            output.WriteString(Hash);
          }
          if (HasReason) {
            output.WriteRawTag(42);
            output.WriteString(Reason);
          }
          if (HasStart) {
            output.WriteRawTag(50);
            output.WriteString(Start);
          }
          if (HasDuration) {
            output.WriteRawTag(56);
            output.WriteUInt32(Duration);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasAddress) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
          }
          if (HasMask) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mask);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasHash) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
          }
          if (HasReason) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
          }
          if (HasStart) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Start);
          }
          if (HasDuration) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Duration);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(BanEntry other) {
          if (other == null) {
            return;
          }
          if (other.HasAddress) {
            Address = other.Address;
          }
          if (other.HasMask) {
            Mask = other.Mask;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasHash) {
            Hash = other.Hash;
          }
          if (other.HasReason) {
            Reason = other.Reason;
          }
          if (other.HasStart) {
            Start = other.Start;
          }
          if (other.HasDuration) {
            Duration = other.Duration;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Address = input.ReadBytes();
                break;
              }
              case 16: {
                Mask = input.ReadUInt32();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Hash = input.ReadString();
                break;
              }
              case 42: {
                Reason = input.ReadString();
                break;
              }
              case 50: {
                Start = input.ReadString();
                break;
              }
              case 56: {
                Duration = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Address = input.ReadBytes();
                break;
              }
              case 16: {
                Mask = input.ReadUInt32();
                break;
              }
              case 26: {
                Name = input.ReadString();
                break;
              }
              case 34: {
                Hash = input.ReadString();
                break;
              }
              case 42: {
                Reason = input.ReadString();
                break;
              }
              case 50: {
                Start = input.ReadString();
                break;
              }
              case 56: {
                Duration = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Used to send and broadcast text messages.
  /// </summary>
  public sealed partial class TextMessage : pb::IMessage<TextMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextMessage> _parser = new pb::MessageParser<TextMessage>(() => new TextMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TextMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextMessage(TextMessage other) : this() {
      _hasBits0 = other._hasBits0;
      actor_ = other.actor_;
      session_ = other.session_.Clone();
      channelId_ = other.channelId_.Clone();
      treeId_ = other.treeId_.Clone();
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TextMessage Clone() {
      return new TextMessage(this);
    }

    /// <summary>Field number for the "actor" field.</summary>
    public const int ActorFieldNumber = 1;
    private readonly static uint ActorDefaultValue = 0;

    private uint actor_;
    /// <summary>
    /// The message sender, identified by its session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Actor {
      get { if ((_hasBits0 & 1) != 0) { return actor_; } else { return ActorDefaultValue; } }
      set {
        _hasBits0 |= 1;
        actor_ = value;
      }
    }
    /// <summary>Gets whether the "actor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasActor {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "actor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearActor() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_session_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> session_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// Target users for the message, identified by their session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Session {
      get { return session_; }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_channelId_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> channelId_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// The channels to which the message is sent, identified by their
    /// channel_ids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChannelId {
      get { return channelId_; }
    }

    /// <summary>Field number for the "tree_id" field.</summary>
    public const int TreeIdFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_treeId_codec
        = pb::FieldCodec.ForUInt32(32);
    private readonly pbc::RepeatedField<uint> treeId_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// The root channels when sending message recursively to several channels,
    /// identified by their channel_ids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> TreeId {
      get { return treeId_; }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    /// <summary>
    /// The UTF-8 encoded message. May be HTML if the server allows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessage() {
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TextMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TextMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Actor != other.Actor) return false;
      if(!session_.Equals(other.session_)) return false;
      if(!channelId_.Equals(other.channelId_)) return false;
      if(!treeId_.Equals(other.treeId_)) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasActor) hash ^= Actor.GetHashCode();
      hash ^= session_.GetHashCode();
      hash ^= channelId_.GetHashCode();
      hash ^= treeId_.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasActor) {
        output.WriteRawTag(8);
        output.WriteUInt32(Actor);
      }
      session_.WriteTo(output, _repeated_session_codec);
      channelId_.WriteTo(output, _repeated_channelId_codec);
      treeId_.WriteTo(output, _repeated_treeId_codec);
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasActor) {
        output.WriteRawTag(8);
        output.WriteUInt32(Actor);
      }
      session_.WriteTo(ref output, _repeated_session_codec);
      channelId_.WriteTo(ref output, _repeated_channelId_codec);
      treeId_.WriteTo(ref output, _repeated_treeId_codec);
      if (HasMessage) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasActor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Actor);
      }
      size += session_.CalculateSize(_repeated_session_codec);
      size += channelId_.CalculateSize(_repeated_channelId_codec);
      size += treeId_.CalculateSize(_repeated_treeId_codec);
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TextMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasActor) {
        Actor = other.Actor;
      }
      session_.Add(other.session_);
      channelId_.Add(other.channelId_);
      treeId_.Add(other.treeId_);
      if (other.HasMessage) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Actor = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            session_.AddEntriesFrom(input, _repeated_session_codec);
            break;
          }
          case 26:
          case 24: {
            channelId_.AddEntriesFrom(input, _repeated_channelId_codec);
            break;
          }
          case 34:
          case 32: {
            treeId_.AddEntriesFrom(input, _repeated_treeId_codec);
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Actor = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            session_.AddEntriesFrom(ref input, _repeated_session_codec);
            break;
          }
          case 26:
          case 24: {
            channelId_.AddEntriesFrom(ref input, _repeated_channelId_codec);
            break;
          }
          case 34:
          case 32: {
            treeId_.AddEntriesFrom(ref input, _repeated_treeId_codec);
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PermissionDenied : pb::IMessage<PermissionDenied>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PermissionDenied> _parser = new pb::MessageParser<PermissionDenied>(() => new PermissionDenied());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PermissionDenied> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionDenied() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionDenied(PermissionDenied other) : this() {
      _hasBits0 = other._hasBits0;
      permission_ = other.permission_;
      channelId_ = other.channelId_;
      session_ = other.session_;
      reason_ = other.reason_;
      type_ = other.type_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionDenied Clone() {
      return new PermissionDenied(this);
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 1;
    private readonly static uint PermissionDefaultValue = 0;

    private uint permission_;
    /// <summary>
    /// The denied permission when type is Permission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Permission {
      get { if ((_hasBits0 & 1) != 0) { return permission_; } else { return PermissionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        permission_ = value;
      }
    }
    /// <summary>Gets whether the "permission" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermission {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "permission" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermission() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// channel_id for the channel where the permission was denied when type is
    /// Permission.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 2) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 3;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// The user who was denied permissions, identified by session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 4) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 4;
    private readonly static string ReasonDefaultValue = "";

    private string reason_;
    /// <summary>
    /// Textual reason for the denial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Reason {
      get { return reason_ ?? ReasonDefaultValue; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "reason" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReason {
      get { return reason_ != null; }
    }
    /// <summary>Clears the value of the "reason" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReason() {
      reason_ = null;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private readonly static global::MumbleProto.PermissionDenied.Types.DenyType TypeDefaultValue = global::MumbleProto.PermissionDenied.Types.DenyType.Text;

    private global::MumbleProto.PermissionDenied.Types.DenyType type_;
    /// <summary>
    /// Type of the denial.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.PermissionDenied.Types.DenyType Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// The name that is invalid when type is UserName.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PermissionDenied);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PermissionDenied other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Permission != other.Permission) return false;
      if (ChannelId != other.ChannelId) return false;
      if (Session != other.Session) return false;
      if (Reason != other.Reason) return false;
      if (Type != other.Type) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPermission) hash ^= Permission.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasReason) hash ^= Reason.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPermission) {
        output.WriteRawTag(8);
        output.WriteUInt32(Permission);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      if (HasSession) {
        output.WriteRawTag(24);
        output.WriteUInt32(Session);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (HasName) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPermission) {
        output.WriteRawTag(8);
        output.WriteUInt32(Permission);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      if (HasSession) {
        output.WriteRawTag(24);
        output.WriteUInt32(Session);
      }
      if (HasReason) {
        output.WriteRawTag(34);
        output.WriteString(Reason);
      }
      if (HasType) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (HasName) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPermission) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Permission);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasReason) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PermissionDenied other) {
      if (other == null) {
        return;
      }
      if (other.HasPermission) {
        Permission = other.Permission;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Permission = input.ReadUInt32();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 24: {
            Session = input.ReadUInt32();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::MumbleProto.PermissionDenied.Types.DenyType) input.ReadEnum();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Permission = input.ReadUInt32();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 24: {
            Session = input.ReadUInt32();
            break;
          }
          case 34: {
            Reason = input.ReadString();
            break;
          }
          case 40: {
            Type = (global::MumbleProto.PermissionDenied.Types.DenyType) input.ReadEnum();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PermissionDenied message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum DenyType {
        /// <summary>
        /// Operation denied for other reason, see reason field.
        /// </summary>
        [pbr::OriginalName("Text")] Text = 0,
        /// <summary>
        /// Permissions were denied.
        /// </summary>
        [pbr::OriginalName("Permission")] Permission = 1,
        /// <summary>
        /// Cannot modify SuperUser.
        /// </summary>
        [pbr::OriginalName("SuperUser")] SuperUser = 2,
        /// <summary>
        /// Invalid channel name.
        /// </summary>
        [pbr::OriginalName("ChannelName")] ChannelName = 3,
        /// <summary>
        /// Text message too long.
        /// </summary>
        [pbr::OriginalName("TextTooLong")] TextTooLong = 4,
        /// <summary>
        /// The flux capacitor was spelled wrong.
        /// </summary>
        [pbr::OriginalName("H9K")] H9K = 5,
        /// <summary>
        /// Operation not permitted in temporary channel.
        /// </summary>
        [pbr::OriginalName("TemporaryChannel")] TemporaryChannel = 6,
        /// <summary>
        /// Operation requires certificate.
        /// </summary>
        [pbr::OriginalName("MissingCertificate")] MissingCertificate = 7,
        /// <summary>
        /// Invalid username.
        /// </summary>
        [pbr::OriginalName("UserName")] UserName = 8,
        /// <summary>
        /// Channel is full.
        /// </summary>
        [pbr::OriginalName("ChannelFull")] ChannelFull = 9,
        /// <summary>
        /// Channels are nested too deeply.
        /// </summary>
        [pbr::OriginalName("NestingLimit")] NestingLimit = 10,
        /// <summary>
        /// Maximum channel count reached.
        /// </summary>
        [pbr::OriginalName("ChannelCountLimit")] ChannelCountLimit = 11,
        /// <summary>
        /// Amount of listener objects for this channel has been reached
        /// </summary>
        [pbr::OriginalName("ChannelListenerLimit")] ChannelListenerLimit = 12,
        /// <summary>
        /// Amount of listener proxies for the user has been reached
        /// </summary>
        [pbr::OriginalName("UserListenerLimit")] UserListenerLimit = 13,
      }

    }
    #endregion

  }

  public sealed partial class ACL : pb::IMessage<ACL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ACL> _parser = new pb::MessageParser<ACL>(() => new ACL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ACL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ACL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ACL(ACL other) : this() {
      _hasBits0 = other._hasBits0;
      channelId_ = other.channelId_;
      inheritAcls_ = other.inheritAcls_;
      groups_ = other.groups_.Clone();
      acls_ = other.acls_.Clone();
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ACL Clone() {
      return new ACL(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// Channel ID of the channel this message affects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 1) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "inherit_acls" field.</summary>
    public const int InheritAclsFieldNumber = 2;
    private readonly static bool InheritAclsDefaultValue = true;

    private bool inheritAcls_;
    /// <summary>
    /// True if the channel inherits its parent's ACLs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InheritAcls {
      get { if ((_hasBits0 & 2) != 0) { return inheritAcls_; } else { return InheritAclsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        inheritAcls_ = value;
      }
    }
    /// <summary>Gets whether the "inherit_acls" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInheritAcls {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "inherit_acls" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInheritAcls() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MumbleProto.ACL.Types.ChanGroup> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(26, global::MumbleProto.ACL.Types.ChanGroup.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanGroup> groups_ = new pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanGroup>();
    /// <summary>
    /// User group specifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanGroup> Groups {
      get { return groups_; }
    }

    /// <summary>Field number for the "acls" field.</summary>
    public const int AclsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MumbleProto.ACL.Types.ChanACL> _repeated_acls_codec
        = pb::FieldCodec.ForMessage(34, global::MumbleProto.ACL.Types.ChanACL.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanACL> acls_ = new pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanACL>();
    /// <summary>
    /// ACL specifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.ACL.Types.ChanACL> Acls {
      get { return acls_; }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 5;
    private readonly static bool QueryDefaultValue = false;

    private bool query_;
    /// <summary>
    /// True if the message is a query for ACLs instead of setting them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Query {
      get { if ((_hasBits0 & 4) != 0) { return query_; } else { return QueryDefaultValue; } }
      set {
        _hasBits0 |= 4;
        query_ = value;
      }
    }
    /// <summary>Gets whether the "query" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasQuery {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "query" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearQuery() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ACL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ACL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (InheritAcls != other.InheritAcls) return false;
      if(!groups_.Equals(other.groups_)) return false;
      if(!acls_.Equals(other.acls_)) return false;
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasInheritAcls) hash ^= InheritAcls.GetHashCode();
      hash ^= groups_.GetHashCode();
      hash ^= acls_.GetHashCode();
      if (HasQuery) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasInheritAcls) {
        output.WriteRawTag(16);
        output.WriteBool(InheritAcls);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
      acls_.WriteTo(output, _repeated_acls_codec);
      if (HasQuery) {
        output.WriteRawTag(40);
        output.WriteBool(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasInheritAcls) {
        output.WriteRawTag(16);
        output.WriteBool(InheritAcls);
      }
      groups_.WriteTo(ref output, _repeated_groups_codec);
      acls_.WriteTo(ref output, _repeated_acls_codec);
      if (HasQuery) {
        output.WriteRawTag(40);
        output.WriteBool(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasInheritAcls) {
        size += 1 + 1;
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      size += acls_.CalculateSize(_repeated_acls_codec);
      if (HasQuery) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ACL other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasInheritAcls) {
        InheritAcls = other.InheritAcls;
      }
      groups_.Add(other.groups_);
      acls_.Add(other.acls_);
      if (other.HasQuery) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            InheritAcls = input.ReadBool();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
          case 34: {
            acls_.AddEntriesFrom(input, _repeated_acls_codec);
            break;
          }
          case 40: {
            Query = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            InheritAcls = input.ReadBool();
            break;
          }
          case 26: {
            groups_.AddEntriesFrom(ref input, _repeated_groups_codec);
            break;
          }
          case 34: {
            acls_.AddEntriesFrom(ref input, _repeated_acls_codec);
            break;
          }
          case 40: {
            Query = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ACL message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class ChanGroup : pb::IMessage<ChanGroup>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChanGroup> _parser = new pb::MessageParser<ChanGroup>(() => new ChanGroup());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ChanGroup> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.ACL.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanGroup() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanGroup(ChanGroup other) : this() {
          _hasBits0 = other._hasBits0;
          name_ = other.name_;
          inherited_ = other.inherited_;
          inherit_ = other.inherit_;
          inheritable_ = other.inheritable_;
          add_ = other.add_.Clone();
          remove_ = other.remove_.Clone();
          inheritedMembers_ = other.inheritedMembers_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanGroup Clone() {
          return new ChanGroup(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// Name of the channel group, UTF-8 encoded.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "inherited" field.</summary>
        public const int InheritedFieldNumber = 2;
        private readonly static bool InheritedDefaultValue = true;

        private bool inherited_;
        /// <summary>
        /// True if the group has been inherited from the parent (Read only).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Inherited {
          get { if ((_hasBits0 & 1) != 0) { return inherited_; } else { return InheritedDefaultValue; } }
          set {
            _hasBits0 |= 1;
            inherited_ = value;
          }
        }
        /// <summary>Gets whether the "inherited" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInherited {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "inherited" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInherited() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "inherit" field.</summary>
        public const int InheritFieldNumber = 3;
        private readonly static bool InheritDefaultValue = true;

        private bool inherit_;
        /// <summary>
        /// True if the group members are inherited.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Inherit {
          get { if ((_hasBits0 & 2) != 0) { return inherit_; } else { return InheritDefaultValue; } }
          set {
            _hasBits0 |= 2;
            inherit_ = value;
          }
        }
        /// <summary>Gets whether the "inherit" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInherit {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "inherit" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInherit() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "inheritable" field.</summary>
        public const int InheritableFieldNumber = 4;
        private readonly static bool InheritableDefaultValue = true;

        private bool inheritable_;
        /// <summary>
        /// True if the group can be inherited by sub channels.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Inheritable {
          get { if ((_hasBits0 & 4) != 0) { return inheritable_; } else { return InheritableDefaultValue; } }
          set {
            _hasBits0 |= 4;
            inheritable_ = value;
          }
        }
        /// <summary>Gets whether the "inheritable" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInheritable {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "inheritable" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInheritable() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "add" field.</summary>
        public const int AddFieldNumber = 5;
        private static readonly pb::FieldCodec<uint> _repeated_add_codec
            = pb::FieldCodec.ForUInt32(40);
        private readonly pbc::RepeatedField<uint> add_ = new pbc::RepeatedField<uint>();
        /// <summary>
        /// Users explicitly included in this group, identified by user_id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> Add {
          get { return add_; }
        }

        /// <summary>Field number for the "remove" field.</summary>
        public const int RemoveFieldNumber = 6;
        private static readonly pb::FieldCodec<uint> _repeated_remove_codec
            = pb::FieldCodec.ForUInt32(48);
        private readonly pbc::RepeatedField<uint> remove_ = new pbc::RepeatedField<uint>();
        /// <summary>
        /// Users explicitly removed from this group in this channel if the group
        /// has been inherited, identified by user_id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> Remove {
          get { return remove_; }
        }

        /// <summary>Field number for the "inherited_members" field.</summary>
        public const int InheritedMembersFieldNumber = 7;
        private static readonly pb::FieldCodec<uint> _repeated_inheritedMembers_codec
            = pb::FieldCodec.ForUInt32(56);
        private readonly pbc::RepeatedField<uint> inheritedMembers_ = new pbc::RepeatedField<uint>();
        /// <summary>
        /// Users inherited, identified by user_id.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> InheritedMembers {
          get { return inheritedMembers_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ChanGroup);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ChanGroup other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Inherited != other.Inherited) return false;
          if (Inherit != other.Inherit) return false;
          if (Inheritable != other.Inheritable) return false;
          if(!add_.Equals(other.add_)) return false;
          if(!remove_.Equals(other.remove_)) return false;
          if(!inheritedMembers_.Equals(other.inheritedMembers_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasName) hash ^= Name.GetHashCode();
          if (HasInherited) hash ^= Inherited.GetHashCode();
          if (HasInherit) hash ^= Inherit.GetHashCode();
          if (HasInheritable) hash ^= Inheritable.GetHashCode();
          hash ^= add_.GetHashCode();
          hash ^= remove_.GetHashCode();
          hash ^= inheritedMembers_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasInherited) {
            output.WriteRawTag(16);
            output.WriteBool(Inherited);
          }
          if (HasInherit) {
            output.WriteRawTag(24);
            output.WriteBool(Inherit);
          }
          if (HasInheritable) {
            output.WriteRawTag(32);
            output.WriteBool(Inheritable);
          }
          add_.WriteTo(output, _repeated_add_codec);
          remove_.WriteTo(output, _repeated_remove_codec);
          inheritedMembers_.WriteTo(output, _repeated_inheritedMembers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasName) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (HasInherited) {
            output.WriteRawTag(16);
            output.WriteBool(Inherited);
          }
          if (HasInherit) {
            output.WriteRawTag(24);
            output.WriteBool(Inherit);
          }
          if (HasInheritable) {
            output.WriteRawTag(32);
            output.WriteBool(Inheritable);
          }
          add_.WriteTo(ref output, _repeated_add_codec);
          remove_.WriteTo(ref output, _repeated_remove_codec);
          inheritedMembers_.WriteTo(ref output, _repeated_inheritedMembers_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasInherited) {
            size += 1 + 1;
          }
          if (HasInherit) {
            size += 1 + 1;
          }
          if (HasInheritable) {
            size += 1 + 1;
          }
          size += add_.CalculateSize(_repeated_add_codec);
          size += remove_.CalculateSize(_repeated_remove_codec);
          size += inheritedMembers_.CalculateSize(_repeated_inheritedMembers_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ChanGroup other) {
          if (other == null) {
            return;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasInherited) {
            Inherited = other.Inherited;
          }
          if (other.HasInherit) {
            Inherit = other.Inherit;
          }
          if (other.HasInheritable) {
            Inheritable = other.Inheritable;
          }
          add_.Add(other.add_);
          remove_.Add(other.remove_);
          inheritedMembers_.Add(other.inheritedMembers_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Inherited = input.ReadBool();
                break;
              }
              case 24: {
                Inherit = input.ReadBool();
                break;
              }
              case 32: {
                Inheritable = input.ReadBool();
                break;
              }
              case 42:
              case 40: {
                add_.AddEntriesFrom(input, _repeated_add_codec);
                break;
              }
              case 50:
              case 48: {
                remove_.AddEntriesFrom(input, _repeated_remove_codec);
                break;
              }
              case 58:
              case 56: {
                inheritedMembers_.AddEntriesFrom(input, _repeated_inheritedMembers_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 16: {
                Inherited = input.ReadBool();
                break;
              }
              case 24: {
                Inherit = input.ReadBool();
                break;
              }
              case 32: {
                Inheritable = input.ReadBool();
                break;
              }
              case 42:
              case 40: {
                add_.AddEntriesFrom(ref input, _repeated_add_codec);
                break;
              }
              case 50:
              case 48: {
                remove_.AddEntriesFrom(ref input, _repeated_remove_codec);
                break;
              }
              case 58:
              case 56: {
                inheritedMembers_.AddEntriesFrom(ref input, _repeated_inheritedMembers_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ChanACL : pb::IMessage<ChanACL>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ChanACL> _parser = new pb::MessageParser<ChanACL>(() => new ChanACL());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ChanACL> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.ACL.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanACL() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanACL(ChanACL other) : this() {
          _hasBits0 = other._hasBits0;
          applyHere_ = other.applyHere_;
          applySubs_ = other.applySubs_;
          inherited_ = other.inherited_;
          userId_ = other.userId_;
          group_ = other.group_;
          grant_ = other.grant_;
          deny_ = other.deny_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ChanACL Clone() {
          return new ChanACL(this);
        }

        /// <summary>Field number for the "apply_here" field.</summary>
        public const int ApplyHereFieldNumber = 1;
        private readonly static bool ApplyHereDefaultValue = true;

        private bool applyHere_;
        /// <summary>
        /// True if this ACL applies to the current channel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ApplyHere {
          get { if ((_hasBits0 & 1) != 0) { return applyHere_; } else { return ApplyHereDefaultValue; } }
          set {
            _hasBits0 |= 1;
            applyHere_ = value;
          }
        }
        /// <summary>Gets whether the "apply_here" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasApplyHere {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "apply_here" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearApplyHere() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "apply_subs" field.</summary>
        public const int ApplySubsFieldNumber = 2;
        private readonly static bool ApplySubsDefaultValue = true;

        private bool applySubs_;
        /// <summary>
        /// True if this ACL applies to the sub channels.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool ApplySubs {
          get { if ((_hasBits0 & 2) != 0) { return applySubs_; } else { return ApplySubsDefaultValue; } }
          set {
            _hasBits0 |= 2;
            applySubs_ = value;
          }
        }
        /// <summary>Gets whether the "apply_subs" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasApplySubs {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "apply_subs" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearApplySubs() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "inherited" field.</summary>
        public const int InheritedFieldNumber = 3;
        private readonly static bool InheritedDefaultValue = true;

        private bool inherited_;
        /// <summary>
        /// True if the ACL has been inherited from the parent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Inherited {
          get { if ((_hasBits0 & 4) != 0) { return inherited_; } else { return InheritedDefaultValue; } }
          set {
            _hasBits0 |= 4;
            inherited_ = value;
          }
        }
        /// <summary>Gets whether the "inherited" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasInherited {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "inherited" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearInherited() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 4;
        private readonly static uint UserIdDefaultValue = 0;

        private uint userId_;
        /// <summary>
        /// ID of the user that is affected by this ACL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint UserId {
          get { if ((_hasBits0 & 8) != 0) { return userId_; } else { return UserIdDefaultValue; } }
          set {
            _hasBits0 |= 8;
            userId_ = value;
          }
        }
        /// <summary>Gets whether the "user_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUserId {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "user_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUserId() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "group" field.</summary>
        public const int GroupFieldNumber = 5;
        private readonly static string GroupDefaultValue = "";

        private string group_;
        /// <summary>
        /// ID of the group that is affected by this ACL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Group {
          get { return group_ ?? GroupDefaultValue; }
          set {
            group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "group" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGroup {
          get { return group_ != null; }
        }
        /// <summary>Clears the value of the "group" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGroup() {
          group_ = null;
        }

        /// <summary>Field number for the "grant" field.</summary>
        public const int GrantFieldNumber = 6;
        private readonly static uint GrantDefaultValue = 0;

        private uint grant_;
        /// <summary>
        /// Bit flag field of the permissions granted by this ACL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Grant {
          get { if ((_hasBits0 & 16) != 0) { return grant_; } else { return GrantDefaultValue; } }
          set {
            _hasBits0 |= 16;
            grant_ = value;
          }
        }
        /// <summary>Gets whether the "grant" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGrant {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "grant" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGrant() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "deny" field.</summary>
        public const int DenyFieldNumber = 7;
        private readonly static uint DenyDefaultValue = 0;

        private uint deny_;
        /// <summary>
        /// Bit flag field of the permissions denied by this ACL.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Deny {
          get { if ((_hasBits0 & 32) != 0) { return deny_; } else { return DenyDefaultValue; } }
          set {
            _hasBits0 |= 32;
            deny_ = value;
          }
        }
        /// <summary>Gets whether the "deny" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDeny {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "deny" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDeny() {
          _hasBits0 &= ~32;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ChanACL);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ChanACL other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ApplyHere != other.ApplyHere) return false;
          if (ApplySubs != other.ApplySubs) return false;
          if (Inherited != other.Inherited) return false;
          if (UserId != other.UserId) return false;
          if (Group != other.Group) return false;
          if (Grant != other.Grant) return false;
          if (Deny != other.Deny) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasApplyHere) hash ^= ApplyHere.GetHashCode();
          if (HasApplySubs) hash ^= ApplySubs.GetHashCode();
          if (HasInherited) hash ^= Inherited.GetHashCode();
          if (HasUserId) hash ^= UserId.GetHashCode();
          if (HasGroup) hash ^= Group.GetHashCode();
          if (HasGrant) hash ^= Grant.GetHashCode();
          if (HasDeny) hash ^= Deny.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasApplyHere) {
            output.WriteRawTag(8);
            output.WriteBool(ApplyHere);
          }
          if (HasApplySubs) {
            output.WriteRawTag(16);
            output.WriteBool(ApplySubs);
          }
          if (HasInherited) {
            output.WriteRawTag(24);
            output.WriteBool(Inherited);
          }
          if (HasUserId) {
            output.WriteRawTag(32);
            output.WriteUInt32(UserId);
          }
          if (HasGroup) {
            output.WriteRawTag(42);
            output.WriteString(Group);
          }
          if (HasGrant) {
            output.WriteRawTag(48);
            output.WriteUInt32(Grant);
          }
          if (HasDeny) {
            output.WriteRawTag(56);
            output.WriteUInt32(Deny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasApplyHere) {
            output.WriteRawTag(8);
            output.WriteBool(ApplyHere);
          }
          if (HasApplySubs) {
            output.WriteRawTag(16);
            output.WriteBool(ApplySubs);
          }
          if (HasInherited) {
            output.WriteRawTag(24);
            output.WriteBool(Inherited);
          }
          if (HasUserId) {
            output.WriteRawTag(32);
            output.WriteUInt32(UserId);
          }
          if (HasGroup) {
            output.WriteRawTag(42);
            output.WriteString(Group);
          }
          if (HasGrant) {
            output.WriteRawTag(48);
            output.WriteUInt32(Grant);
          }
          if (HasDeny) {
            output.WriteRawTag(56);
            output.WriteUInt32(Deny);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasApplyHere) {
            size += 1 + 1;
          }
          if (HasApplySubs) {
            size += 1 + 1;
          }
          if (HasInherited) {
            size += 1 + 1;
          }
          if (HasUserId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
          }
          if (HasGroup) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
          }
          if (HasGrant) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Grant);
          }
          if (HasDeny) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Deny);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ChanACL other) {
          if (other == null) {
            return;
          }
          if (other.HasApplyHere) {
            ApplyHere = other.ApplyHere;
          }
          if (other.HasApplySubs) {
            ApplySubs = other.ApplySubs;
          }
          if (other.HasInherited) {
            Inherited = other.Inherited;
          }
          if (other.HasUserId) {
            UserId = other.UserId;
          }
          if (other.HasGroup) {
            Group = other.Group;
          }
          if (other.HasGrant) {
            Grant = other.Grant;
          }
          if (other.HasDeny) {
            Deny = other.Deny;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ApplyHere = input.ReadBool();
                break;
              }
              case 16: {
                ApplySubs = input.ReadBool();
                break;
              }
              case 24: {
                Inherited = input.ReadBool();
                break;
              }
              case 32: {
                UserId = input.ReadUInt32();
                break;
              }
              case 42: {
                Group = input.ReadString();
                break;
              }
              case 48: {
                Grant = input.ReadUInt32();
                break;
              }
              case 56: {
                Deny = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ApplyHere = input.ReadBool();
                break;
              }
              case 16: {
                ApplySubs = input.ReadBool();
                break;
              }
              case 24: {
                Inherited = input.ReadBool();
                break;
              }
              case 32: {
                UserId = input.ReadUInt32();
                break;
              }
              case 42: {
                Group = input.ReadString();
                break;
              }
              case 48: {
                Grant = input.ReadUInt32();
                break;
              }
              case 56: {
                Deny = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Client may use this message to refresh its registered user information. The
  /// client should fill the IDs or Names of the users it wants to refresh. The
  /// server fills the missing parts and sends the message back.
  /// </summary>
  public sealed partial class QueryUsers : pb::IMessage<QueryUsers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QueryUsers> _parser = new pb::MessageParser<QueryUsers>(() => new QueryUsers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QueryUsers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryUsers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryUsers(QueryUsers other) : this() {
      ids_ = other.ids_.Clone();
      names_ = other.names_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QueryUsers Clone() {
      return new QueryUsers(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_ids_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> ids_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// user_ids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "names" field.</summary>
    public const int NamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_names_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// User names in the same order as ids.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Names {
      get { return names_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QueryUsers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QueryUsers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if(!names_.Equals(other.names_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      hash ^= names_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      ids_.WriteTo(output, _repeated_ids_codec);
      names_.WriteTo(output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      ids_.WriteTo(ref output, _repeated_ids_codec);
      names_.WriteTo(ref output, _repeated_names_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += names_.CalculateSize(_repeated_names_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QueryUsers other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      names_.Add(other.names_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 18: {
            names_.AddEntriesFrom(input, _repeated_names_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(ref input, _repeated_ids_codec);
            break;
          }
          case 18: {
            names_.AddEntriesFrom(ref input, _repeated_names_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to initialize and resync the UDP encryption. Either side may request a
  /// resync by sending the message without any values filled. The resync is
  /// performed by sending the message with only the client or server nonce
  /// filled.
  /// </summary>
  public sealed partial class CryptSetup : pb::IMessage<CryptSetup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CryptSetup> _parser = new pb::MessageParser<CryptSetup>(() => new CryptSetup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CryptSetup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CryptSetup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CryptSetup(CryptSetup other) : this() {
      key_ = other.key_;
      clientNonce_ = other.clientNonce_;
      serverNonce_ = other.serverNonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CryptSetup Clone() {
      return new CryptSetup(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static pb::ByteString KeyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString key_;
    /// <summary>
    /// Encryption key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "client_nonce" field.</summary>
    public const int ClientNonceFieldNumber = 2;
    private readonly static pb::ByteString ClientNonceDefaultValue = pb::ByteString.Empty;

    private pb::ByteString clientNonce_;
    /// <summary>
    /// Client nonce.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ClientNonce {
      get { return clientNonce_ ?? ClientNonceDefaultValue; }
      set {
        clientNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_nonce" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClientNonce {
      get { return clientNonce_ != null; }
    }
    /// <summary>Clears the value of the "client_nonce" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClientNonce() {
      clientNonce_ = null;
    }

    /// <summary>Field number for the "server_nonce" field.</summary>
    public const int ServerNonceFieldNumber = 3;
    private readonly static pb::ByteString ServerNonceDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serverNonce_;
    /// <summary>
    /// Server nonce.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString ServerNonce {
      get { return serverNonce_ ?? ServerNonceDefaultValue; }
      set {
        serverNonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "server_nonce" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasServerNonce {
      get { return serverNonce_ != null; }
    }
    /// <summary>Clears the value of the "server_nonce" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearServerNonce() {
      serverNonce_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CryptSetup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CryptSetup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (ClientNonce != other.ClientNonce) return false;
      if (ServerNonce != other.ServerNonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasClientNonce) hash ^= ClientNonce.GetHashCode();
      if (HasServerNonce) hash ^= ServerNonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (HasClientNonce) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientNonce);
      }
      if (HasServerNonce) {
        output.WriteRawTag(26);
        output.WriteBytes(ServerNonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteBytes(Key);
      }
      if (HasClientNonce) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientNonce);
      }
      if (HasServerNonce) {
        output.WriteRawTag(26);
        output.WriteBytes(ServerNonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (HasClientNonce) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientNonce);
      }
      if (HasServerNonce) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ServerNonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CryptSetup other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasClientNonce) {
        ClientNonce = other.ClientNonce;
      }
      if (other.HasServerNonce) {
        ServerNonce = other.ServerNonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            ClientNonce = input.ReadBytes();
            break;
          }
          case 26: {
            ServerNonce = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadBytes();
            break;
          }
          case 18: {
            ClientNonce = input.ReadBytes();
            break;
          }
          case 26: {
            ServerNonce = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to add or remove custom context menu item on client-side.
  /// </summary>
  public sealed partial class ContextActionModify : pb::IMessage<ContextActionModify>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextActionModify> _parser = new pb::MessageParser<ContextActionModify>(() => new ContextActionModify());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContextActionModify> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextActionModify() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextActionModify(ContextActionModify other) : this() {
      _hasBits0 = other._hasBits0;
      action_ = other.action_;
      text_ = other.text_;
      context_ = other.context_;
      operation_ = other.operation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextActionModify Clone() {
      return new ContextActionModify(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    /// <summary>
    /// The action identifier. Used later to initiate an action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private readonly static string TextDefaultValue = "";

    private string text_;
    /// <summary>
    /// The display name of the action.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Text {
      get { return text_ ?? TextDefaultValue; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasText {
      get { return text_ != null; }
    }
    /// <summary>Clears the value of the "text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearText() {
      text_ = null;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private readonly static uint ContextDefaultValue = 0;

    private uint context_;
    /// <summary>
    /// Context bit flags defining where the action should be displayed.
    /// Flags can be OR-ed to combine different types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Context {
      get { if ((_hasBits0 & 1) != 0) { return context_; } else { return ContextDefaultValue; } }
      set {
        _hasBits0 |= 1;
        context_ = value;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 4;
    private readonly static global::MumbleProto.ContextActionModify.Types.Operation OperationDefaultValue = global::MumbleProto.ContextActionModify.Types.Operation.Add;

    private global::MumbleProto.ContextActionModify.Types.Operation operation_;
    /// <summary>
    /// Choose either to add or to remove the context action.
    /// Note: This field only exists after Mumble 1.2.4-beta1 release.
    ///       The message will be recognized as Add regardless of this field
    ///       before said release.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.ContextActionModify.Types.Operation Operation {
      get { if ((_hasBits0 & 2) != 0) { return operation_; } else { return OperationDefaultValue; } }
      set {
        _hasBits0 |= 2;
        operation_ = value;
      }
    }
    /// <summary>Gets whether the "operation" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOperation {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "operation" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOperation() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContextActionModify);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContextActionModify other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Text != other.Text) return false;
      if (Context != other.Context) return false;
      if (Operation != other.Operation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAction) hash ^= Action.GetHashCode();
      if (HasText) hash ^= Text.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (HasOperation) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      if (HasOperation) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAction) {
        output.WriteRawTag(10);
        output.WriteString(Action);
      }
      if (HasText) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      if (HasOperation) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (HasText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Context);
      }
      if (HasOperation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContextActionModify other) {
      if (other == null) {
        return;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      if (other.HasOperation) {
        Operation = other.Operation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 32: {
            Operation = (global::MumbleProto.ContextActionModify.Types.Operation) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Action = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 32: {
            Operation = (global::MumbleProto.ContextActionModify.Types.Operation) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ContextActionModify message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Context {
        /// <summary>
        /// Action is applicable to the server.
        /// </summary>
        [pbr::OriginalName("Server")] Server = 1,
        /// <summary>
        /// Action can target a Channel.
        /// </summary>
        [pbr::OriginalName("Channel")] Channel = 2,
        /// <summary>
        /// Action can target a User.
        /// </summary>
        [pbr::OriginalName("User")] User = 4,
      }

      public enum Operation {
        [pbr::OriginalName("Add")] Add = 0,
        [pbr::OriginalName("Remove")] Remove = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Sent by the client when it wants to initiate a Context action.
  /// </summary>
  public sealed partial class ContextAction : pb::IMessage<ContextAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContextAction> _parser = new pb::MessageParser<ContextAction>(() => new ContextAction());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContextAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextAction(ContextAction other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      channelId_ = other.channelId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContextAction Clone() {
      return new ContextAction(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// The target User for the action, identified by session.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// The target Channel for the action, identified by channel_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 2) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private readonly static string ActionDefaultValue = "";

    private string action_;
    /// <summary>
    /// The action that should be executed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Action {
      get { return action_ ?? ActionDefaultValue; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAction {
      get { return action_ != null; }
    }
    /// <summary>Clears the value of the "action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAction() {
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContextAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContextAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (ChannelId != other.ChannelId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasAction) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      if (HasAction) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasChannelId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      if (HasAction) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasAction) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContextAction other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Lists the registered users.
  /// </summary>
  public sealed partial class UserList : pb::IMessage<UserList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserList> _parser = new pb::MessageParser<UserList>(() => new UserList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserList(UserList other) : this() {
      users_ = other.users_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserList Clone() {
      return new UserList(this);
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::MumbleProto.UserList.Types.User> _repeated_users_codec
        = pb::FieldCodec.ForMessage(10, global::MumbleProto.UserList.Types.User.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.UserList.Types.User> users_ = new pbc::RepeatedField<global::MumbleProto.UserList.Types.User>();
    /// <summary>
    /// A list of registered users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.UserList.Types.User> Users {
      get { return users_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!users_.Equals(other.users_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= users_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      users_.WriteTo(output, _repeated_users_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      users_.WriteTo(ref output, _repeated_users_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += users_.CalculateSize(_repeated_users_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserList other) {
      if (other == null) {
        return;
      }
      users_.Add(other.users_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            users_.AddEntriesFrom(ref input, _repeated_users_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class User : pb::IMessage<User>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.UserList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User(User other) : this() {
          _hasBits0 = other._hasBits0;
          userId_ = other.userId_;
          name_ = other.name_;
          lastSeen_ = other.lastSeen_;
          lastChannel_ = other.lastChannel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public User Clone() {
          return new User(this);
        }

        /// <summary>Field number for the "user_id" field.</summary>
        public const int UserIdFieldNumber = 1;
        private readonly static uint UserIdDefaultValue = 0;

        private uint userId_;
        /// <summary>
        /// Registered user ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint UserId {
          get { if ((_hasBits0 & 1) != 0) { return userId_; } else { return UserIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            userId_ = value;
          }
        }
        /// <summary>Gets whether the "user_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasUserId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "user_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearUserId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private readonly static string NameDefaultValue = "";

        private string name_;
        /// <summary>
        /// Registered user name.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Name {
          get { return name_ ?? NameDefaultValue; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasName {
          get { return name_ != null; }
        }
        /// <summary>Clears the value of the "name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearName() {
          name_ = null;
        }

        /// <summary>Field number for the "last_seen" field.</summary>
        public const int LastSeenFieldNumber = 3;
        private readonly static string LastSeenDefaultValue = "";

        private string lastSeen_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string LastSeen {
          get { return lastSeen_ ?? LastSeenDefaultValue; }
          set {
            lastSeen_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "last_seen" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastSeen {
          get { return lastSeen_ != null; }
        }
        /// <summary>Clears the value of the "last_seen" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastSeen() {
          lastSeen_ = null;
        }

        /// <summary>Field number for the "last_channel" field.</summary>
        public const int LastChannelFieldNumber = 4;
        private readonly static uint LastChannelDefaultValue = 0;

        private uint lastChannel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint LastChannel {
          get { if ((_hasBits0 & 2) != 0) { return lastChannel_; } else { return LastChannelDefaultValue; } }
          set {
            _hasBits0 |= 2;
            lastChannel_ = value;
          }
        }
        /// <summary>Gets whether the "last_channel" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLastChannel {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "last_channel" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLastChannel() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(User other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (UserId != other.UserId) return false;
          if (Name != other.Name) return false;
          if (LastSeen != other.LastSeen) return false;
          if (LastChannel != other.LastChannel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasUserId) hash ^= UserId.GetHashCode();
          if (HasName) hash ^= Name.GetHashCode();
          if (HasLastSeen) hash ^= LastSeen.GetHashCode();
          if (HasLastChannel) hash ^= LastChannel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasUserId) {
            output.WriteRawTag(8);
            output.WriteUInt32(UserId);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasLastSeen) {
            output.WriteRawTag(26);
            output.WriteString(LastSeen);
          }
          if (HasLastChannel) {
            output.WriteRawTag(32);
            output.WriteUInt32(LastChannel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasUserId) {
            output.WriteRawTag(8);
            output.WriteUInt32(UserId);
          }
          if (HasName) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (HasLastSeen) {
            output.WriteRawTag(26);
            output.WriteString(LastSeen);
          }
          if (HasLastChannel) {
            output.WriteRawTag(32);
            output.WriteUInt32(LastChannel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasUserId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UserId);
          }
          if (HasName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (HasLastSeen) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(LastSeen);
          }
          if (HasLastChannel) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastChannel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(User other) {
          if (other == null) {
            return;
          }
          if (other.HasUserId) {
            UserId = other.UserId;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasLastSeen) {
            LastSeen = other.LastSeen;
          }
          if (other.HasLastChannel) {
            LastChannel = other.LastChannel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                UserId = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                LastSeen = input.ReadString();
                break;
              }
              case 32: {
                LastChannel = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                UserId = input.ReadUInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                LastSeen = input.ReadString();
                break;
              }
              case 32: {
                LastChannel = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Sent by the client when it wants to register or clear whisper targets.
  ///
  /// Note: The first available target ID is 1 as 0 is reserved for normal
  /// talking. Maximum target ID is 30.
  /// </summary>
  public sealed partial class VoiceTarget : pb::IMessage<VoiceTarget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VoiceTarget> _parser = new pb::MessageParser<VoiceTarget>(() => new VoiceTarget());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VoiceTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceTarget(VoiceTarget other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      targets_ = other.targets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceTarget Clone() {
      return new VoiceTarget(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    /// <summary>
    /// Voice target ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "targets" field.</summary>
    public const int TargetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::MumbleProto.VoiceTarget.Types.Target> _repeated_targets_codec
        = pb::FieldCodec.ForMessage(18, global::MumbleProto.VoiceTarget.Types.Target.Parser);
    private readonly pbc::RepeatedField<global::MumbleProto.VoiceTarget.Types.Target> targets_ = new pbc::RepeatedField<global::MumbleProto.VoiceTarget.Types.Target>();
    /// <summary>
    /// The receivers that this voice target includes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::MumbleProto.VoiceTarget.Types.Target> Targets {
      get { return targets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VoiceTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VoiceTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!targets_.Equals(other.targets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      hash ^= targets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      targets_.WriteTo(output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      targets_.WriteTo(ref output, _repeated_targets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      size += targets_.CalculateSize(_repeated_targets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VoiceTarget other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      targets_.Add(other.targets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(input, _repeated_targets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            targets_.AddEntriesFrom(ref input, _repeated_targets_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VoiceTarget message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Target : pb::IMessage<Target>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Target> _parser = new pb::MessageParser<Target>(() => new Target());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Target> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.VoiceTarget.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Target() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Target(Target other) : this() {
          _hasBits0 = other._hasBits0;
          session_ = other.session_.Clone();
          channelId_ = other.channelId_;
          group_ = other.group_;
          links_ = other.links_;
          children_ = other.children_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Target Clone() {
          return new Target(this);
        }

        /// <summary>Field number for the "session" field.</summary>
        public const int SessionFieldNumber = 1;
        private static readonly pb::FieldCodec<uint> _repeated_session_codec
            = pb::FieldCodec.ForUInt32(8);
        private readonly pbc::RepeatedField<uint> session_ = new pbc::RepeatedField<uint>();
        /// <summary>
        /// Users that are included as targets.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<uint> Session {
          get { return session_; }
        }

        /// <summary>Field number for the "channel_id" field.</summary>
        public const int ChannelIdFieldNumber = 2;
        private readonly static uint ChannelIdDefaultValue = 0;

        private uint channelId_;
        /// <summary>
        /// Channel that is included as a target.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint ChannelId {
          get { if ((_hasBits0 & 1) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            channelId_ = value;
          }
        }
        /// <summary>Gets whether the "channel_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasChannelId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "channel_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearChannelId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "group" field.</summary>
        public const int GroupFieldNumber = 3;
        private readonly static string GroupDefaultValue = "";

        private string group_;
        /// <summary>
        /// ACL group that is included as a target.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string Group {
          get { return group_ ?? GroupDefaultValue; }
          set {
            group_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "group" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGroup {
          get { return group_ != null; }
        }
        /// <summary>Clears the value of the "group" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGroup() {
          group_ = null;
        }

        /// <summary>Field number for the "links" field.</summary>
        public const int LinksFieldNumber = 4;
        private readonly static bool LinksDefaultValue = false;

        private bool links_;
        /// <summary>
        /// True if the voice should follow links from the specified channel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Links {
          get { if ((_hasBits0 & 2) != 0) { return links_; } else { return LinksDefaultValue; } }
          set {
            _hasBits0 |= 2;
            links_ = value;
          }
        }
        /// <summary>Gets whether the "links" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLinks {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "links" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLinks() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "children" field.</summary>
        public const int ChildrenFieldNumber = 5;
        private readonly static bool ChildrenDefaultValue = false;

        private bool children_;
        /// <summary>
        /// True if the voice should also be sent to children of the specific
        /// channel.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Children {
          get { if ((_hasBits0 & 4) != 0) { return children_; } else { return ChildrenDefaultValue; } }
          set {
            _hasBits0 |= 4;
            children_ = value;
          }
        }
        /// <summary>Gets whether the "children" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasChildren {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "children" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearChildren() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Target);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Target other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!session_.Equals(other.session_)) return false;
          if (ChannelId != other.ChannelId) return false;
          if (Group != other.Group) return false;
          if (Links != other.Links) return false;
          if (Children != other.Children) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= session_.GetHashCode();
          if (HasChannelId) hash ^= ChannelId.GetHashCode();
          if (HasGroup) hash ^= Group.GetHashCode();
          if (HasLinks) hash ^= Links.GetHashCode();
          if (HasChildren) hash ^= Children.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          session_.WriteTo(output, _repeated_session_codec);
          if (HasChannelId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ChannelId);
          }
          if (HasGroup) {
            output.WriteRawTag(26);
            output.WriteString(Group);
          }
          if (HasLinks) {
            output.WriteRawTag(32);
            output.WriteBool(Links);
          }
          if (HasChildren) {
            output.WriteRawTag(40);
            output.WriteBool(Children);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          session_.WriteTo(ref output, _repeated_session_codec);
          if (HasChannelId) {
            output.WriteRawTag(16);
            output.WriteUInt32(ChannelId);
          }
          if (HasGroup) {
            output.WriteRawTag(26);
            output.WriteString(Group);
          }
          if (HasLinks) {
            output.WriteRawTag(32);
            output.WriteBool(Links);
          }
          if (HasChildren) {
            output.WriteRawTag(40);
            output.WriteBool(Children);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += session_.CalculateSize(_repeated_session_codec);
          if (HasChannelId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
          }
          if (HasGroup) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Group);
          }
          if (HasLinks) {
            size += 1 + 1;
          }
          if (HasChildren) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Target other) {
          if (other == null) {
            return;
          }
          session_.Add(other.session_);
          if (other.HasChannelId) {
            ChannelId = other.ChannelId;
          }
          if (other.HasGroup) {
            Group = other.Group;
          }
          if (other.HasLinks) {
            Links = other.Links;
          }
          if (other.HasChildren) {
            Children = other.Children;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                session_.AddEntriesFrom(input, _repeated_session_codec);
                break;
              }
              case 16: {
                ChannelId = input.ReadUInt32();
                break;
              }
              case 26: {
                Group = input.ReadString();
                break;
              }
              case 32: {
                Links = input.ReadBool();
                break;
              }
              case 40: {
                Children = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                session_.AddEntriesFrom(ref input, _repeated_session_codec);
                break;
              }
              case 16: {
                ChannelId = input.ReadUInt32();
                break;
              }
              case 26: {
                Group = input.ReadString();
                break;
              }
              case 32: {
                Links = input.ReadBool();
                break;
              }
              case 40: {
                Children = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Sent by the client when it wants permissions for a certain channel. Sent by
  /// the server when it replies to the query or wants the user to resync all
  /// channel permissions.
  /// </summary>
  public sealed partial class PermissionQuery : pb::IMessage<PermissionQuery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PermissionQuery> _parser = new pb::MessageParser<PermissionQuery>(() => new PermissionQuery());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PermissionQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionQuery(PermissionQuery other) : this() {
      _hasBits0 = other._hasBits0;
      channelId_ = other.channelId_;
      permissions_ = other.permissions_;
      flush_ = other.flush_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PermissionQuery Clone() {
      return new PermissionQuery(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private readonly static uint ChannelIdDefaultValue = 0;

    private uint channelId_;
    /// <summary>
    /// channel_id of the channel for which the permissions are queried.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ChannelId {
      get { if ((_hasBits0 & 1) != 0) { return channelId_; } else { return ChannelIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        channelId_ = value;
      }
    }
    /// <summary>Gets whether the "channel_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasChannelId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "channel_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearChannelId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private readonly static uint PermissionsDefaultValue = 0;

    private uint permissions_;
    /// <summary>
    /// Channel permissions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Permissions {
      get { if ((_hasBits0 & 2) != 0) { return permissions_; } else { return PermissionsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        permissions_ = value;
      }
    }
    /// <summary>Gets whether the "permissions" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermissions {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "permissions" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermissions() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "flush" field.</summary>
    public const int FlushFieldNumber = 3;
    private readonly static bool FlushDefaultValue = false;

    private bool flush_;
    /// <summary>
    /// True if the client should drop its current permission information for all
    /// channels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Flush {
      get { if ((_hasBits0 & 4) != 0) { return flush_; } else { return FlushDefaultValue; } }
      set {
        _hasBits0 |= 4;
        flush_ = value;
      }
    }
    /// <summary>Gets whether the "flush" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFlush {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "flush" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFlush() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PermissionQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PermissionQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (Permissions != other.Permissions) return false;
      if (Flush != other.Flush) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasChannelId) hash ^= ChannelId.GetHashCode();
      if (HasPermissions) hash ^= Permissions.GetHashCode();
      if (HasFlush) hash ^= Flush.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasPermissions) {
        output.WriteRawTag(16);
        output.WriteUInt32(Permissions);
      }
      if (HasFlush) {
        output.WriteRawTag(24);
        output.WriteBool(Flush);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasChannelId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ChannelId);
      }
      if (HasPermissions) {
        output.WriteRawTag(16);
        output.WriteUInt32(Permissions);
      }
      if (HasFlush) {
        output.WriteRawTag(24);
        output.WriteBool(Flush);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasChannelId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (HasPermissions) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Permissions);
      }
      if (HasFlush) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PermissionQuery other) {
      if (other == null) {
        return;
      }
      if (other.HasChannelId) {
        ChannelId = other.ChannelId;
      }
      if (other.HasPermissions) {
        Permissions = other.Permissions;
      }
      if (other.HasFlush) {
        Flush = other.Flush;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Permissions = input.ReadUInt32();
            break;
          }
          case 24: {
            Flush = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 16: {
            Permissions = input.ReadUInt32();
            break;
          }
          case 24: {
            Flush = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the server to notify the users of the version of the CELT codec they
  /// should use. This may change during the connection when new users join.
  /// </summary>
  public sealed partial class CodecVersion : pb::IMessage<CodecVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CodecVersion> _parser = new pb::MessageParser<CodecVersion>(() => new CodecVersion());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CodecVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodecVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodecVersion(CodecVersion other) : this() {
      _hasBits0 = other._hasBits0;
      alpha_ = other.alpha_;
      beta_ = other.beta_;
      preferAlpha_ = other.preferAlpha_;
      opus_ = other.opus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CodecVersion Clone() {
      return new CodecVersion(this);
    }

    /// <summary>Field number for the "alpha" field.</summary>
    public const int AlphaFieldNumber = 1;
    private readonly static int AlphaDefaultValue = 0;

    private int alpha_;
    /// <summary>
    /// The version of the CELT Alpha codec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Alpha {
      get { if ((_hasBits0 & 1) != 0) { return alpha_; } else { return AlphaDefaultValue; } }
      set {
        _hasBits0 |= 1;
        alpha_ = value;
      }
    }
    /// <summary>Gets whether the "alpha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAlpha {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "alpha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAlpha() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "beta" field.</summary>
    public const int BetaFieldNumber = 2;
    private readonly static int BetaDefaultValue = 0;

    private int beta_;
    /// <summary>
    /// The version of the CELT Beta codec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Beta {
      get { if ((_hasBits0 & 2) != 0) { return beta_; } else { return BetaDefaultValue; } }
      set {
        _hasBits0 |= 2;
        beta_ = value;
      }
    }
    /// <summary>Gets whether the "beta" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBeta {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "beta" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBeta() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "prefer_alpha" field.</summary>
    public const int PreferAlphaFieldNumber = 3;
    private readonly static bool PreferAlphaDefaultValue = true;

    private bool preferAlpha_;
    /// <summary>
    /// True if the user should prefer Alpha over Beta.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PreferAlpha {
      get { if ((_hasBits0 & 4) != 0) { return preferAlpha_; } else { return PreferAlphaDefaultValue; } }
      set {
        _hasBits0 |= 4;
        preferAlpha_ = value;
      }
    }
    /// <summary>Gets whether the "prefer_alpha" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPreferAlpha {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "prefer_alpha" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPreferAlpha() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "opus" field.</summary>
    public const int OpusFieldNumber = 4;
    private readonly static bool OpusDefaultValue = false;

    private bool opus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Opus {
      get { if ((_hasBits0 & 8) != 0) { return opus_; } else { return OpusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        opus_ = value;
      }
    }
    /// <summary>Gets whether the "opus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpus {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "opus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpus() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CodecVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CodecVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Alpha != other.Alpha) return false;
      if (Beta != other.Beta) return false;
      if (PreferAlpha != other.PreferAlpha) return false;
      if (Opus != other.Opus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAlpha) hash ^= Alpha.GetHashCode();
      if (HasBeta) hash ^= Beta.GetHashCode();
      if (HasPreferAlpha) hash ^= PreferAlpha.GetHashCode();
      if (HasOpus) hash ^= Opus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAlpha) {
        output.WriteRawTag(8);
        output.WriteInt32(Alpha);
      }
      if (HasBeta) {
        output.WriteRawTag(16);
        output.WriteInt32(Beta);
      }
      if (HasPreferAlpha) {
        output.WriteRawTag(24);
        output.WriteBool(PreferAlpha);
      }
      if (HasOpus) {
        output.WriteRawTag(32);
        output.WriteBool(Opus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAlpha) {
        output.WriteRawTag(8);
        output.WriteInt32(Alpha);
      }
      if (HasBeta) {
        output.WriteRawTag(16);
        output.WriteInt32(Beta);
      }
      if (HasPreferAlpha) {
        output.WriteRawTag(24);
        output.WriteBool(PreferAlpha);
      }
      if (HasOpus) {
        output.WriteRawTag(32);
        output.WriteBool(Opus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAlpha) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Alpha);
      }
      if (HasBeta) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Beta);
      }
      if (HasPreferAlpha) {
        size += 1 + 1;
      }
      if (HasOpus) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CodecVersion other) {
      if (other == null) {
        return;
      }
      if (other.HasAlpha) {
        Alpha = other.Alpha;
      }
      if (other.HasBeta) {
        Beta = other.Beta;
      }
      if (other.HasPreferAlpha) {
        PreferAlpha = other.PreferAlpha;
      }
      if (other.HasOpus) {
        Opus = other.Opus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Alpha = input.ReadInt32();
            break;
          }
          case 16: {
            Beta = input.ReadInt32();
            break;
          }
          case 24: {
            PreferAlpha = input.ReadBool();
            break;
          }
          case 32: {
            Opus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Alpha = input.ReadInt32();
            break;
          }
          case 16: {
            Beta = input.ReadInt32();
            break;
          }
          case 24: {
            PreferAlpha = input.ReadBool();
            break;
          }
          case 32: {
            Opus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to communicate user stats between the server and clients.
  /// </summary>
  public sealed partial class UserStats : pb::IMessage<UserStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserStats> _parser = new pb::MessageParser<UserStats>(() => new UserStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UserStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStats(UserStats other) : this() {
      _hasBits0 = other._hasBits0;
      session_ = other.session_;
      statsOnly_ = other.statsOnly_;
      certificates_ = other.certificates_.Clone();
      fromClient_ = other.fromClient_ != null ? other.fromClient_.Clone() : null;
      fromServer_ = other.fromServer_ != null ? other.fromServer_.Clone() : null;
      udpPackets_ = other.udpPackets_;
      tcpPackets_ = other.tcpPackets_;
      udpPingAvg_ = other.udpPingAvg_;
      udpPingVar_ = other.udpPingVar_;
      tcpPingAvg_ = other.tcpPingAvg_;
      tcpPingVar_ = other.tcpPingVar_;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      celtVersions_ = other.celtVersions_.Clone();
      address_ = other.address_;
      bandwidth_ = other.bandwidth_;
      onlinesecs_ = other.onlinesecs_;
      idlesecs_ = other.idlesecs_;
      strongCertificate_ = other.strongCertificate_;
      opus_ = other.opus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UserStats Clone() {
      return new UserStats(this);
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 1;
    private readonly static uint SessionDefaultValue = 0;

    private uint session_;
    /// <summary>
    /// User whose stats these are.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Session {
      get { if ((_hasBits0 & 1) != 0) { return session_; } else { return SessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        session_ = value;
      }
    }
    /// <summary>Gets whether the "session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "stats_only" field.</summary>
    public const int StatsOnlyFieldNumber = 2;
    private readonly static bool StatsOnlyDefaultValue = false;

    private bool statsOnly_;
    /// <summary>
    /// True if the message contains only mutable stats (packets, ping).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StatsOnly {
      get { if ((_hasBits0 & 2) != 0) { return statsOnly_; } else { return StatsOnlyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        statsOnly_ = value;
      }
    }
    /// <summary>Gets whether the "stats_only" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStatsOnly {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stats_only" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStatsOnly() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "certificates" field.</summary>
    public const int CertificatesFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_certificates_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> certificates_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Full user certificate chain of the user certificate in DER format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<pb::ByteString> Certificates {
      get { return certificates_; }
    }

    /// <summary>Field number for the "from_client" field.</summary>
    public const int FromClientFieldNumber = 4;
    private global::MumbleProto.UserStats.Types.Stats fromClient_;
    /// <summary>
    /// Packet statistics for packets received from the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.UserStats.Types.Stats FromClient {
      get { return fromClient_; }
      set {
        fromClient_ = value;
      }
    }

    /// <summary>Field number for the "from_server" field.</summary>
    public const int FromServerFieldNumber = 5;
    private global::MumbleProto.UserStats.Types.Stats fromServer_;
    /// <summary>
    /// Packet statistics for packets sent by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.UserStats.Types.Stats FromServer {
      get { return fromServer_; }
      set {
        fromServer_ = value;
      }
    }

    /// <summary>Field number for the "udp_packets" field.</summary>
    public const int UdpPacketsFieldNumber = 6;
    private readonly static uint UdpPacketsDefaultValue = 0;

    private uint udpPackets_;
    /// <summary>
    /// Amount of UDP packets sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint UdpPackets {
      get { if ((_hasBits0 & 4) != 0) { return udpPackets_; } else { return UdpPacketsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        udpPackets_ = value;
      }
    }
    /// <summary>Gets whether the "udp_packets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPackets {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "udp_packets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPackets() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "tcp_packets" field.</summary>
    public const int TcpPacketsFieldNumber = 7;
    private readonly static uint TcpPacketsDefaultValue = 0;

    private uint tcpPackets_;
    /// <summary>
    /// Amount of TCP packets sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TcpPackets {
      get { if ((_hasBits0 & 8) != 0) { return tcpPackets_; } else { return TcpPacketsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        tcpPackets_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_packets" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPackets {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "tcp_packets" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPackets() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "udp_ping_avg" field.</summary>
    public const int UdpPingAvgFieldNumber = 8;
    private readonly static float UdpPingAvgDefaultValue = 0F;

    private float udpPingAvg_;
    /// <summary>
    /// UDP ping average.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UdpPingAvg {
      get { if ((_hasBits0 & 16) != 0) { return udpPingAvg_; } else { return UdpPingAvgDefaultValue; } }
      set {
        _hasBits0 |= 16;
        udpPingAvg_ = value;
      }
    }
    /// <summary>Gets whether the "udp_ping_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPingAvg {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "udp_ping_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPingAvg() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "udp_ping_var" field.</summary>
    public const int UdpPingVarFieldNumber = 9;
    private readonly static float UdpPingVarDefaultValue = 0F;

    private float udpPingVar_;
    /// <summary>
    /// UDP ping variance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float UdpPingVar {
      get { if ((_hasBits0 & 32) != 0) { return udpPingVar_; } else { return UdpPingVarDefaultValue; } }
      set {
        _hasBits0 |= 32;
        udpPingVar_ = value;
      }
    }
    /// <summary>Gets whether the "udp_ping_var" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUdpPingVar {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "udp_ping_var" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUdpPingVar() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "tcp_ping_avg" field.</summary>
    public const int TcpPingAvgFieldNumber = 10;
    private readonly static float TcpPingAvgDefaultValue = 0F;

    private float tcpPingAvg_;
    /// <summary>
    /// TCP ping average.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TcpPingAvg {
      get { if ((_hasBits0 & 64) != 0) { return tcpPingAvg_; } else { return TcpPingAvgDefaultValue; } }
      set {
        _hasBits0 |= 64;
        tcpPingAvg_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_ping_avg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPingAvg {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "tcp_ping_avg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPingAvg() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "tcp_ping_var" field.</summary>
    public const int TcpPingVarFieldNumber = 11;
    private readonly static float TcpPingVarDefaultValue = 0F;

    private float tcpPingVar_;
    /// <summary>
    /// TCP ping variance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float TcpPingVar {
      get { if ((_hasBits0 & 128) != 0) { return tcpPingVar_; } else { return TcpPingVarDefaultValue; } }
      set {
        _hasBits0 |= 128;
        tcpPingVar_ = value;
      }
    }
    /// <summary>Gets whether the "tcp_ping_var" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTcpPingVar {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "tcp_ping_var" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTcpPingVar() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 12;
    private global::MumbleProto.Version version_;
    /// <summary>
    /// Client version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::MumbleProto.Version Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "celt_versions" field.</summary>
    public const int CeltVersionsFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_celtVersions_codec
        = pb::FieldCodec.ForInt32(104);
    private readonly pbc::RepeatedField<int> celtVersions_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// A list of CELT bitstream version constants supported by the client of this
    /// user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> CeltVersions {
      get { return celtVersions_; }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 14;
    private readonly static pb::ByteString AddressDefaultValue = pb::ByteString.Empty;

    private pb::ByteString address_;
    /// <summary>
    /// Client IP address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Address {
      get { return address_ ?? AddressDefaultValue; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAddress {
      get { return address_ != null; }
    }
    /// <summary>Clears the value of the "address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAddress() {
      address_ = null;
    }

    /// <summary>Field number for the "bandwidth" field.</summary>
    public const int BandwidthFieldNumber = 15;
    private readonly static uint BandwidthDefaultValue = 0;

    private uint bandwidth_;
    /// <summary>
    /// Bandwidth used by this client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bandwidth {
      get { if ((_hasBits0 & 256) != 0) { return bandwidth_; } else { return BandwidthDefaultValue; } }
      set {
        _hasBits0 |= 256;
        bandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBandwidth {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBandwidth() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "onlinesecs" field.</summary>
    public const int OnlinesecsFieldNumber = 16;
    private readonly static uint OnlinesecsDefaultValue = 0;

    private uint onlinesecs_;
    /// <summary>
    /// Connection duration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Onlinesecs {
      get { if ((_hasBits0 & 512) != 0) { return onlinesecs_; } else { return OnlinesecsDefaultValue; } }
      set {
        _hasBits0 |= 512;
        onlinesecs_ = value;
      }
    }
    /// <summary>Gets whether the "onlinesecs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOnlinesecs {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "onlinesecs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOnlinesecs() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "idlesecs" field.</summary>
    public const int IdlesecsFieldNumber = 17;
    private readonly static uint IdlesecsDefaultValue = 0;

    private uint idlesecs_;
    /// <summary>
    /// Duration since last activity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Idlesecs {
      get { if ((_hasBits0 & 1024) != 0) { return idlesecs_; } else { return IdlesecsDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        idlesecs_ = value;
      }
    }
    /// <summary>Gets whether the "idlesecs" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIdlesecs {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "idlesecs" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIdlesecs() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "strong_certificate" field.</summary>
    public const int StrongCertificateFieldNumber = 18;
    private readonly static bool StrongCertificateDefaultValue = false;

    private bool strongCertificate_;
    /// <summary>
    /// True if the user has a strong certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StrongCertificate {
      get { if ((_hasBits0 & 2048) != 0) { return strongCertificate_; } else { return StrongCertificateDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        strongCertificate_ = value;
      }
    }
    /// <summary>Gets whether the "strong_certificate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStrongCertificate {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "strong_certificate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStrongCertificate() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "opus" field.</summary>
    public const int OpusFieldNumber = 19;
    private readonly static bool OpusDefaultValue = false;

    private bool opus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Opus {
      get { if ((_hasBits0 & 4096) != 0) { return opus_; } else { return OpusDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        opus_ = value;
      }
    }
    /// <summary>Gets whether the "opus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOpus {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "opus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOpus() {
      _hasBits0 &= ~4096;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UserStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UserStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Session != other.Session) return false;
      if (StatsOnly != other.StatsOnly) return false;
      if(!certificates_.Equals(other.certificates_)) return false;
      if (!object.Equals(FromClient, other.FromClient)) return false;
      if (!object.Equals(FromServer, other.FromServer)) return false;
      if (UdpPackets != other.UdpPackets) return false;
      if (TcpPackets != other.TcpPackets) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UdpPingAvg, other.UdpPingAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(UdpPingVar, other.UdpPingVar)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TcpPingAvg, other.TcpPingAvg)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TcpPingVar, other.TcpPingVar)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if(!celtVersions_.Equals(other.celtVersions_)) return false;
      if (Address != other.Address) return false;
      if (Bandwidth != other.Bandwidth) return false;
      if (Onlinesecs != other.Onlinesecs) return false;
      if (Idlesecs != other.Idlesecs) return false;
      if (StrongCertificate != other.StrongCertificate) return false;
      if (Opus != other.Opus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSession) hash ^= Session.GetHashCode();
      if (HasStatsOnly) hash ^= StatsOnly.GetHashCode();
      hash ^= certificates_.GetHashCode();
      if (fromClient_ != null) hash ^= FromClient.GetHashCode();
      if (fromServer_ != null) hash ^= FromServer.GetHashCode();
      if (HasUdpPackets) hash ^= UdpPackets.GetHashCode();
      if (HasTcpPackets) hash ^= TcpPackets.GetHashCode();
      if (HasUdpPingAvg) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UdpPingAvg);
      if (HasUdpPingVar) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(UdpPingVar);
      if (HasTcpPingAvg) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TcpPingAvg);
      if (HasTcpPingVar) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TcpPingVar);
      if (version_ != null) hash ^= Version.GetHashCode();
      hash ^= celtVersions_.GetHashCode();
      if (HasAddress) hash ^= Address.GetHashCode();
      if (HasBandwidth) hash ^= Bandwidth.GetHashCode();
      if (HasOnlinesecs) hash ^= Onlinesecs.GetHashCode();
      if (HasIdlesecs) hash ^= Idlesecs.GetHashCode();
      if (HasStrongCertificate) hash ^= StrongCertificate.GetHashCode();
      if (HasOpus) hash ^= Opus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasStatsOnly) {
        output.WriteRawTag(16);
        output.WriteBool(StatsOnly);
      }
      certificates_.WriteTo(output, _repeated_certificates_codec);
      if (fromClient_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromClient);
      }
      if (fromServer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FromServer);
      }
      if (HasUdpPackets) {
        output.WriteRawTag(48);
        output.WriteUInt32(UdpPackets);
      }
      if (HasTcpPackets) {
        output.WriteRawTag(56);
        output.WriteUInt32(TcpPackets);
      }
      if (HasUdpPingAvg) {
        output.WriteRawTag(69);
        output.WriteFloat(UdpPingAvg);
      }
      if (HasUdpPingVar) {
        output.WriteRawTag(77);
        output.WriteFloat(UdpPingVar);
      }
      if (HasTcpPingAvg) {
        output.WriteRawTag(85);
        output.WriteFloat(TcpPingAvg);
      }
      if (HasTcpPingVar) {
        output.WriteRawTag(93);
        output.WriteFloat(TcpPingVar);
      }
      if (version_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Version);
      }
      celtVersions_.WriteTo(output, _repeated_celtVersions_codec);
      if (HasAddress) {
        output.WriteRawTag(114);
        output.WriteBytes(Address);
      }
      if (HasBandwidth) {
        output.WriteRawTag(120);
        output.WriteUInt32(Bandwidth);
      }
      if (HasOnlinesecs) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Onlinesecs);
      }
      if (HasIdlesecs) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Idlesecs);
      }
      if (HasStrongCertificate) {
        output.WriteRawTag(144, 1);
        output.WriteBool(StrongCertificate);
      }
      if (HasOpus) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Opus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(Session);
      }
      if (HasStatsOnly) {
        output.WriteRawTag(16);
        output.WriteBool(StatsOnly);
      }
      certificates_.WriteTo(ref output, _repeated_certificates_codec);
      if (fromClient_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromClient);
      }
      if (fromServer_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(FromServer);
      }
      if (HasUdpPackets) {
        output.WriteRawTag(48);
        output.WriteUInt32(UdpPackets);
      }
      if (HasTcpPackets) {
        output.WriteRawTag(56);
        output.WriteUInt32(TcpPackets);
      }
      if (HasUdpPingAvg) {
        output.WriteRawTag(69);
        output.WriteFloat(UdpPingAvg);
      }
      if (HasUdpPingVar) {
        output.WriteRawTag(77);
        output.WriteFloat(UdpPingVar);
      }
      if (HasTcpPingAvg) {
        output.WriteRawTag(85);
        output.WriteFloat(TcpPingAvg);
      }
      if (HasTcpPingVar) {
        output.WriteRawTag(93);
        output.WriteFloat(TcpPingVar);
      }
      if (version_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Version);
      }
      celtVersions_.WriteTo(ref output, _repeated_celtVersions_codec);
      if (HasAddress) {
        output.WriteRawTag(114);
        output.WriteBytes(Address);
      }
      if (HasBandwidth) {
        output.WriteRawTag(120);
        output.WriteUInt32(Bandwidth);
      }
      if (HasOnlinesecs) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Onlinesecs);
      }
      if (HasIdlesecs) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(Idlesecs);
      }
      if (HasStrongCertificate) {
        output.WriteRawTag(144, 1);
        output.WriteBool(StrongCertificate);
      }
      if (HasOpus) {
        output.WriteRawTag(152, 1);
        output.WriteBool(Opus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Session);
      }
      if (HasStatsOnly) {
        size += 1 + 1;
      }
      size += certificates_.CalculateSize(_repeated_certificates_codec);
      if (fromClient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromClient);
      }
      if (fromServer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromServer);
      }
      if (HasUdpPackets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UdpPackets);
      }
      if (HasTcpPackets) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TcpPackets);
      }
      if (HasUdpPingAvg) {
        size += 1 + 4;
      }
      if (HasUdpPingVar) {
        size += 1 + 4;
      }
      if (HasTcpPingAvg) {
        size += 1 + 4;
      }
      if (HasTcpPingVar) {
        size += 1 + 4;
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      size += celtVersions_.CalculateSize(_repeated_celtVersions_codec);
      if (HasAddress) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (HasBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bandwidth);
      }
      if (HasOnlinesecs) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Onlinesecs);
      }
      if (HasIdlesecs) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Idlesecs);
      }
      if (HasStrongCertificate) {
        size += 2 + 1;
      }
      if (HasOpus) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UserStats other) {
      if (other == null) {
        return;
      }
      if (other.HasSession) {
        Session = other.Session;
      }
      if (other.HasStatsOnly) {
        StatsOnly = other.StatsOnly;
      }
      certificates_.Add(other.certificates_);
      if (other.fromClient_ != null) {
        if (fromClient_ == null) {
          FromClient = new global::MumbleProto.UserStats.Types.Stats();
        }
        FromClient.MergeFrom(other.FromClient);
      }
      if (other.fromServer_ != null) {
        if (fromServer_ == null) {
          FromServer = new global::MumbleProto.UserStats.Types.Stats();
        }
        FromServer.MergeFrom(other.FromServer);
      }
      if (other.HasUdpPackets) {
        UdpPackets = other.UdpPackets;
      }
      if (other.HasTcpPackets) {
        TcpPackets = other.TcpPackets;
      }
      if (other.HasUdpPingAvg) {
        UdpPingAvg = other.UdpPingAvg;
      }
      if (other.HasUdpPingVar) {
        UdpPingVar = other.UdpPingVar;
      }
      if (other.HasTcpPingAvg) {
        TcpPingAvg = other.TcpPingAvg;
      }
      if (other.HasTcpPingVar) {
        TcpPingVar = other.TcpPingVar;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::MumbleProto.Version();
        }
        Version.MergeFrom(other.Version);
      }
      celtVersions_.Add(other.celtVersions_);
      if (other.HasAddress) {
        Address = other.Address;
      }
      if (other.HasBandwidth) {
        Bandwidth = other.Bandwidth;
      }
      if (other.HasOnlinesecs) {
        Onlinesecs = other.Onlinesecs;
      }
      if (other.HasIdlesecs) {
        Idlesecs = other.Idlesecs;
      }
      if (other.HasStrongCertificate) {
        StrongCertificate = other.StrongCertificate;
      }
      if (other.HasOpus) {
        Opus = other.Opus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            StatsOnly = input.ReadBool();
            break;
          }
          case 26: {
            certificates_.AddEntriesFrom(input, _repeated_certificates_codec);
            break;
          }
          case 34: {
            if (fromClient_ == null) {
              FromClient = new global::MumbleProto.UserStats.Types.Stats();
            }
            input.ReadMessage(FromClient);
            break;
          }
          case 42: {
            if (fromServer_ == null) {
              FromServer = new global::MumbleProto.UserStats.Types.Stats();
            }
            input.ReadMessage(FromServer);
            break;
          }
          case 48: {
            UdpPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            TcpPackets = input.ReadUInt32();
            break;
          }
          case 69: {
            UdpPingAvg = input.ReadFloat();
            break;
          }
          case 77: {
            UdpPingVar = input.ReadFloat();
            break;
          }
          case 85: {
            TcpPingAvg = input.ReadFloat();
            break;
          }
          case 93: {
            TcpPingVar = input.ReadFloat();
            break;
          }
          case 98: {
            if (version_ == null) {
              Version = new global::MumbleProto.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 106:
          case 104: {
            celtVersions_.AddEntriesFrom(input, _repeated_celtVersions_codec);
            break;
          }
          case 114: {
            Address = input.ReadBytes();
            break;
          }
          case 120: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 128: {
            Onlinesecs = input.ReadUInt32();
            break;
          }
          case 136: {
            Idlesecs = input.ReadUInt32();
            break;
          }
          case 144: {
            StrongCertificate = input.ReadBool();
            break;
          }
          case 152: {
            Opus = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Session = input.ReadUInt32();
            break;
          }
          case 16: {
            StatsOnly = input.ReadBool();
            break;
          }
          case 26: {
            certificates_.AddEntriesFrom(ref input, _repeated_certificates_codec);
            break;
          }
          case 34: {
            if (fromClient_ == null) {
              FromClient = new global::MumbleProto.UserStats.Types.Stats();
            }
            input.ReadMessage(FromClient);
            break;
          }
          case 42: {
            if (fromServer_ == null) {
              FromServer = new global::MumbleProto.UserStats.Types.Stats();
            }
            input.ReadMessage(FromServer);
            break;
          }
          case 48: {
            UdpPackets = input.ReadUInt32();
            break;
          }
          case 56: {
            TcpPackets = input.ReadUInt32();
            break;
          }
          case 69: {
            UdpPingAvg = input.ReadFloat();
            break;
          }
          case 77: {
            UdpPingVar = input.ReadFloat();
            break;
          }
          case 85: {
            TcpPingAvg = input.ReadFloat();
            break;
          }
          case 93: {
            TcpPingVar = input.ReadFloat();
            break;
          }
          case 98: {
            if (version_ == null) {
              Version = new global::MumbleProto.Version();
            }
            input.ReadMessage(Version);
            break;
          }
          case 106:
          case 104: {
            celtVersions_.AddEntriesFrom(ref input, _repeated_celtVersions_codec);
            break;
          }
          case 114: {
            Address = input.ReadBytes();
            break;
          }
          case 120: {
            Bandwidth = input.ReadUInt32();
            break;
          }
          case 128: {
            Onlinesecs = input.ReadUInt32();
            break;
          }
          case 136: {
            Idlesecs = input.ReadUInt32();
            break;
          }
          case 144: {
            StrongCertificate = input.ReadBool();
            break;
          }
          case 152: {
            Opus = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserStats message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class Stats : pb::IMessage<Stats>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Stats> _parser = new pb::MessageParser<Stats>(() => new Stats());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Stats> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::MumbleProto.UserStats.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Stats() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Stats(Stats other) : this() {
          _hasBits0 = other._hasBits0;
          good_ = other.good_;
          late_ = other.late_;
          lost_ = other.lost_;
          resync_ = other.resync_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Stats Clone() {
          return new Stats(this);
        }

        /// <summary>Field number for the "good" field.</summary>
        public const int GoodFieldNumber = 1;
        private readonly static uint GoodDefaultValue = 0;

        private uint good_;
        /// <summary>
        /// The amount of good packets received.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Good {
          get { if ((_hasBits0 & 1) != 0) { return good_; } else { return GoodDefaultValue; } }
          set {
            _hasBits0 |= 1;
            good_ = value;
          }
        }
        /// <summary>Gets whether the "good" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGood {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "good" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGood() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "late" field.</summary>
        public const int LateFieldNumber = 2;
        private readonly static uint LateDefaultValue = 0;

        private uint late_;
        /// <summary>
        /// The amount of late packets received.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Late {
          get { if ((_hasBits0 & 2) != 0) { return late_; } else { return LateDefaultValue; } }
          set {
            _hasBits0 |= 2;
            late_ = value;
          }
        }
        /// <summary>Gets whether the "late" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLate {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "late" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLate() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "lost" field.</summary>
        public const int LostFieldNumber = 3;
        private readonly static uint LostDefaultValue = 0;

        private uint lost_;
        /// <summary>
        /// The amount of packets never received.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Lost {
          get { if ((_hasBits0 & 4) != 0) { return lost_; } else { return LostDefaultValue; } }
          set {
            _hasBits0 |= 4;
            lost_ = value;
          }
        }
        /// <summary>Gets whether the "lost" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasLost {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "lost" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearLost() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "resync" field.</summary>
        public const int ResyncFieldNumber = 4;
        private readonly static uint ResyncDefaultValue = 0;

        private uint resync_;
        /// <summary>
        /// The amount of nonce resyncs.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Resync {
          get { if ((_hasBits0 & 8) != 0) { return resync_; } else { return ResyncDefaultValue; } }
          set {
            _hasBits0 |= 8;
            resync_ = value;
          }
        }
        /// <summary>Gets whether the "resync" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasResync {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "resync" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearResync() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Stats);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Stats other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Good != other.Good) return false;
          if (Late != other.Late) return false;
          if (Lost != other.Lost) return false;
          if (Resync != other.Resync) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasGood) hash ^= Good.GetHashCode();
          if (HasLate) hash ^= Late.GetHashCode();
          if (HasLost) hash ^= Lost.GetHashCode();
          if (HasResync) hash ^= Resync.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasGood) {
            output.WriteRawTag(8);
            output.WriteUInt32(Good);
          }
          if (HasLate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Late);
          }
          if (HasLost) {
            output.WriteRawTag(24);
            output.WriteUInt32(Lost);
          }
          if (HasResync) {
            output.WriteRawTag(32);
            output.WriteUInt32(Resync);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasGood) {
            output.WriteRawTag(8);
            output.WriteUInt32(Good);
          }
          if (HasLate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Late);
          }
          if (HasLost) {
            output.WriteRawTag(24);
            output.WriteUInt32(Lost);
          }
          if (HasResync) {
            output.WriteRawTag(32);
            output.WriteUInt32(Resync);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasGood) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Good);
          }
          if (HasLate) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Late);
          }
          if (HasLost) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lost);
          }
          if (HasResync) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Resync);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Stats other) {
          if (other == null) {
            return;
          }
          if (other.HasGood) {
            Good = other.Good;
          }
          if (other.HasLate) {
            Late = other.Late;
          }
          if (other.HasLost) {
            Lost = other.Lost;
          }
          if (other.HasResync) {
            Resync = other.Resync;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Good = input.ReadUInt32();
                break;
              }
              case 16: {
                Late = input.ReadUInt32();
                break;
              }
              case 24: {
                Lost = input.ReadUInt32();
                break;
              }
              case 32: {
                Resync = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Good = input.ReadUInt32();
                break;
              }
              case 16: {
                Late = input.ReadUInt32();
                break;
              }
              case 24: {
                Lost = input.ReadUInt32();
                break;
              }
              case 32: {
                Resync = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Used by the client to request binary data from the server. By default large
  /// comments or textures are not sent within standard messages but instead the
  /// hash is. If the client does not recognize the hash it may request the
  /// resource when it needs it. The client does so by sending a RequestBlob
  /// message with the correct fields filled with the user sessions or channel_ids
  /// it wants to receive. The server replies to this by sending a new
  /// UserState/ChannelState message with the resources filled even if they would
  /// normally be transmitted as hashes.
  /// </summary>
  public sealed partial class RequestBlob : pb::IMessage<RequestBlob>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RequestBlob> _parser = new pb::MessageParser<RequestBlob>(() => new RequestBlob());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RequestBlob> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBlob() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBlob(RequestBlob other) : this() {
      sessionTexture_ = other.sessionTexture_.Clone();
      sessionComment_ = other.sessionComment_.Clone();
      channelDescription_ = other.channelDescription_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RequestBlob Clone() {
      return new RequestBlob(this);
    }

    /// <summary>Field number for the "session_texture" field.</summary>
    public const int SessionTextureFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_sessionTexture_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> sessionTexture_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// sessions of the requested UserState textures.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SessionTexture {
      get { return sessionTexture_; }
    }

    /// <summary>Field number for the "session_comment" field.</summary>
    public const int SessionCommentFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_sessionComment_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> sessionComment_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// sessions of the requested UserState comments.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> SessionComment {
      get { return sessionComment_; }
    }

    /// <summary>Field number for the "channel_description" field.</summary>
    public const int ChannelDescriptionFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_channelDescription_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> channelDescription_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// channel_ids of the requested ChannelState descriptions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ChannelDescription {
      get { return channelDescription_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RequestBlob);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RequestBlob other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessionTexture_.Equals(other.sessionTexture_)) return false;
      if(!sessionComment_.Equals(other.sessionComment_)) return false;
      if(!channelDescription_.Equals(other.channelDescription_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessionTexture_.GetHashCode();
      hash ^= sessionComment_.GetHashCode();
      hash ^= channelDescription_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessionTexture_.WriteTo(output, _repeated_sessionTexture_codec);
      sessionComment_.WriteTo(output, _repeated_sessionComment_codec);
      channelDescription_.WriteTo(output, _repeated_channelDescription_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessionTexture_.WriteTo(ref output, _repeated_sessionTexture_codec);
      sessionComment_.WriteTo(ref output, _repeated_sessionComment_codec);
      channelDescription_.WriteTo(ref output, _repeated_channelDescription_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sessionTexture_.CalculateSize(_repeated_sessionTexture_codec);
      size += sessionComment_.CalculateSize(_repeated_sessionComment_codec);
      size += channelDescription_.CalculateSize(_repeated_channelDescription_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RequestBlob other) {
      if (other == null) {
        return;
      }
      sessionTexture_.Add(other.sessionTexture_);
      sessionComment_.Add(other.sessionComment_);
      channelDescription_.Add(other.channelDescription_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            sessionTexture_.AddEntriesFrom(input, _repeated_sessionTexture_codec);
            break;
          }
          case 18:
          case 16: {
            sessionComment_.AddEntriesFrom(input, _repeated_sessionComment_codec);
            break;
          }
          case 26:
          case 24: {
            channelDescription_.AddEntriesFrom(input, _repeated_channelDescription_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            sessionTexture_.AddEntriesFrom(ref input, _repeated_sessionTexture_codec);
            break;
          }
          case 18:
          case 16: {
            sessionComment_.AddEntriesFrom(ref input, _repeated_sessionComment_codec);
            break;
          }
          case 26:
          case 24: {
            channelDescription_.AddEntriesFrom(ref input, _repeated_channelDescription_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the server when it informs the clients on server configuration
  /// details.
  /// </summary>
  public sealed partial class ServerConfig : pb::IMessage<ServerConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerConfig> _parser = new pb::MessageParser<ServerConfig>(() => new ServerConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerConfig(ServerConfig other) : this() {
      _hasBits0 = other._hasBits0;
      maxBandwidth_ = other.maxBandwidth_;
      welcomeText_ = other.welcomeText_;
      allowHtml_ = other.allowHtml_;
      messageLength_ = other.messageLength_;
      imageMessageLength_ = other.imageMessageLength_;
      maxUsers_ = other.maxUsers_;
      recordingAllowed_ = other.recordingAllowed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerConfig Clone() {
      return new ServerConfig(this);
    }

    /// <summary>Field number for the "max_bandwidth" field.</summary>
    public const int MaxBandwidthFieldNumber = 1;
    private readonly static uint MaxBandwidthDefaultValue = 0;

    private uint maxBandwidth_;
    /// <summary>
    /// The maximum bandwidth the clients should use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBandwidth {
      get { if ((_hasBits0 & 1) != 0) { return maxBandwidth_; } else { return MaxBandwidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        maxBandwidth_ = value;
      }
    }
    /// <summary>Gets whether the "max_bandwidth" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxBandwidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "max_bandwidth" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxBandwidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "welcome_text" field.</summary>
    public const int WelcomeTextFieldNumber = 2;
    private readonly static string WelcomeTextDefaultValue = "";

    private string welcomeText_;
    /// <summary>
    /// Server welcome text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WelcomeText {
      get { return welcomeText_ ?? WelcomeTextDefaultValue; }
      set {
        welcomeText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "welcome_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWelcomeText {
      get { return welcomeText_ != null; }
    }
    /// <summary>Clears the value of the "welcome_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWelcomeText() {
      welcomeText_ = null;
    }

    /// <summary>Field number for the "allow_html" field.</summary>
    public const int AllowHtmlFieldNumber = 3;
    private readonly static bool AllowHtmlDefaultValue = false;

    private bool allowHtml_;
    /// <summary>
    /// True if the server allows HTML.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowHtml {
      get { if ((_hasBits0 & 2) != 0) { return allowHtml_; } else { return AllowHtmlDefaultValue; } }
      set {
        _hasBits0 |= 2;
        allowHtml_ = value;
      }
    }
    /// <summary>Gets whether the "allow_html" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowHtml {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "allow_html" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowHtml() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "message_length" field.</summary>
    public const int MessageLengthFieldNumber = 4;
    private readonly static uint MessageLengthDefaultValue = 0;

    private uint messageLength_;
    /// <summary>
    /// Maximum text message length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MessageLength {
      get { if ((_hasBits0 & 4) != 0) { return messageLength_; } else { return MessageLengthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        messageLength_ = value;
      }
    }
    /// <summary>Gets whether the "message_length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMessageLength {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "message_length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMessageLength() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "image_message_length" field.</summary>
    public const int ImageMessageLengthFieldNumber = 5;
    private readonly static uint ImageMessageLengthDefaultValue = 0;

    private uint imageMessageLength_;
    /// <summary>
    /// Maximum image message length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ImageMessageLength {
      get { if ((_hasBits0 & 8) != 0) { return imageMessageLength_; } else { return ImageMessageLengthDefaultValue; } }
      set {
        _hasBits0 |= 8;
        imageMessageLength_ = value;
      }
    }
    /// <summary>Gets whether the "image_message_length" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasImageMessageLength {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "image_message_length" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearImageMessageLength() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "max_users" field.</summary>
    public const int MaxUsersFieldNumber = 6;
    private readonly static uint MaxUsersDefaultValue = 0;

    private uint maxUsers_;
    /// <summary>
    /// The maximum number of users allowed on the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxUsers {
      get { if ((_hasBits0 & 16) != 0) { return maxUsers_; } else { return MaxUsersDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maxUsers_ = value;
      }
    }
    /// <summary>Gets whether the "max_users" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaxUsers {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "max_users" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaxUsers() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "recording_allowed" field.</summary>
    public const int RecordingAllowedFieldNumber = 7;
    private readonly static bool RecordingAllowedDefaultValue = false;

    private bool recordingAllowed_;
    /// <summary>
    /// Whether using Mumble's recording feature is allowed on the server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RecordingAllowed {
      get { if ((_hasBits0 & 32) != 0) { return recordingAllowed_; } else { return RecordingAllowedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        recordingAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "recording_allowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRecordingAllowed {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "recording_allowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRecordingAllowed() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxBandwidth != other.MaxBandwidth) return false;
      if (WelcomeText != other.WelcomeText) return false;
      if (AllowHtml != other.AllowHtml) return false;
      if (MessageLength != other.MessageLength) return false;
      if (ImageMessageLength != other.ImageMessageLength) return false;
      if (MaxUsers != other.MaxUsers) return false;
      if (RecordingAllowed != other.RecordingAllowed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMaxBandwidth) hash ^= MaxBandwidth.GetHashCode();
      if (HasWelcomeText) hash ^= WelcomeText.GetHashCode();
      if (HasAllowHtml) hash ^= AllowHtml.GetHashCode();
      if (HasMessageLength) hash ^= MessageLength.GetHashCode();
      if (HasImageMessageLength) hash ^= ImageMessageLength.GetHashCode();
      if (HasMaxUsers) hash ^= MaxUsers.GetHashCode();
      if (HasRecordingAllowed) hash ^= RecordingAllowed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMaxBandwidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxBandwidth);
      }
      if (HasWelcomeText) {
        output.WriteRawTag(18);
        output.WriteString(WelcomeText);
      }
      if (HasAllowHtml) {
        output.WriteRawTag(24);
        output.WriteBool(AllowHtml);
      }
      if (HasMessageLength) {
        output.WriteRawTag(32);
        output.WriteUInt32(MessageLength);
      }
      if (HasImageMessageLength) {
        output.WriteRawTag(40);
        output.WriteUInt32(ImageMessageLength);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxUsers);
      }
      if (HasRecordingAllowed) {
        output.WriteRawTag(56);
        output.WriteBool(RecordingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMaxBandwidth) {
        output.WriteRawTag(8);
        output.WriteUInt32(MaxBandwidth);
      }
      if (HasWelcomeText) {
        output.WriteRawTag(18);
        output.WriteString(WelcomeText);
      }
      if (HasAllowHtml) {
        output.WriteRawTag(24);
        output.WriteBool(AllowHtml);
      }
      if (HasMessageLength) {
        output.WriteRawTag(32);
        output.WriteUInt32(MessageLength);
      }
      if (HasImageMessageLength) {
        output.WriteRawTag(40);
        output.WriteUInt32(ImageMessageLength);
      }
      if (HasMaxUsers) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxUsers);
      }
      if (HasRecordingAllowed) {
        output.WriteRawTag(56);
        output.WriteBool(RecordingAllowed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMaxBandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBandwidth);
      }
      if (HasWelcomeText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WelcomeText);
      }
      if (HasAllowHtml) {
        size += 1 + 1;
      }
      if (HasMessageLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageLength);
      }
      if (HasImageMessageLength) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ImageMessageLength);
      }
      if (HasMaxUsers) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxUsers);
      }
      if (HasRecordingAllowed) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasMaxBandwidth) {
        MaxBandwidth = other.MaxBandwidth;
      }
      if (other.HasWelcomeText) {
        WelcomeText = other.WelcomeText;
      }
      if (other.HasAllowHtml) {
        AllowHtml = other.AllowHtml;
      }
      if (other.HasMessageLength) {
        MessageLength = other.MessageLength;
      }
      if (other.HasImageMessageLength) {
        ImageMessageLength = other.ImageMessageLength;
      }
      if (other.HasMaxUsers) {
        MaxUsers = other.MaxUsers;
      }
      if (other.HasRecordingAllowed) {
        RecordingAllowed = other.RecordingAllowed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxBandwidth = input.ReadUInt32();
            break;
          }
          case 18: {
            WelcomeText = input.ReadString();
            break;
          }
          case 24: {
            AllowHtml = input.ReadBool();
            break;
          }
          case 32: {
            MessageLength = input.ReadUInt32();
            break;
          }
          case 40: {
            ImageMessageLength = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxUsers = input.ReadUInt32();
            break;
          }
          case 56: {
            RecordingAllowed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxBandwidth = input.ReadUInt32();
            break;
          }
          case 18: {
            WelcomeText = input.ReadString();
            break;
          }
          case 24: {
            AllowHtml = input.ReadBool();
            break;
          }
          case 32: {
            MessageLength = input.ReadUInt32();
            break;
          }
          case 40: {
            ImageMessageLength = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxUsers = input.ReadUInt32();
            break;
          }
          case 56: {
            RecordingAllowed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sent by the server to inform the clients of suggested client configuration
  /// specified by the server administrator.
  /// </summary>
  public sealed partial class SuggestConfig : pb::IMessage<SuggestConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestConfig> _parser = new pb::MessageParser<SuggestConfig>(() => new SuggestConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SuggestConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuggestConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuggestConfig(SuggestConfig other) : this() {
      _hasBits0 = other._hasBits0;
      versionV1_ = other.versionV1_;
      versionV2_ = other.versionV2_;
      positional_ = other.positional_;
      pushToTalk_ = other.pushToTalk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SuggestConfig Clone() {
      return new SuggestConfig(this);
    }

    /// <summary>Field number for the "version_v1" field.</summary>
    public const int VersionV1FieldNumber = 1;
    private readonly static uint VersionV1DefaultValue = 0;

    private uint versionV1_;
    /// <summary>
    /// Suggested client version in the legacy format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VersionV1 {
      get { if ((_hasBits0 & 1) != 0) { return versionV1_; } else { return VersionV1DefaultValue; } }
      set {
        _hasBits0 |= 1;
        versionV1_ = value;
      }
    }
    /// <summary>Gets whether the "version_v1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersionV1 {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version_v1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersionV1() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "version_v2" field.</summary>
    public const int VersionV2FieldNumber = 4;
    private readonly static ulong VersionV2DefaultValue = 0UL;

    private ulong versionV2_;
    /// <summary>
    /// Suggested client version in the new format.
    /// Necessary since patch level may exceed 255. (See https://github.com/mumble-voip/mumble/issues/5827)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong VersionV2 {
      get { if ((_hasBits0 & 8) != 0) { return versionV2_; } else { return VersionV2DefaultValue; } }
      set {
        _hasBits0 |= 8;
        versionV2_ = value;
      }
    }
    /// <summary>Gets whether the "version_v2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVersionV2 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "version_v2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearVersionV2() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "positional" field.</summary>
    public const int PositionalFieldNumber = 2;
    private readonly static bool PositionalDefaultValue = false;

    private bool positional_;
    /// <summary>
    /// True if the administrator suggests positional audio to be used on this
    /// server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Positional {
      get { if ((_hasBits0 & 2) != 0) { return positional_; } else { return PositionalDefaultValue; } }
      set {
        _hasBits0 |= 2;
        positional_ = value;
      }
    }
    /// <summary>Gets whether the "positional" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPositional {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "positional" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPositional() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "push_to_talk" field.</summary>
    public const int PushToTalkFieldNumber = 3;
    private readonly static bool PushToTalkDefaultValue = false;

    private bool pushToTalk_;
    /// <summary>
    /// True if the administrator suggests push to talk to be used on this server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PushToTalk {
      get { if ((_hasBits0 & 4) != 0) { return pushToTalk_; } else { return PushToTalkDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pushToTalk_ = value;
      }
    }
    /// <summary>Gets whether the "push_to_talk" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPushToTalk {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "push_to_talk" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPushToTalk() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SuggestConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SuggestConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionV1 != other.VersionV1) return false;
      if (VersionV2 != other.VersionV2) return false;
      if (Positional != other.Positional) return false;
      if (PushToTalk != other.PushToTalk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersionV1) hash ^= VersionV1.GetHashCode();
      if (HasVersionV2) hash ^= VersionV2.GetHashCode();
      if (HasPositional) hash ^= Positional.GetHashCode();
      if (HasPushToTalk) hash ^= PushToTalk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersionV1) {
        output.WriteRawTag(8);
        output.WriteUInt32(VersionV1);
      }
      if (HasPositional) {
        output.WriteRawTag(16);
        output.WriteBool(Positional);
      }
      if (HasPushToTalk) {
        output.WriteRawTag(24);
        output.WriteBool(PushToTalk);
      }
      if (HasVersionV2) {
        output.WriteRawTag(32);
        output.WriteUInt64(VersionV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersionV1) {
        output.WriteRawTag(8);
        output.WriteUInt32(VersionV1);
      }
      if (HasPositional) {
        output.WriteRawTag(16);
        output.WriteBool(Positional);
      }
      if (HasPushToTalk) {
        output.WriteRawTag(24);
        output.WriteBool(PushToTalk);
      }
      if (HasVersionV2) {
        output.WriteRawTag(32);
        output.WriteUInt64(VersionV2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasVersionV1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VersionV1);
      }
      if (HasVersionV2) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(VersionV2);
      }
      if (HasPositional) {
        size += 1 + 1;
      }
      if (HasPushToTalk) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SuggestConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasVersionV1) {
        VersionV1 = other.VersionV1;
      }
      if (other.HasVersionV2) {
        VersionV2 = other.VersionV2;
      }
      if (other.HasPositional) {
        Positional = other.Positional;
      }
      if (other.HasPushToTalk) {
        PushToTalk = other.PushToTalk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VersionV1 = input.ReadUInt32();
            break;
          }
          case 16: {
            Positional = input.ReadBool();
            break;
          }
          case 24: {
            PushToTalk = input.ReadBool();
            break;
          }
          case 32: {
            VersionV2 = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VersionV1 = input.ReadUInt32();
            break;
          }
          case 16: {
            Positional = input.ReadBool();
            break;
          }
          case 24: {
            PushToTalk = input.ReadBool();
            break;
          }
          case 32: {
            VersionV2 = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Used to send plugin messages between clients
  /// </summary>
  public sealed partial class PluginDataTransmission : pb::IMessage<PluginDataTransmission>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PluginDataTransmission> _parser = new pb::MessageParser<PluginDataTransmission>(() => new PluginDataTransmission());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PluginDataTransmission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MumbleProto.MumbleReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PluginDataTransmission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PluginDataTransmission(PluginDataTransmission other) : this() {
      _hasBits0 = other._hasBits0;
      senderSession_ = other.senderSession_;
      receiverSessions_ = other.receiverSessions_.Clone();
      data_ = other.data_;
      dataID_ = other.dataID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PluginDataTransmission Clone() {
      return new PluginDataTransmission(this);
    }

    /// <summary>Field number for the "senderSession" field.</summary>
    public const int SenderSessionFieldNumber = 1;
    private readonly static uint SenderSessionDefaultValue = 0;

    private uint senderSession_;
    /// <summary>
    /// The session ID of the client this message was sent from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SenderSession {
      get { if ((_hasBits0 & 1) != 0) { return senderSession_; } else { return SenderSessionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        senderSession_ = value;
      }
    }
    /// <summary>Gets whether the "senderSession" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSenderSession {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "senderSession" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSenderSession() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "receiverSessions" field.</summary>
    public const int ReceiverSessionsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_receiverSessions_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> receiverSessions_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// The session IDs of the clients that should receive this message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> ReceiverSessions {
      get { return receiverSessions_; }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private readonly static pb::ByteString DataDefaultValue = pb::ByteString.Empty;

    private pb::ByteString data_;
    /// <summary>
    /// The data that is sent
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Data {
      get { return data_ ?? DataDefaultValue; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasData {
      get { return data_ != null; }
    }
    /// <summary>Clears the value of the "data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearData() {
      data_ = null;
    }

    /// <summary>Field number for the "dataID" field.</summary>
    public const int DataIDFieldNumber = 4;
    private readonly static string DataIDDefaultValue = "";

    private string dataID_;
    /// <summary>
    /// The ID of the sent data. This will be used by plugins to check whether they will
    /// process it or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataID {
      get { return dataID_ ?? DataIDDefaultValue; }
      set {
        dataID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "dataID" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDataID {
      get { return dataID_ != null; }
    }
    /// <summary>Clears the value of the "dataID" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDataID() {
      dataID_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PluginDataTransmission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PluginDataTransmission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderSession != other.SenderSession) return false;
      if(!receiverSessions_.Equals(other.receiverSessions_)) return false;
      if (Data != other.Data) return false;
      if (DataID != other.DataID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSenderSession) hash ^= SenderSession.GetHashCode();
      hash ^= receiverSessions_.GetHashCode();
      if (HasData) hash ^= Data.GetHashCode();
      if (HasDataID) hash ^= DataID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSenderSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(SenderSession);
      }
      receiverSessions_.WriteTo(output, _repeated_receiverSessions_codec);
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HasDataID) {
        output.WriteRawTag(34);
        output.WriteString(DataID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSenderSession) {
        output.WriteRawTag(8);
        output.WriteUInt32(SenderSession);
      }
      receiverSessions_.WriteTo(ref output, _repeated_receiverSessions_codec);
      if (HasData) {
        output.WriteRawTag(26);
        output.WriteBytes(Data);
      }
      if (HasDataID) {
        output.WriteRawTag(34);
        output.WriteString(DataID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSenderSession) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SenderSession);
      }
      size += receiverSessions_.CalculateSize(_repeated_receiverSessions_codec);
      if (HasData) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (HasDataID) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PluginDataTransmission other) {
      if (other == null) {
        return;
      }
      if (other.HasSenderSession) {
        SenderSession = other.SenderSession;
      }
      receiverSessions_.Add(other.receiverSessions_);
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasDataID) {
        DataID = other.DataID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SenderSession = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            receiverSessions_.AddEntriesFrom(input, _repeated_receiverSessions_codec);
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            DataID = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SenderSession = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            receiverSessions_.AddEntriesFrom(ref input, _repeated_receiverSessions_codec);
            break;
          }
          case 26: {
            Data = input.ReadBytes();
            break;
          }
          case 34: {
            DataID = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
